"""DO NOT rename this file!"""
import os
import re
import json
import textwrap
import sys
import http.client
import openai
from openai import OpenAI

from tqdm import tqdm


fewshot_examples = [('import data.real.basic\n\n-- defining the original function f\ndef f (x : ℝ) : ℝ := 2*x + 3\n\n-- defining the transformation\ndef g (x : ℝ) : ℝ := f (x - 2) + 1\n\n-- simplifying the transformation\ndef h (x : ℝ) : ℝ := 2*x\n\n-- proving that g and h are the same\nexample (x : ℝ) : g x = h x :=\nbegin\n  dsimp [g, f, h],\n  ring,\nend', 'Given the function f(x) = 2x + 3, what is the function g(x) which is the result of f(x) shifted 2 units to the right and 1 unit up?', 'The function g(x) can be obtained by transforming the original function f(x). Shifting f(x) two units to the right can be achieved by replacing x in f(x) with (x-2). Shifting it one unit up can be achieved by adding 1 to the function. So, the function g(x) is g(x) = 2(x - 2) + 3 + 1 which simplifies to g(x) = 2x - 4 + 3 + 1 = 2x.'), ('def scale_factor : ℕ := 50\ndef actual_height : ℕ := 10\ndef model_height := actual_height / scale_factor\n\n#eval model_height -- outputs 0.2', 'A model house is being built on a scale of 1:50. If the actual height of the house is 10 meters, what would be the height of the model?', 'The scale given is 1:50. This means that 1 unit of measurement on the model corresponds to 50 units on the actual house. So, to find the height of the model, we just need to divide the actual height by the scale factor. In this case, the actual height is 10 meters, and the scale is 50. Dividing 10 by 50 gives us 0.2. Therefore, the height of the model is 0.2 meters.'), ('import data.real.basic\n\n-- Define the length and width of the garden\ndef garden_length : ℝ := 10\ndef garden_width : ℝ := 6\n\n-- Define the slope of the path\nnoncomputable def path_slope : ℝ := garden_length / garden_width\n\n-- Prove that the slope of the path is 5/3\nexample : path_slope = 5 / 3 :=\nbegin\n  unfold path_slope,\n  rw [garden_length, garden_width],\n  norm_num,\nend', 'John wants to build a straight path in his rectangular garden. The garden is 10 feet long and 6 feet wide. John starts at the bottom left corner of the garden and ends at the top right corner. What is the slope of the path John wants to build?', 'To find the slope of a line, we need to find the rate of change in the vertical direction (rise) per unit change in the horizontal direction (run). In this case, the length of the garden represents the rise, and the width represents the run. The rise is 10 feet, and the run is 6 feet. So the slope m of the path John wants to build is m = rise/run = 10/6 = 5/3.'), ('import data.real.basic\n\n-- Define the function f\ndef f (x y : ℝ) := 3*x^2*y + 2*y^3 - 4*x + 7\n\n-- Differentiate f with respect to x\ndef df_dx (x y : ℝ) := 6*x*y - 4\n\n-- Differentiate f with respect to y\ndef df_dy (x y : ℝ) := 3*x^2 + 6*y^2', 'Suppose we have a function f(x, y) = 3x^2y + 2y^3 - 4x + 7. Find the partial derivatives of f with respect to x and y.', 'The partial derivative of a function with respect to a variable is the derivative of the function with respect to that variable, treating all other variables as constants. \n\nThe partial derivative of f with respect to x, denoted as ∂f/∂x, is found by differentiating f(x, y) with respect to x and treating y as a constant. Doing so, we get 6xy - 4.\n\nThe partial derivative of f with respect to y, denoted as ∂f/∂y, is found by differentiating f(x, y) with respect to y and treating x as a constant. Doing so, we get 3x^2 + 6y^2.'), ('import data.real.basic\n\n-- We will use real numbers to represent the dollar amounts.\n\n-- We first state the problem as a theorem. The theorem states that if John has 3.45 dollars\n-- and Mary has 5.75 dollars, and they both spend 1.20 dollars, then they have 6.80 dollars left.\ntheorem john_and_mary : (3.45 + 5.75) - (1.2 + 1.2) = 6.80 :=\nbegin\n  -- The proof is a simple calculation.\n  norm_num,\nend', 'John has 3.45 dollars and Mary has 5.75 dollars. They both spent 1.20 dollars on candy. How much money do they have left in total?', 'Initially, John has 3.45 dollars and Mary has 5.75 dollars. So, combined they have 3.45 + 5.75 = 9.20 dollars. Now, if they both spent 1.20 dollars on candy that means they spent 1.20 + 1.20 = 2.40 dollars in total. So, they have 9.20 - 2.40 = 6.80 dollars left in total.'), ("import data.real.basic\n\n-- Let's denote the original number as `x`\nvariable (x : ℝ)\n\n-- John's operation can be described by the equation `0.5 * x * -2 = -30`\n-- We can transform this equation to find `x`\nexample (h : 0.5 * x * -2 = -30) : x = 30 :=\nbegin\n  -- divide both sides by -1\n  have h₁ : - (0.5 * x * -2) = 30, by linarith,\n  -- simplifying gives `x = 30`\n  linarith,\nend", 'John has 50% of a number. He multiplies this number by -2 and ends up with -30. What is the original number?', 'Since John multiplies the half of the original number by -2 and gets -30, we can write the equation: 0.5 * x * -2 = -30. Here, x is the original number. We can simplify this equation by dividing both sides by -1, which gives us: -0.5 * x * 2 = 30. This further simplifies to: x = 30. So, the original number is 30.'), ('import data.real.basic\n\n-- defining variables\nvariables (A B : ℝ)\n\n-- defining the assumptions\ndef parallelogram (A B : ℝ) := A + B = 180\ndef given (A B : ℝ) := A = 120 ∧ B = 80\n\n-- proof that the given conditions contradict the definition of a parallelogram\nexample (h : given A B) : ¬ parallelogram A B :=\nbegin\n  unfold parallelogram,\n  unfold given at h,\n  have hA : A = 120, from and.left h,\n  have hB : B = 80, from and.right h,\n  subst hA,\n  subst hB,\n  linarith,\nend', 'In a parallelogram ABCD, ∠A = 120° and ∠B = 80°. Are ∠C and ∠D supplementary? If yes, prove it. If no, provide a counterexample.', "In a parallelogram, consecutive angles are supplementary, which means their measures add up to 180°. Here, ∠A and ∠B are consecutive angles, and their measures add up to 120° + 80° = 200°, which is not equal to 180°. Hence, our initial statement that ABCD is a parallelogram is incorrect. Therefore, ∠C and ∠D can't be supplementary as per the given conditions."), ('import data.real.basic\n\nvariables (a : ℝ) (n m : ℕ)\n\ntheorem exp_mul : (a^n)^m = a^(n*m) :=\nbegin\n  rw [pow_mul],\nend', 'Prove that for any real numbers `a` and `b`, and any positive integers `n` and `m`, the following equation holds: `(a^n)^m = a^(n*m)`', "The equation `(a^n)^m = a^(n*m)` can be proven by understanding the properties of exponents. \n\nStarting with the left side of the equation `(a^n)^m`, it means that `a^n` is being multiplied by itself `m` times. \n\nOn the other hand, the right side of the equation `a^(n*m)` means that `a` is being multiplied by itself `n*m` times.\n\nGiven that multiplication is commutative (order doesn't matter), the number of times `a` is multiplied in both sides of the equation is the same, hence they are equal."), ('import data.nat.basic\nopen nat\n\ntheorem two_digit_number (a b : ℕ) (ha : 1 ≤ a ∧ a ≤ 9) (hb : 1 ≤ b ∧ b ≤ 9) (h : a ≠ b) : \n10 * a + b = a * 10 + b :=\nbegin\n    rw mul_comm a 10, \nend', 'Consider any two-digit number ab, where a and b are distinct digits from 1 to 9. Show that the number can be expressed as 10a + b.', 'A two-digit number ab is composed of tens and ones. The digit a represents the tens place, and the digit b represents the ones place. In base 10, the tens place is worth 10 times its face value (a), and the ones place is worth its face value (b). Therefore, any two-digit number ab can be expressed as 10a + b.'), ("import data.real.basic\n\n-- Alice's and Bob's monthly allowances\ndef Alice_allowance := 500\ndef Bob_allowance := 400\n\n-- The percentage of their allowances that Alice and Bob save\ndef Alice_savings_percentage := 20/100\ndef Bob_savings_percentage := 25/100\n\n-- The amount that Alice and Bob save each month\ndef Alice_monthly_savings := Alice_allowance * Alice_savings_percentage\ndef Bob_monthly_savings := Bob_allowance * Bob_savings_percentage\n\n-- The amount that Alice and Bob save in a year\ndef Alice_annual_savings := Alice_monthly_savings * 12\ndef Bob_annual_savings := Bob_monthly_savings * 12\n\n-- Prove that Alice and Bob save the same amount in a year\ntheorem Alice_Bob_equal_savings :\nAlice_annual_savings = Bob_annual_savings :=\nbegin\n  unfold Alice_annual_savings,\n  unfold Bob_annual_savings,\n  unfold Alice_monthly_savings,\n  unfold Bob_monthly_savings,\n  unfold Alice_savings_percentage,\n  unfold Bob_savings_percentage,\n  unfold Alice_allowance,\n  unfold Bob_allowance,\n  norm_num,\nend", 'Alice saves 20% of her monthly allowance of $500 for a year. Bob saves 25% of his monthly allowance of $400 for the same period. Who saves more in a year and by how much?', "Firstly, we need to calculate how much Alice and Bob save each month. \n\nAlice saves 20% of her monthly allowance, which is $500. So, Alice's savings per month is 20/100 * $500 = $100. \n\nBob saves 25% of his monthly allowance, which is $400. So, Bob's savings per month is 25/100 * $400 = $100. \n\nAs we can see, both Alice and Bob save the same amount each month, which is $100. \n\nNow, let's calculate how much they save in a year. Since a year has 12 months, both of them will save 12 * $100 = $1200 for a year. \n\nTherefore, neither Alice nor Bob saves more in a year. They both save the same amount, which is $1200."), ('import data.real.basic\n\n-- Define the function for the rate of filling\ndef F (t : ℝ) := 20*t\n\n-- Define the function for the rate of draining\ndef D := 50\n\n-- Define the integral of the rate of filling from 0 to 10\ndef fill_volume := (F 10) * 10\n\n-- Define the time it takes to drain the tank\nnoncomputable def drain_time (v : ℝ) := v / D\n\n-- Main theorem\ntheorem tank_empty_time : \n  let filled_vol := fill_volume in\n  let time_to_empty := drain_time filled_vol in\n  time_to_empty = filled_vol / D :=\nbegin\n  simp [fill_volume, drain_time],\nend', "Let's consider a tank with a capacity of 1000 liters that is initially empty. A pipe is filling the tank at a rate given by the function F(t) = 20t liters per hour, where t is the time in hours. After 10 hours, the pipe is turned off, and a leak at the bottom of the tank starts draining water at a rate of 50 liters per hour. Determine when the tank will be empty.", 'Firstly, we need to calculate the amount of water that was filled in the tank in the first 10 hours. We can find this by integrating the function F(t) = 20t from 0 to 10, which will give us the total volume of water filled in the tank. \n\nThen, we start to drain the tank at a rate of 50 liters per hour. We need to calculate the time it takes for this volume of water to be drained. This can be found by dividing the total volume of water by the rate of draining.'), ('import data.real.basic\n\n-- defining the equation\ndef eqn (x y : ℝ) : Prop := 3*x - 4*y = 12\n\n-- proof\nexample : eqn (20/3) 2 :=\nbegin\n    unfold eqn, \n    norm_num,\nend', 'Given the linear equation 3x - 4y = 12, find the value of x when y = 2.', 'First, we substitute y = 2 into the equation, we get 3x - 4*2 = 12.\nThis simplifies to 3x - 8 = 12.\nThen, we add 8 to both sides to isolate x, we get 3x = 20.\nFinally, we divide both sides by 3, we get x = 20/3.'), ('open nat \n\ndef students : ℕ := 30\ndef basketball : ℕ := students / 3  -- equals 10\ndef soccer : ℕ := students / 5   -- equals 6\ndef baseball : ℕ := students - basketball - soccer -- equals 14\n\nexample : basketball < baseball ∧ soccer < baseball :=\nbegin \n  unfold basketball soccer baseball, \n  split,\n  -- show basketball < baseball\n  exact dec_trivial,\n  -- show soccer < baseball\n  exact dec_trivial,\nend', 'In a class of 30 students, 1/3 of the students like basketball, 1/5 of the students like soccer, and the rest like baseball. How many students like each sport and which sport is the most popular?', 'First, we need to find out how many students like each sport. \nFor basketball, 1/3 of the students equals 1/3 * 30 = 10 students. \nFor soccer, 1/5 of the students equals 1/5 * 30 = 6 students. \nFor baseball, since the rest of the students like it, we subtract the number of students who like basketball and soccer from the total number of students: 30 - 10 - 6 = 14 students. \n\nSecond, we need to compare the number of students who like each sport to find out which sport is the most popular. \nBasketball is liked by 10 students, soccer is liked by 6 students, and baseball is liked by 14 students. Therefore, baseball is the most popular sport among the students.'), ('import data.real.basic\n\n-- The measure of a right angle in degrees\ndef right_angle : ℝ := 90\n\n-- The measure of the angle that Bob is drawing\nnoncomputable def bob_angle : ℝ := 2 / 3 * right_angle\n\n-- Prove that the measure of the angle that Bob is drawing is 60 degrees\nexample : bob_angle = 60 := \nbegin\n  unfold bob_angle,\n  unfold right_angle,\n  norm_num,\nend', 'Bob is drawing an angle on a piece of paper. The angle he is drawing is 2/3 of a right angle. What is the measure of the angle that Bob is drawing?', 'We know that a right angle is 90 degrees. Bob is drawing an angle that is 2/3 of a right angle. Therefore, we can find the measure of the angle by multiplying 90 degrees by 2/3. This gives us 60 degrees. So, the measure of the angle that Bob is drawing is 60 degrees.'), ("import data.real.basic\n\n-- Let's define x as the number of T-shirts sold\nvariable x : ℝ\n\n-- Let's write the equation for revenue\ndef R (x : ℝ) : ℝ := 25*x + 150\n\n-- Let's set up the equation to solve for x\ndef equation_to_solve (x : ℝ) : Prop := R x = 725\n\n-- Solving the equation\nexample : ∃ x, equation_to_solve x :=\nbegin\n  use 23, -- Guessing a solution\n  unfold equation_to_solve, -- Expanding the definition of the equation\n  unfold R, -- Expanding the definition of R\n  norm_num, -- Simplifying the arithmetic expression\nend", "A company sells T-shirts for a fixed price, which includes a base cost for material and labor, as well as a mark-up for profit. The company's total revenue R (in USD) from the sale of x T-shirts can be represented by the equation R = 25x + 150. Find the number of T-shirts the company must sell to earn a total revenue of $725.", 'To find the number of T-shirts, we need to solve the equation 25x + 150 = 725 for x. \n\nFirst, we subtract 150 from both sides of the equation to get 25x = 575. \n\nNext, we divide both sides of the equation by 25 to get x = 23. \n\nSo, the company must sell 23 T-shirts to earn a total revenue of $725.'), ('def tuition_cost (credit_hours : ℕ) : ℕ := 600 + 50 * credit_hours\n\ndef proof : ℕ :=\n  let total_cost := 1100 in\n  let flat_fee := 600 in\n  let cost_per_credit_hour := 50 in\n  let cost_on_credit_hours := total_cost - flat_fee in\n  cost_on_credit_hours / cost_per_credit_hour\n\n#eval proof -- output is 10', "The local community college charges a flat tuition fee of $600 per semester plus $50 for each credit hour a student takes. If a student's total bill for the semester was $1100, how many credit hours did the student take?", 'The tuition cost is composed of a flat fee of $600 plus $50 for each credit hour. Therefore, if the total cost was $1100, we can find out how much was spent on credit hours by subtracting the flat fee from the total cost. This gives us $1100 - $600 = $500. Now, if each credit hour costs $50, we can find out how many credit hours were taken by dividing this amount by the cost per credit hour. So, $500 / $50 = 10 credit hours. Therefore, the student took 10 credit hours.'), ("import data.real.basic\n\n-- define the revenue function\ndef R : ℝ → ℝ := λ x, 2*x^2 - 3*x + 5\n\n-- define the derivative of the revenue function\ndef R' : ℝ → ℝ := λ x, 4*x - 3\n\n-- prove that the derivative of the revenue function is as we computed\nlemma derivative_of_R (x : ℝ) : R' x = 4*x - 3 :=\nbegin\n  simp [R'],\nend\n\n-- prove that the revenue is increasing at a rate of $197,000 per unit when 50 units are sold\nlemma rate_of_change_at_50 : R' 50 = 197 :=\nbegin\n  rw derivative_of_R,\n  norm_num,\nend", 'A company has determined that its revenue R (in thousands of dollars) from the sale of x units of a certain product is given by R = 2x^2 - 3x + 5. Determine the rate at which revenue is changing with respect to the number of units sold when 50 units are sold.', "To find the rate at which revenue is changing with respect to the number of units sold, we need to find the derivative of the revenue function R with respect to x, which is R' = 4x - 3. \n\nPlug x = 50 into the derivative to find the rate at which revenue is changing at that number of units sold. So, R'(50) = 4*50 - 3 = 197. Hence, the revenue is increasing at a rate of $197,000 per unit when 50 units are sold."), ("import data.real.basic\n\n-- Let's define the total number of students, and the number of students studying each major\ndef total_students : ℝ := 500\ndef eng_students : ℝ := 250\ndef bus_students : ℝ := 100\ndef arts_students : ℝ := total_students - eng_students - bus_students\n\n-- Now, we calculate the percentage of students in each major\nnoncomputable def eng_percentage : ℝ := (eng_students / total_students) * 100\nnoncomputable def bus_percentage : ℝ := (bus_students / total_students) * 100\nnoncomputable def arts_percentage : ℝ := (arts_students / total_students) * 100\n\nexample : eng_percentage = 50 ∧ bus_percentage = 20 ∧ arts_percentage = 30 :=\nbegin\n  unfold eng_percentage bus_percentage arts_percentage eng_students bus_students arts_students total_students, \n  norm_num,\nend", 'In a university, there are 500 students. Out of these, 250 students are studying Engineering, 100 are studying Business, and the rest are studying Arts. If a survey is conducted among the students to collect data on their chosen fields of study, what percentage of students are studying Engineering, Business, and Arts?', 'The total number of students is 500. The number of students studying Engineering is 250, Business is 100, and the rest, which is 500 - 250 - 100 = 150, are studying Arts.\n\nSo, the percentage of students studying Engineering is (250/500) * 100 = 50%.\n\nThe percentage of students studying Business is (100/500) * 100 = 20%.\n\nAnd, the percentage of students studying Arts is (150/500) * 100 = 30%.'), ('import data.real.basic\n\n-- defining the variables\ndef l : ℝ := 12 -- length of the garden in feet\ndef w : ℝ := 10 -- width of the garden in feet\ndef c : ℝ := 2 -- cost per foot of fence in dollars\n\n-- defining the function for perimeter of rectangle\ndef perimeter (l w : ℝ) : ℝ := 2*(l+w) \n\n-- defining the function for cost of fence\ndef cost (p c : ℝ) : ℝ := p*c\n\n-- calculating the perimeter\ndef p := perimeter l w\n\n-- calculating the cost\ndef total_cost := cost p c\n\n#eval total_cost', 'John has a rectangular garden which is 12 feet long and 10 feet wide. He wants to build a fence around the garden. If one foot of fence costs $2, how much will he spend on the fence?', 'First, we need to find out the perimeter of the garden. The perimeter of a rectangle is calculated as twice the sum of the length and width. So, the perimeter of the garden is 2*(12+10) = 44 feet. \n\nThen, we need to calculate the cost of the fence. Since one foot of fence costs $2, therefore, the total cost of the fence will be 44 feet * $2/foot = $88.'), ('import data.real.basic\n\ndef h (t : ℝ) := -t^2 + 4*t + 1\n\ntheorem max_height : h 2 = 5 :=\nbegin\n  unfold h,\n  rw pow_two,\n  norm_num,\nend', 'There is a quadratic function that models the height of a thrown ball over time. The function is h(t) = -t^2 + 4t + 1, where h is the height, and t is the time in seconds. What is the maximum height the ball reaches, and at what time does it reach this height?', 'To find the maximum height, we first need to find the vertex of the parabola represented by this quadratic function. We know the t-coordinate of the vertex can be found using the formula -b/2a. In this case, a = -1, and b = 4. Substituting these values in, we get -4 / -2 = 2. Therefore, the ball reaches its maximum height at t = 2 seconds. \n\nTo find the maximum height, we substitute t = 2 into the function: h(2) = -(2)^2 + 4*(2) + 1 = -4 + 8 + 1 = 5. \n\nSo, the maximum height the ball reaches is 5 meters, and it reaches this height at 2 seconds.'), ('import data.nat.basic\n\ndef f (x : ℕ) := 3*(x*x) + 2*x + 1\n\n#eval f 5', 'A company wants to sell a new product and it expects the number of its sales to be modeled by the function `f(x) = 3x^2 + 2x + 1`, where `x` is the number of weeks since the start of the sales and `f(x)` is the number of products sold. If the company wants to know how many products will be sold in the 5th week, how should it calculate?', 'To calculate the number of products sold in the 5th week, the company should substitute `x` with `5` in the function `f(x) = 3x^2 + 2x + 1`. \n\nSo the calculation should be as: \n\nf(5) = 3*(5)^2 + 2*5 + 1 = 75 + 10 + 1 = 86\n\nSo, by the model, the company can expect to sell 86 products in the 5th week.'), ('import data.real.basic\n\n-- defining the variables\ndef john_feathers := 4\ndef mary_feathers := 6\n\n-- total number of feathers\ndef total_feathers := john_feathers + mary_feathers\n\n-- each person receives half of the total feathers\ndef each_share := total_feathers / 2\n\n-- formal proof\nexample : each_share = 5 := \nbegin\n  unfold each_share total_feathers john_feathers mary_feathers, \n  norm_num,\nend', 'John and Mary were playing in the park. John found 4 beautiful feathers and Mary found 6 feathers. They decided to share all the feathers equally. If they share the feathers equally, what fraction of the total feathers does each person receive?', "First, let's find out how many feathers they found in total. John found 4 feathers and Mary found 6 feathers. So, they found 4 + 6 = 10 feathers. \nThey decided to share all the feathers equally. Therefore, each person receives half of the total feathers. \nTo represent this as a fraction, we can see that half of 10 is 5. So each person receives 5 out of 10 feathers. \nIn terms of fractions, this is represented as 5/10. Hence, each person receives 5/10 of the total feathers."), ("open nat\n\n-- define the ratio of boys to girls\ndef ratio_boys_to_girls (boys : ℕ) (girls : ℕ) : ℕ := boys / girls\n\n-- define the total number of boys\ndef total_boys : ℕ := 60\n\n-- calculate the number of 'groups' of boys\ndef groups_of_boys : ℕ := total_boys / (ratio_boys_to_girls 3 2)\n\n-- calculate the number of girls\ndef total_girls : ℕ := groups_of_boys * 2\n\n#eval total_girls    -- this will output 40", 'In a school, the ratio of boys to girls is 3:2. If there are 60 boys in the school, how many girls are there?', 'The ratio of boys to girls is 3:2, which means for every 3 boys, there are 2 girls. If there are 60 boys, we can think of this as 20 groups of 3 boys (because 60 divided by 3 equals 20). Since for each group of 3 boys there are 2 girls, then for 20 groups of 3 boys, there will be 20 groups of 2 girls. Therefore, the number of girls is 20 groups times 2 girls per group, which equals 40 girls.'), ('def distribute_apples (total_apples : ℕ) (children : ℕ) : ℕ := total_apples / children\ndef give_away_apples (apples : ℕ) (give_away : ℕ) : ℕ := apples - give_away\n\nexample : distribute_apples 50 5 = 10 := by refl\nexample : give_away_apples 10 2 = 8 := by refl', 'Given that there are 50 apples and 5 children. If each child receives an equal number of apples, how many apples does each child get? After a while, one child gives 2 of his apples to another child. How many apples does the first child have now?', 'Initially, each child receives an equal number of apples, which means we need to divide the total number of apples by the total number of children. So, 50 apples divided by 5 children equals 10 apples per child. After one child gives away 2 of his apples, he will have 10 - 2 = 8 apples left.'), ('import data.real.basic\n\nopen_locale classical\n\nlemma multiply_fractions : (1/2:ℝ) * (1/4:ℝ) = 1/8 :=\nbegin\n  norm_num,\nend', 'If we multiply 1/2 by 1/4, what is the result?', 'When multiplying fractions, you simply multiply the numerators (the top numbers) together and the denominators (the bottom numbers) together. So, if we multiply 1/2 by 1/4, we get 1*1=1 for the numerator and 2*4=8 for the denominator. Therefore, 1/2 multiplied by 1/4 equals 1/8.'), ('import data.real.basic\n\n-- The original function\ndef f (x : ℝ) := x^2\n\n-- The transformed function\ndef g (x : ℝ) := (x - 3)^2 + 2\n\n-- Proof that g(x) is the transformation of f(x)\nexample (x : ℝ) : g x = f (x - 3) + 2 :=\nbegin\n  unfold g f,\n  -- There is no need to simplify or rewrite anything,\n  -- because the expression on the right-hand side\n  -- is already equal to the expression on the left-hand side\nend', 'Let the function f(x) = x^2. The function g(x) is a transformation of f(x) such that it is shifted 3 units to the right and 2 units up. What is the equation of g(x)?', 'The transformation of a function that shifts it to the right by a units and up by b units can be represented as g(x) = f(x - a) + b. In this case, the function f(x) = x^2 is shifted 3 units to the right and 2 units up. Therefore, the equation of g(x) is g(x) = (x - 3)^2 + 2.'), ('import data.nat.basic\n\ntheorem model : ∀ (n : ℕ), n + 1 > n :=\nbegin\n  intro n,\n  apply nat.lt_succ_self,\nend', 'Given a set of data points (1, 2), (2, 3), (3, 4), (4, 5), and (5, 6), determine the pattern, create a mathematical model for it, and use this model to predict the y-value when x=10.', 'The pattern in the given set of data points seems to be that the y-value is always one unit greater than the x-value. This suggests a simple linear relationship between x and y, which we can write as y = x + 1. If we substitute x = 10 into this equation, we get y = 10 + 1, or y = 11. Therefore, according to our model, when x = 10, y should be 11.'), ("import data.real.basic\n\n-- define a theorem\ntheorem new_price_of_shirt : (60 : ℝ) * 0.7 = 42 :=\nbegin\n  -- This is a direct computation. Lean's simplifier can handle this.\n  norm_num,\nend", 'John bought a shirt for $60. During a clearance sale, the store reduced the price of the shirt by 30%. What is the new price of the shirt?', 'The store reduced the price of the shirt by 30%. This means the new price of the shirt is 70% of the original price. To find 70% of $60, we multiply $60 by 0.7 (which is the decimal equivalent of 70%). So, $60 * 0.7 = $42. Therefore, the new price of the shirt is $42.'), ('import data.real.basic\n\nopen real\n\n-- Proof\nexample : (0.4 / 2 = 0.2) :=\nbegin\n  norm_num,\nend', 'If we have 0.4 of a pizza and we want to split it equally among 2 friends, how much pizza does each friend get?', 'We can solve this problem by dividing 0.4 by 2. When we do this, we find that each friend gets 0.2 of the pizza.'), ('example (x y : ℤ) (h1 : x % 2 = 0) (h2 : y % 2 = 1) : (x*y) % 2 ≠ 0 ∨ (x*y) % 2 = 0 :=\nbegin\n  by_cases (x*y) % 2 = 0,\n  { right, assumption, },\n  { left, assumption, },\nend', 'If you multiply an even rational number by an odd rational number, will the result always be an even rational number?', 'No, the result will not always be an even rational number. For example, if we take the even rational number 2/1 and the odd rational number 3/1, and multiply them, we get 6/1 which is an even rational number. However, if we take the even rational number 2/1 and the odd rational number 1/2, and multiply them, we get 1, which is not an even rational number. Thus, the result of multiplying an even rational number and an odd rational number can be either even or odd.'), ('import data.real.basic\n\n-- the problem\ndef problem (x : ℝ) : Prop := 3*x - 5 = 16\n\n-- the solution\ndef solution : ℝ := 7\n\n-- the proof\ntheorem solution_is_correct : problem solution :=\nbegin\n  unfold problem,\n  unfold solution,\n  norm_num,\nend', 'Solve the equation for x: 3x - 5 = 16', 'To solve for x, we first need to get rid of the number subtracting from x on the left side of the equation. We do this by adding 5 to both sides of the equation. This gives us:\n\n3x - 5 + 5 = 16 + 5,\n\nwhich simplifies to:\n\n3x = 21\n\nThen, we need to get rid of the number multiplying x on the left side of the equation. We do this by dividing both sides of the equation by 3. This gives us:\n\n3x / 3 = 21 / 3,\n\nwhich simplifies to:\n\nx = 7\n\nSo the solution to the equation is x = 7.'), ('def rectangle_area (l w : ℕ) : ℕ := l * w\ndef square_area (s : ℕ) : ℕ := s * s\n\nexample : rectangle_area 6 3 > square_area 4 :=\nbegin\n  simp [rectangle_area, square_area],\n  exact dec_trivial,\nend', 'Given a rectangle with length 6 units and width 3 units, and a square with side 4 units, which has a larger area?', 'To find the area of a rectangle, we multiply the length by the width. So, the area of the rectangle is 6 units * 3 units = 18 square units.\n\nTo find the area of a square, we multiply the side by itself. So, the area of the square is 4 units * 4 units = 16 square units.\n\nTherefore, the rectangle has a larger area than the square.'), ('import data.real.basic\n\n-- defining the rectangle and the points\ndef AB : ℝ := 8\ndef BC : ℝ := 6\ndef AE : ℝ := 3\n\n-- defining the lengths AD and ED\ndef AD : ℝ := BC\ndef ED : ℝ := AD - AE\ndef EC : ℝ := BC\n\n-- proof that EC = 6 cm\nexample : EC = BC := \nbegin\n  have h1 : AD = BC, from rfl,\n  have h2 : ED = AD - AE, from rfl,\n  rw h1 at h2,\n  have h3 : EC = BC, from rfl,\n  exact h3,\nend', 'In a rectangle ABCD, AB = 8 cm, BC = 6 cm. E is a point on AD such that AE = 3 cm. Calculate the length of EC.', 'Since ABCD is a rectangle, the opposite sides are equal. That means, AD = BC = 6 cm. \nWe know that AE = 3 cm. The line segment AD can be divided into two parts: AE and ED. So, ED = AD - AE = 6 cm - 3 cm = 3 cm.\nNow, since ABCD is a rectangle, the opposite sides are equal. That means, ED = BC = 6 cm.\nSo, the length of EC is 6 cm.'), ('import data.real.basic\n\n-- defining the total number of students, the number of students who play basketball, soccer and both\ndef total_students : ℝ := 30\ndef basketball_players : ℝ := 10\ndef soccer_players : ℝ := 15\ndef both_sports_players : ℝ := 5\n\n-- defining the number of students who play neither sports\ndef neither_sports_players : ℝ := total_students - (basketball_players + soccer_players - both_sports_players)\n\n-- defining the function to calculate the probability\nnoncomputable def probability (favorable_outcomes : ℝ) (total_outcomes : ℝ) : ℝ := favorable_outcomes / total_outcomes\n\n-- proof that the probability that a student chosen at random plays neither basketball nor soccer is 1/3\nexample : probability neither_sports_players total_students = 1 / 3 :=\nbegin\n  unfold neither_sports_players probability,\n  norm_num [total_students, basketball_players, soccer_players, both_sports_players],\nend', 'In a class of 30 students, 10 students play basketball, 15 students play soccer, and 5 students play both basketball and soccer. What is the probability that a student chosen at random plays neither basketball nor soccer?', "First, we need to find the number of students who play at least one of the two sports. This means either they play basketball, or soccer, or both. We know that 10 students play basketball and 15 play soccer, but since 5 students play both, they are being counted twice in this total. Hence, the total number of students playing either basketball or soccer is 10 + 15 - 5 = 20 students.\n\nThe number of students who do not play either sport would then be the total number of students minus the number who play at least one sport. That's 30 - 20 = 10 students.\n\nThe probability of selecting a student who plays neither sport would be the number of students who play neither sport divided by the total number of students. So, the probability would be 10 / 30 = 1 / 3."), ('-- Lean does not have built-in support for multivariable calculus, so we cannot provide a formal proof in Lean 3.', 'Let f : ℝ² → ℝ be a function defined by f(x,y) = xy^3 - 2x^2y + y. Prove that the partial derivative of f with respect to x at the point (1,2) is -2.', 'The partial derivative of a function f(x,y) with respect to x, denoted as ∂f/∂x, is the derivative of the function with respect to x, treating y as a constant. For the given function f(x,y) = xy^3 - 2x^2y + y, the partial derivative with respect to x is given by ∂f/∂x = y^3 - 4xy. \n\nTo find the value of the partial derivative at the point (1,2), we substitute x = 1 and y = 2 into the partial derivative. This gives us ∂f/∂x = 2^3 - 4*1*2 = 8 - 8 = 0. \n\nHowever, we are asked to prove that the partial derivative of f with respect to x at the point (1,2) is -2. Therefore, there seems to be a mistake in the problem statement, as the computed value is 0, not -2.'), ('open nat\n\ndef num_of_pens (num_of_boxes : ℕ) (num_of_pens_per_box : ℕ) : ℕ := \nnum_of_boxes * num_of_pens_per_box\n\n#eval num_of_pens 5 10', 'Jack has 5 boxes of pens. Each box contains 10 pens. How many pens does Jack have in total?', 'To find the total number of pens Jack has, we need to multiply the number of boxes by the number of pens in each box. So, we have 5 (boxes) multiplied by 10 (pens per box), which gives us 50 pens. Therefore, Jack has 50 pens in total.'), ('import data.real.basic\n\nexample : (153 / 306 : ℝ) = (151 / 302 : ℝ) :=\nbegin\n  norm_num,\nend', 'If we have two equivalent fractions 3/6 and 1/2, and we add 150 to the numerator and 300 to the denominator of both fractions, will the resulting fractions still be equivalent?', 'Yes, the resulting fractions will still be equivalent. \n\nAdding 150 to the numerator of 3/6 gives us 153, and adding 300 to the denominator gives us 306. So the resulting fraction is 153/306. \n\nSimilarly, adding 150 to the numerator of 1/2 gives us 151, and adding 300 to the denominator gives us 302. So the resulting fraction is 151/302. \n\nThen we simplify both fractions. \n\nThe simplified form of 153/306 is 1/2, and the simplified form of 151/302 is also 1/2. \n\nSince both fractions simplify to the same value, they are equivalent. \n\nSo, the resulting fractions after adding 150 to the numerator and 300 to the denominator of 3/6 and 1/2 are still equivalent.'), ('import data.real.basic\n\n-- defining the initial length and width\ndef original_length : ℝ := 6\ndef original_width : ℝ := 4\n\n-- defining the increase in length and width\ndef increase_length : ℝ := 3\ndef increase_width : ℝ := 2\n\n-- defining the new length and width\ndef new_length : ℝ := original_length + increase_length\ndef new_width : ℝ := original_width + increase_width\n\n-- defining the original and new area\ndef original_area : ℝ := original_length * original_width\ndef new_area : ℝ := new_length * new_width\n\n-- proving the new area is 54\nexample : new_area = 54 :=\nbegin\n  unfold new_area new_length new_width,\n  rw [original_length, original_width, increase_length, increase_width],\n  norm_num,\nend', 'Sally has a rectangular garden that is 6 meters long and 4 meters wide. She wants to expand her garden by increasing the length by 3 meters and the width by 2 meters. What will be the area of her new garden?', "To find the area of a rectangle, we multiply its length by its width. Sally's original garden is 6 meters long and 4 meters wide, so it has an area of 24 square meters. She then expands her garden by 3 meters in length and 2 meters in width, making the new dimensions 9 meters by 6 meters. Multiplying these together, we find that the new area of her garden is 54 square meters."), ('import data.real.basic\n\n-- defining the points A and B\ndef A : ℝ × ℝ := (-4, -2)\ndef B : ℝ × ℝ := (2, 1)\n\n-- defining the slope function\nnoncomputable def slope (P Q : ℝ × ℝ) : ℝ := (Q.snd - P.snd) / (Q.fst - P.fst)\n\n-- proving the theorem\ntheorem slope_AB : slope A B = 1/2 :=\nbegin\n  unfold slope,\n  unfold A,\n  unfold B,\n  norm_num,\nend', "Let's consider two points on a line in a two-dimensional Cartesian coordinate system: A(-4, -2) and B(2, 1). If we say the slope of this line is m, prove that m = 1/2.", 'The slope of a line in a two-dimensional Cartesian coordinate system is calculated by the formula: m = (y2 - y1) / (x2 - x1), where (x1, y1) and (x2, y2) are the coordinates of two points on the line.\n\nSubstituting the coordinates of points A and B into the formula, we get:\nm = (1 - (-2)) / (2 - (-4)) = 3 / 6 = 1/2.\n\nTherefore, the slope of the line passing through points A and B is indeed 1/2.'), ('import data.real.basic\n\nnoncomputable def total_students : ℝ := 500\nnoncomputable def perc_basketball : ℝ := 0.6\nnoncomputable def perc_soccer : ℝ := 0.4\nnoncomputable def perc_both : ℝ := 0.1\n\nnoncomputable def num_basketball := total_students * perc_basketball\nnoncomputable def num_soccer := total_students * perc_soccer\nnoncomputable def num_both := total_students * perc_both\n\nnoncomputable def num_only_basketball := num_basketball - num_both\n\nnoncomputable def prob_only_basketball := num_only_basketball / total_students\n\nexample : prob_only_basketball = 0.5 :=\nbegin\n  unfold prob_only_basketball,\n  unfold num_only_basketball,\n  unfold num_basketball,\n  unfold num_both,\n  unfold total_students,\n  unfold perc_basketball,\n  unfold perc_both,\n  norm_num,\nend', 'In a school, there are 500 students in the 7th grade. Among these students, 60% like basketball, 40% like soccer, and 10% like both. What is the probability that a randomly selected 7th grader only likes basketball, not soccer?', "First, let's calculate the number of students who like each sport. The number of students who like basketball is 60% of 500, which is 300 students. The number of students who like soccer is 40% of 500, which is 200 students. Among these, there are 10% who like both sports, which is 50 students.\n\nSo, the number of students who only like basketball is the total number of basketball fans (300) minus those who also like soccer (50), which equals 250 students.\n\nThe probability that a randomly selected 7th grader only likes basketball and not soccer is the number of students who only like basketball divided by the total number of students. Therefore, the probability is 250 / 500 = 0.5 or 50%."), ('open nat\ndef candies_in_bag : ℕ := 36\ndef bags : ℕ := 2\ndef candies_in_two_bags : ℕ := candies_in_bag * bags\n#eval candies_in_two_bags  -- output is 72', "Tom has 24 bags of candies. Each bag contains 36 candies. Tom's friend, Jerry, helps him count the candies by first adding up the candies in 2 bags. How many candies does Jerry count in 2 bags?", 'Firstly, we need to find out how many candies are there in 1 bag. According to the problem, 1 bag has 36 candies. Therefore, in 2 bags, there will be 36 * 2 = 72 candies. So, Jerry counts 72 candies in 2 bags.'), ('open nat\n\n-- define the initial number of stamps John has\ndef john_initial_stamps : ℕ := 200\n\n-- define the number of stamps Mike gave to John\ndef mike_stamps : ℕ := 600\n\n-- define the number of stamps John gave to his brother\ndef john_brother_stamps : ℕ := 150\n\n-- calculate the total number of stamps John has after Mike gave him stamps\ndef john_after_mike : ℕ := john_initial_stamps + mike_stamps\n\n-- calculate the total number of stamps John has after he gave some to his brother\ndef john_final_stamps : ℕ := john_after_mike - john_brother_stamps\n\n-- prove that the final number of stamps John has is 650\nexample : john_final_stamps = 650 := by refl', 'John has a collection of 200 stamps. His friend Mike gave him 600 more stamps. However, John gave 150 stamps to his younger brother. How many stamps does John have now?', 'John had 200 stamps originally. After Mike gave him 600 more, the total number of stamps John had was 200 + 600 = 800. Then, John gave 150 stamps to his brother, so the number of stamps he had after that is 800 - 150 = 650. Therefore, John now has 650 stamps.'), ('import data.real.basic\n\n-- First, we define what it means for a function to be linear.\ndef is_linear (f : ℝ → ℝ) : Prop :=\n∃ (m b : ℝ), ∀ (x : ℝ), f x = m * x + b\n\n-- Next, we define what it means for a function to be a straight line.\ndef is_straight_line (f : ℝ → ℝ) : Prop :=\n∃ (m b : ℝ), ∀ (x y : ℝ), f x = m * x + b ∧ f y = m * y + b\n\n-- Now, we can prove that if a function is linear, then it is a straight line.\ntheorem linear_implies_straight_line\n  (f : ℝ → ℝ) (h : is_linear f) : is_straight_line f :=\nbegin\n  cases h with m h1,\n  cases h1 with b h2,\n  use [m, b],\n  intros x y,\n  split,\n  { apply h2 },\n  { apply h2 },\nend', 'Prove that the linear equation y = mx + b, where m and b are real numbers, represents a straight line in the Cartesian coordinate system.', 'The equation y = mx + b is in the slope-intercept form of a linear equation, where m is the slope of the line and b is the y-intercept. \n\nThe slope m represents the rate of change of y with respect to x. This rate of change is constant for a linear equation, which means that for any two points (x1, y1) and (x2, y2) on the line, the ratio (y2 - y1) / (x2 - x1) is always equal to m. This constant rate of change results in a straight line.\n\nThe y-intercept b is the value of y when x = 0. This tells us where the line crosses the y-axis, but does not affect the straightness of the line.\n\nTherefore, the equation y = mx + b always represents a straight line in the Cartesian coordinate system.'), ("import data.real.basic\n\n-- Let's define the rectangle\ndef rectangle (length : ℝ) (width : ℝ) := length * width\n\n-- Now we prove the area of the rectangle\nexample : rectangle 6 4 = 24 :=\nbegin\n  rw rectangle,\n  norm_num,\nend", 'If a rectangle has a length of 6 meters and a width of 4 meters, what is the area of the rectangle in square meters?', 'The area of a rectangle can be found by multiplying its length by its width. In this case, the rectangle has a length of 6 meters and a width of 4 meters. By multiplying these two measurements together, we get the area of the rectangle, which is 24 square meters.'), ('import data.nat.basic\n\nopen nat\n\n-- Defining the problem\ndef apples_initial : ℕ := 11\ndef apples_given : ℕ := 3\n\n-- Defining the subtraction operation\ndef apples_remaining (apples_initial apples_given : ℕ) : ℕ := apples_initial - apples_given\n\n-- Proving the theorem\ntheorem apples_left : apples_remaining apples_initial apples_given = 8 :=\nbegin\n  unfold apples_remaining,\n  exact rfl,\nend', 'If a child has 11 apples and then gives 3 apples to his friend, how many apples does the child have now?', 'The child initially had 11 apples. If he gives away 3 apples, we subtract 3 from 11. The subtraction operation gives us 8. So, the child has 8 apples now.'), ("import data.int.basic\n\nopen int\n\n-- John initially has $20\ndef john_money_initial : ℤ := 20\n\n-- The book costs $12\ndef book_cost : ℤ := 12\n\n-- John's money after buying the book is his initial money minus the cost of the book\ndef john_money_after : ℤ := john_money_initial - book_cost\n\n-- Proof that John has $8 left after buying the book\nexample : john_money_after = 8 :=\nbegin\n  unfold john_money_after,  -- replace `john_money_after` with its definition\n  unfold john_money_initial,  -- replace `john_money_initial` with its definition\n  unfold book_cost,  -- replace `book_cost` with its definition\n  exact rfl,  -- use the reflexivity of equality\nend", 'John has $20. He plans to buy a book that costs $12. How much money will John have left after buying the book?', 'John initially has $20. He spends $12 on a book. To find out how much money he has left, subtract the cost of the book from the amount of money he initially had. So, $20 - $12 = $8. Therefore, John will have $8 left after buying the book.'), ('import data.int.basic\n\n-- define the initial position\ndef initial_position : ℤ × ℤ := (10, 10)\n\n-- define the movement\ndef movement : ℤ × ℤ := (-8, -7)\n\n-- define the new position after movement\ndef new_position : ℤ × ℤ := (initial_position.1 + movement.1, initial_position.2 + movement.2)\n\n-- prove that the new position is (2, 3)\nexample : new_position = (2, 3) :=\nbegin\n  dsimp [new_position, movement, initial_position],\n  refl,\nend', 'James has a square poster of side length 10 units. He wants to shift the poster 8 units to the left and 7 units downwards. If we consider the original position of the poster as the origin point (0,0) on a coordinate plane, and the movement to the left as negative movement along the x-axis and the movement downward as negative movement along the y-axis, what are the new coordinates of the top right corner of the poster after the shift?', 'The original coordinates of the top right corner of the poster are (10, 10). When James moves the poster 8 units to the left, he is subtracting 8 from the x-coordinate. So the new x-coordinate is 10 - 8 = 2. When he moves the poster 7 units down, he is subtracting 7 from the y-coordinate. So the new y-coordinate is 10 - 7 = 3. Therefore, the new coordinates of the top right corner of the poster are (2, 3).'), ('import data.real.basic\n\n-- Define the function f\ndef f (x : ℝ) : ℝ := 2*x + 3\n\n-- Theorem statement\ntheorem add_const_to_func_eq_func_add_2c (x c : ℝ) : f (x + c) = f x + 2*c :=\nbegin \n  -- Start the proof\n  unfold f,                     -- Expand the definition of f\n  ring,                         -- Simplify using the ring properties of real numbers\nend', 'Let `f` be a function defined for all real numbers such that `f(x) = 2x + 3`. Let `c` be a constant real number. Prove that `f(x+c) = f(x) + 2c`.', 'We start by substituting `x+c` into `f(x)`. That gives us `f(x+c) = 2*(x+c) + 3`. We can distribute the `2` inside the parentheses, which gives us `2*x + 2*c + 3`. We can see that `2*x + 3` is `f(x)`, so we can rewrite our equation as `f(x+c) = f(x) + 2*c`. Hence, the statement is true.'), ('import data.real.basic\n\ndef love_math := {x : ℝ | 0 ≤ x ∧ x ≤ 1}\ndef like_algebra := {x : ℝ | 0 ≤ x ∧ x ≤ 1}\n\nvariables (a b : ℝ) (ha : a ∈ love_math) (hb : b ∈ like_algebra)\n\nexample : a = 0.6 ∧ b = 0.3 → a * b = 0.18 :=\nbegin\n  intro h,\n  rw h.1,\n  rw h.2,\n  norm_num,\nend\n\ndef expected_value (love_math like_algebra : ℝ) : ℝ :=\nlove_math * like_algebra + (1 - love_math * like_algebra) * 0\n\nexample : expected_value 0.6 0.3 = 0.18 :=\nbegin\n  unfold expected_value,\n  norm_num,\nend', 'In a school, 60% of the students love Mathematics, and out of those, 30% have a particular liking for Algebra. If a student is selected at random, what is the probability that the student loves Mathematics and also likes Algebra? What is the expected value of this distribution if we assign the value 1 to students who love Mathematics and like Algebra and 0 to all other students?', 'The problem is asking for the probability that both events (loving Mathematics and liking Algebra) happen together. This is the definition of the joint probability. The probability that a student loves Mathematics is given as 60%, or 0.6. The probability that a student likes Algebra given that they love Mathematics is 30%, or 0.3. Therefore, by the definition of joint probability, the probability that a student loves Mathematics and likes Algebra is 0.6 * 0.3 = 0.18, or 18%.\n\nThe expected value of this distribution is the sum of each outcome multiplied by its probability. Since we only have two outcomes (0 and 1), the expected value is 1 * 0.18 + 0 * (1 - 0.18) = 0.18.'), ('import data.real.basic\n\nvariables (x : ℝ) -- let x be the number of packs John bought\n#check 7.5*x -- this is the total number of cards John got', 'John is buying packs of trading cards. Each pack contains 7.5 cards (some packs contain a bonus half-card). If John bought x packs of trading cards, how many cards did John get in total?', 'Since each pack contains 7.5 cards, we can find the total number of cards John got by multiplying the number of packs he bought by 7.5. This can be expressed as 7.5*x.'), ('example (apples : ℕ) : apples = 7 → apples + 4 = 11 :=\nbegin\n  intro h1,\n  rw h1,\nend', 'Sarah has 7 apples. She buys 4 more apples. How many apples does Sarah have now?', 'Sarah initially has 7 apples. After buying 4 more, the total number of apples she has is the sum of the initial 7 and the newly bought 4. By performing the addition 7 + 4, we find that Sarah now has 11 apples.'), ('def rectangle_perimeter (length : ℕ) (width : ℕ) : ℕ := 2*(length + width)\ndef square_perimeter (side : ℕ) : ℕ := 4*side\n\ndef total_fence_needed (length_of_rectangle : ℕ) (width_of_rectangle : ℕ) (side_of_square : ℕ) : ℕ :=\nrectangle_perimeter length_of_rectangle width_of_rectangle + square_perimeter side_of_square\n\n#eval total_fence_needed 10 8 6', 'John has a rectangular garden that is 10 feet long and 8 feet wide. He also has a square garden that has sides of 6 feet. He wants to build a fence around both gardens. How many feet of fencing does he need?', 'To find out the total amount of fencing John needs, we need to calculate the perimeter of both the rectangular garden and the square garden. The perimeter of a rectangle is given by the formula 2*(length + width), and the perimeter of a square is given by 4*side. So, for the rectangular garden, the perimeter is 2*(10 + 8) = 36 feet. For the square garden, the perimeter is 4*6 = 24 feet. Adding these two perimeters together gives us 36 + 24 = 60 feet. So, John needs 60 feet of fencing.'), ('-- The formal proof in Lean 3 would require the development of a comprehensive library for Laplace transforms, which, to the best of our knowledge, does not currently exist. \n\n-- However, once such a library is developed, a formal proof would likely follow the same steps as the informal proof, making use of the rules for taking the Laplace transform of derivatives and the inverse Laplace transform. \n\n-- The lack of a formal proof here does not reflect an inability of Lean or formal methods to handle this problem, but rather reflects the current state of library development in this particular area of mathematics.', "Consider the ordinary differential equation (ODE) described by `y'' - 4y' + 4y = 0` with initial conditions `y(0) = 1` and `y'(0) = 0`. Determine the particular solution to this ODE using the method of Laplace transform.", "The Laplace transform is a powerful method which can convert an ordinary differential equation into an algebraic equation. \n\nFirstly, we take the Laplace transform of both sides of the ODE. Utilizing the property that `L{y''} = s^2Y(s) - sy(0) - y'(0)`, `L{y'} = sY(s) - y(0)`, and `L{y} = Y(s)`, where `Y(s)` is the Laplace transform of `y(t)`, we get: \n\n`s^2Y(s) - s - 0 - 4[sY(s) - 1] + 4Y(s) = 0`\n\nSimplifying this equation gives:\n\n`s^2Y(s) - 4sY(s) + 4Y(s) = s - 4`\n\nwhich can be factored as:\n\n`(s - 2)^2Y(s) = (s - 2)`\n\nFrom this equation, we can solve for Y(s):\n\n`Y(s) = 1/(s - 2)`\n\nFinally, we take the inverse Laplace transform of `Y(s)` to get the solution in time domain:\n\n`y(t) = e^(2t)`"), ('import data.real.basic \n\n-- Here is a formal proof using Lean 3:\n\ntheorem binomial_square (a b : ℝ) : (a + b) ^ 2 = a^2 + 2 * a * b + b^2 :=\nbegin\n  -- Start with the left side of the equation and expand\n  calc (a + b) ^ 2 = (a + b) * (a + b) : by rw pow_two\n               ... = a * a + a * b + b * a + b * b : by ring\n               ... = a^2 + a * b + a * b + b^2 : by rw [mul_comm b a, pow_two, pow_two]\n               ... = a^2 + 2 * a * b + b^2 : by ring,\nend', 'Prove that for any two real numbers a and b, the operation (a + b)^2 = a^2 + 2ab + b^2.', 'We start with the left side of the equation, (a + b)^2. According to the rules of exponents, squaring a binomial (a + b)^2 means multiplying (a + b) by itself, i.e., (a + b) * (a + b). \n\nWe then use the distributive property of multiplication over addition, which states that for any real numbers x, y, and z, x*(y + z) = x*y + x*z. Applying this property twice to our equation gives us: a*a + a*b + b*a + b*b.\n\nNow, since multiplication is commutative (meaning that for any real numbers x and y, x*y = y*x), we can say that a*b = b*a. Therefore, a*a + a*b + b*a + b*b simplifies to a^2 + ab + ab + b^2 = a^2 + 2ab + b^2, which is the right side of our original equation. \n\nTherefore, we have shown that for any real numbers a and b, (a + b)^2 = a^2 + 2ab + b^2.'), ('import data.real.basic\n\n-- Define the sides of the rectangle\ndef side1 : ℝ := 5\ndef side2 : ℝ := 3\n\n-- Define the area of a rectangle\ndef rectangle_area (length : ℝ) (width : ℝ) : ℝ := length * width\n\n-- Prove that the area of the rectangle is 15\nexample : rectangle_area side1 side2 = 15 := by norm_num [rectangle_area, side1, side2, mul_comm]', 'In a rectangle, the length of one side is 5 units and the length of the other side is 3 units. What is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length of its sides. So, if one side is 5 units long and the other is 3 units long, we can find the area by multiplying 5 by 3. Hence, the area of the rectangle is 15 square units.'), ('def candies_left (candies : ℕ) (friend_perc : ℕ) (bro_perc : ℕ) : ℕ :=\nlet friend_candies := (friend_perc * candies) / 100 in\nlet candies_after_friend := candies - friend_candies in\nlet bro_candies := (bro_perc * candies_after_friend) / 100 in\ncandies_after_friend - bro_candies\n\n#eval candies_left 100 25 20 -- output will be `60`', 'John bought a bag of candies containing 100 pieces. He gave 25% of the candies to his best friend, and then 20% of the remaining candies to his little brother. How many candies does John have left?', 'First, we need to calculate 25% of 100, which is 25 candies. This is because 25% is equivalent to 25/100 or 1/4 and when you multiply 1/4 by 100, you get 25 candies. After giving these candies to his best friend, John is left with 100 - 25 = 75 candies.\n\nNext, we calculate 20% of 75 candies, which is 15 candies. This is because 20% is equivalent to 20/100 or 1/5 and when you multiply 1/5 by 75, you get 15 candies. After giving these candies to his brother, John is left with 75 - 15 = 60 candies.\n\nTherefore, John has 60 candies left.'), ('import data.real.basic\n\nopen_locale classical\n\n-- we define the variables\nvariables (packs : ℝ) (stickersPerPack : ℝ) (stickersGiven : ℝ)\n\n-- we state the problem\ndef total_stickers (packs : ℝ) (stickersPerPack : ℝ) : ℝ := packs * stickersPerPack\ndef remaining_stickers (total : ℝ) (given : ℝ) : ℝ := total - given\n\n-- we prove the problem\nexample : remaining_stickers (total_stickers 2.5 10) 5 = 20 :=\nbegin\n  unfold total_stickers,\n  unfold remaining_stickers,\n  norm_num,\nend', 'Alice has 2.5 packs of stickers, and each pack contains 10 stickers. She gives 5 stickers to her friend Bob. How many stickers does Alice have left?', 'First, we need to find out how many stickers Alice has in total. Since each pack contains 10 stickers and she has 2.5 packs, we can multiply 2.5 by 10 to get 25 stickers in total. \n\nThen, Alice gives 5 stickers to her friend Bob. To find out how many stickers she has left, we need to subtract the stickers she gave away from her total number of stickers. That is, we subtract 5 from 25 to get 20. \n\nSo, Alice has 20 stickers left.'), ('import data.nat.basic\n\nopen nat\n\n-- declare variables\nvariables (boxes : ℕ) (pencilsInBox : ℕ) (pencilsGiven : ℕ)\n\n-- assumption\ndef tom_pencils := boxes * pencilsInBox - pencilsGiven\n\nexample : tom_pencils 3 6 2 = 16 :=\nbegin\n    unfold tom_pencils,\n    rw mul_comm 3 6,\n    refl,\nend', 'Tom has 3 boxes of pencils. Each box contains 6 pencils. Later, Tom gives 2 pencils to Jerry. How many pencils does Tom have now?', 'First, we can calculate how many pencils Tom has in all by multiplying the number of boxes by the number of pencils in each box. So he has 3 boxes times 6 pencils, which is 18 pencils. Then, we subtract the 2 pencils that Tom gave to Jerry. So Tom now has 18 - 2 = 16 pencils.'), ('def add := nat.add\n\nexample : add 5 3 = 8 :=\nbegin\n  refl,\nend', 'Amy has 2 containers. The first container can hold 5 liters of water and the second container can hold 3 liters of water. If Amy fills up both containers, how much water in total will she have?', 'Amy fills up two containers. The first one holds 5 liters and the second one holds 3 liters. To find out the total amount of water, we simply add the capacity of the two containers together. So, 5 liters + 3 liters = 8 liters. Therefore, Amy will have 8 liters of water in total.'), ('open nat\ndef number_of_pencils (boxes : ℕ) (pencils_per_box : ℕ) : ℕ := boxes * pencils_per_box\ndef remaining_pencils (total_pencils : ℕ) (pencils_given : ℕ) : ℕ := total_pencils - pencils_given\n\nexample : remaining_pencils (number_of_pencils 5 12) 4 = 56 :=\nbegin\n  rw [number_of_pencils, remaining_pencils],\n  exact dec_trivial,\nend', 'John has 5 boxes of pencils. Each box contains 12 pencils. He gave 4 pencils to his friend, Tom. How many pencils does John have left?', 'First, we calculate the total number of pencils John has by multiplying the number of boxes by the number of pencils in each box. So, 5 boxes * 12 pencils/box = 60 pencils. Then, subtract the number of pencils he gave to Tom, which is 4 pencils. So, 60 pencils - 4 pencils = 56 pencils. Therefore, John has 56 pencils left.'), ('import data.nat.basic\n\nopen nat\n\ndef balls_total (john_red john_blue mary_red mary_blue : ℕ) : ℕ := \njohn_red + john_blue + mary_red + mary_blue\n\n#eval balls_total 5 3 4 2', 'John and Mary were playing a game. John had 5 red balls and 3 blue balls. Mary had 4 red balls and 2 blue balls. How many balls did they have in total?', 'To find out how many balls John and Mary had in total, we need to add up the number of red balls and blue balls they each had. John had 5 red balls and 3 blue balls, which makes a total of 8 balls. Mary had 4 red balls and 2 blue balls, which makes a total of 6 balls. By adding the total number of balls John had (8) and the total number of balls Mary had (6), we find that they had 14 balls in total.'), ('import data.real.basic\n\n-- Definitions\ndef sin (θ : ℝ) := 0.6\ndef cos (θ : ℝ) := 0.8\ndef tan (θ : ℝ) := sin(θ) / cos(θ)\n\n-- Theorem statement\ntheorem tan_eq_sin_div_cos (θ : ℝ) : tan(θ) = 0.75 :=\nbegin\n  -- Calculation\n  rw [tan, sin, cos], \n  norm_num,\nend', 'Given a right-angled triangle ABC where ∠CAB is the right angle and ∠ACB = θ. If sin(θ) = 0.6 and cos(θ) = 0.8, prove that tan(θ) = 0.75.', 'In trigonometry, we know that tan(θ) is equivalent to sin(θ) divided by cos(θ). In this problem, we are given sin(θ) = 0.6 and cos(θ) = 0.8. Therefore, tan(θ) can be calculated as 0.6 divided by 0.8, which equals to 0.75. Therefore, we have proved that tan(θ) = 0.75.'), ('import data.complex.basic\n\ndef f (x : ℝ) : ℂ := (x + 2) + (x - 3) * complex.I\n\ntheorem f_of_4 : f 4 = 6 + complex.I :=\nbegin\n  unfold f,\n  simp,\n  ring,\nend', 'Suppose that `f` is a function that maps a real number `x` to a complex number `y = a + bi`, where `a` and `b` are real numbers, `i` is the imaginary unit, and `f(x) = (x + 2) + (x - 3)i`. What is the value of `f(4)`, and is `f(4)` a real or a complex number?', 'To solve the problem, we substitute `x = 4` into the function `f(x)`. We get `f(4) = (4 + 2) + (4 - 3)i = 6 + i`. Therefore, `f(4)` is a complex number.'), ('import data.real.basic\n\nexample : (1 / 2 : ℝ) + (1 / 4 : ℝ) = 3 / 4 :=\nbegin\n  norm_num\nend\n\nexample : (1 / 2 : ℝ) - (1 / 4 : ℝ) = 1 / 4 :=\nbegin\n  norm_num\nend', 'If we have two fractions 1/2 and 1/4, what will be the result of addition and subtraction of these two fractions?', 'To add or subtract fractions, the fractions need to have the same denominator. So, we need to find a common denominator for 1/2 and 1/4. The common denominator is 4. \n\nTo add the fractions, we convert 1/2 to 2/4. Now we can add 2/4 and 1/4 which results in 3/4. \n\nTo subtract the fractions, we again convert 1/2 to 2/4. Now we can subtract 1/4 from 2/4 which results in 1/4. \n\nSo, the result of the addition is 3/4 and the result of the subtraction is 1/4.'), ('import data.nat.basic\n\nopen nat \n\ndef marbles := 562\ndef friends := 3\ndef marbles_per_friend := marbles / friends\ndef leftover_marbles := marbles % friends\n\n#eval marbles_per_friend  -- returns 187\n#eval leftover_marbles    -- returns 1', 'Ben has 562 marbles. He wants to distribute them equally among his 3 friends. How many marbles will each friend get?', "To solve this problem, we need to divide 562 by 3. When we perform this division, we find that each of Ben's friends will receive 187 marbles. There will be one marble left over."), ('import data.real.basic\n\n-- given probabilities\nnoncomputable def P_Basketball := (0.3 : ℝ)\nnoncomputable def P_Football := (0.4 : ℝ)\nnoncomputable def P_Both := (0.1 : ℝ)\n\n-- proof\nexample : P_Basketball + P_Football - P_Both = 0.6 :=\nbegin\nrw P_Basketball,\nrw P_Football,\nrw P_Both,\nnorm_num,\nend', 'In a school, the probability that a student plays basketball is 0.3, the probability that a student plays football is 0.4. The probability that a student plays both basketball and football is 0.1. If a student is chosen at random, what is the probability that he plays either basketball or football?', 'The probability that a student plays either basketball or football can be found by adding the probabilities of the individual events (playing basketball and playing football) and then subtracting the probability of the intersection (playing both basketball and football). So, this can be calculated as follows: \n\nP(Basketball or Football) = P(Basketball) + P(Football) - P(Basketball and Football)\n\nSubstitute the values into the equation:\n\nP(Basketball or Football) = 0.3 + 0.4 - 0.1 = 0.6'), ('import data.real.basic\n\n-- defining the function\ndef f (x : ℝ) : ℝ := 3*x^2 - 4*x + 2\n\n-- proving that f(5) is 57\nexample : f 5 = 57 :=\nbegin\n  unfold f, \n  norm_num,\nend\n\n-- proving that f(-1) is 9\nexample : f (-1) = 9 :=\nbegin\n  unfold f, \n  norm_num,\nend', 'Let f be a function defined for all real numbers such that f(x) = 3x² - 4x + 2. Find the value of f(5) and f(-1).', 'To find f(5) and f(-1), we simply need to substitute 5 and -1 into the function f(x) = 3x² - 4x + 2 respectively. \n\nFor f(5), we get 3*(5)² - 4*(5) + 2 = 3*25 - 20 + 2 = 75 - 20 + 2 = 57.\n\nFor f(-1), we get 3*(-1)² - 4*(-1) + 2 = 3*1 + 4 + 2 = 3 + 4 + 2 = 9.\n\nTherefore, f(5) = 57 and f(-1) = 9.'), ('import data.real.basic\nimport data.real.sqrt\n\nnoncomputable def sin_30 : ℝ := 1 / 2\nnoncomputable def cos_30 : ℝ := real.sqrt 3 / 2\n\nnoncomputable def AC : ℝ := 5\nnoncomputable def BC : ℝ := AC * cos_30\n\nnoncomputable theory\nopen_locale classical\n\nexample : BC = 5 * (real.sqrt 3 / 2) :=\nbegin\n  rw BC,\n  rw AC,\n  exact rfl,\nend', 'In right triangle ABC, angle ACB is a right angle and angle BAC is 30 degrees. If AC = 5 units, find the length of BC.', 'Since triangle ABC is a right triangle with angle BAC being 30 degrees, we can use the properties of a 30-60-90 triangle. In a 30-60-90 triangle, the sides are in the ratio of 1: √3: 2. Here, side AC is opposite to the 30-degree angle, and hence it is the shortest side. Therefore, the length of BC (which is opposite to the 60-degree angle) is √3 times the shortest side. So, BC = √3 * AC = √3 * 5 = 5√3 units.'), ('import data.real.basic \n\n-- define the variables\ndef savings (x : ℝ) := 2 * (50 + 10 * x)\ndef target : ℝ := 320\n\n-- proof that John needs to wait 11 weeks\nexample : savings 11 = target :=\nbegin\n  unfold savings target,\n  norm_num,\nend', 'John has saved $50 in his piggy bank. Every week, he saves an additional $10. After a certain number of weeks, his mother will double the amount he has saved. If his goal is to buy a video game console that costs $320, how many weeks does he need to wait before he can afford it?', "Firstly, let's define the number of weeks that John needs to wait as x. \n\nThe problem can be modeled by the equation: 2*(50 + 10x) = 320. This is because John starts with $50, saves $10 each week for x weeks, and then his mother doubles the amount. \n\nTo solve for x, we first need to distribute the 2 to get: 100 + 20x = 320. \n\nThen we subtract 100 from both sides of the equation to get: 20x = 220.\n\nFinally, we divide both sides of the equation by 20 to get: x = 11. \n\nSo, John needs to wait 11 weeks before he can afford the video game console."), ('import data.real.basic\n\n-- Defining the total number of cards and the number of red kings\ndef total_cards : ℝ := 52\ndef red_kings : ℝ := 2\n\n-- Proving the main theorem\nlemma probability_red_king : (red_kings / total_cards) = 1/26 :=\nbegin\n  -- Calculating the probability\n  have h : red_kings / total_cards = 2 / 52, by refl,\n  rw h,\n  -- Simplifying the fraction\n  norm_num,\nend', 'In a deck of 52 playing cards, what is the probability of drawing a red king on the first draw?', 'In a standard deck of 52 playing cards, there are 2 red kings: the king of hearts and the king of diamonds. The total number of outcomes when drawing one card from the deck is 52, as there are 52 cards in the deck. Therefore, the probability of drawing a red king on the first draw is the number of successful outcomes (2) divided by the total number of outcomes (52). So, the required probability is 2/52 = 1/26.'), ("import data.real.basic\n\n-- function definition\ndef f : ℝ → ℝ := λ x, 2*x^3 - 3*x^2 + 4*x - 5\n\n-- derivative definition\ndef f' : ℝ → ℝ := λ x, 6*x^2 - 6*x + 4\n\n-- second derivative definition\ndef f'' : ℝ → ℝ := λ x, 12*x - 6\n\n-- critical points are where the derivative is 0\ndef critical_points : set ℝ := {x | f' x = 0}\n\n-- second derivative test\ndef is_local_min (x : ℝ) : Prop := x ∈ critical_points ∧ f'' x > 0\ndef is_local_max (x : ℝ) : Prop := x ∈ critical_points ∧ f'' x < 0\n\n-- now it remains to solve the equations f'(x) = 0 and f''(x) > 0 or f''(x) < 0\n-- this would typically involve some real analysis and is beyond the scope of Lean's built-in libraries", 'Let f(x) be a real valued function defined as f(x) = 2x^3 - 3x^2 + 4x - 5. Find the critical points of the function and determine whether they are local minimums, local maximums, or neither.', "To find the critical points of a function, we first need to take the derivative of the function. The derivative of f(x) = 2x^3 - 3x^2 + 4x - 5 is f'(x) = 6x^2 - 6x + 4. Setting this equal to zero gives us the critical points, which are the solutions to the equation 6x^2 - 6x + 4 = 0.\n\nTo determine the nature of these critical points, we use the second derivative test. The second derivative is f''(x) = 12x - 6. We substitute the critical points into the second derivative. If the result is positive, the function has a local minimum at that point. If the result is negative, the function has a local maximum at that point. If the second derivative is zero or undefined at the point, the test is inconclusive."), ('import data.real.basic\n\nvariables (a : ℝ)\n\ndef square := λ a : ℝ, a * a\n\ntheorem square_area: square a = a * a :=\nbegin\n  exact rfl,\nend', 'Given a square with side length `a`, prove that the area of the square is `a * a`.', 'By the definition of a square, all sides are equal in length. So if we label the side length as `a`, the area of the square is computed by multiplying the length of one side by the length of another adjacent side. Therefore, the area of the square is `a * a`.'), ('import data.real.basic\n\n-- define the variables\ndef orange_juice := 8\ndef apple_juice := 12\ndef grape_juice := 4\n\n-- calculate the total juice\ndef total_juice := orange_juice + apple_juice + grape_juice\n\n-- calculate the ratio\ndef ratio := orange_juice / total_juice\n\n-- proof that the ratio is 1/3\nexample : ratio = 1/3 :=\nbegin\n  unfold ratio total_juice orange_juice apple_juice grape_juice, \n  norm_num,\nend', 'Tom and Jerry are preparing a special juice blend. Tom contributes 8 cups of orange juice and Jerry contributes 12 cups of apple juice. If they decide to add 4 cups of grape juice, what is the ratio of orange juice to the total juice in the blend?', 'First, calculate the total amount of juice in the blend. Tom contributed 8 cups of orange juice, Jerry contributed 12 cups of apple juice, and they added 4 cups of grape juice. So, the total amount of juice in the blend is 8 + 12 + 4 = 24 cups. \n\nThe ratio of orange juice to the total juice in the blend is the amount of orange juice divided by the total amount of juice. Tom contributed 8 cups of orange juice, so the ratio is 8/24. Simplifying this fraction, we get the ratio 1/3. \n\nSo, the ratio of orange juice to the total juice in the blend is 1 to 3.'), ('def J := λT, 2*T -- Define J as a function of T\ndef eq1 := λT, J(T) - 5 -- Define the equation after James gives 5 apples to Tom\ndef eq2 := λT, T + 5 -- Define the equation after Tom receives 5 apples from James\n\n-- Assert and prove that Tom originally has 10 apples\nexample : eq1 10 = eq2 10 :=\nbegin\n  unfold eq1,\n  unfold eq2,\n  unfold J,\n  refl,\nend\n\n-- Assert and prove that James originally has 20 apples\nexample : J 10 = 20 :=\nbegin\n  unfold J,\n  refl,\nend', 'James has twice as many apples as his friend Tom. If James gives 5 apples to Tom, they will have the same number of apples. How many apples does each person have originally?', "Let's denote the number of apples James has as J and the number of apples Tom has as T. According to the problem, we know that J = 2T (James has twice as many apples as Tom). We also know that if James gives 5 apples to Tom, they will have the same number of apples, which means J - 5 = T + 5. Now we have a system of two equations, and we can solve it step by step. \n\nFirst, substitute J = 2T into the second equation: 2T - 5 = T + 5. By simplifying this equation, we get T = 10. Substitute T = 10 back into the first equation J = 2T, we get J = 20. \n\nSo, originally, James has 20 apples and Tom has 10 apples."), ("import data.real.basic\n\n-- Let's define the length and width of the garden\ndef garden_length : ℝ := 15\ndef garden_width : ℝ := 10\n\n-- Now let's calculate the perimeter\ndef garden_perimeter : ℝ := 2 * (garden_length + garden_width)\n#eval garden_perimeter  -- This will output 50\n\n-- And let's calculate the area\ndef garden_area : ℝ := garden_length * garden_width\n#eval garden_area  -- This will output 150", 'Lucy has a rectangular garden that is 15 feet long and 10 feet wide. She wants to build a fence around the garden. \n\n1. How many feet of fencing will Lucy need to completely enclose her garden? \n2. What is the area of the garden in square feet?', '1. The perimeter of a rectangle is given by the formula: 2*(length + width). Given that the length of the garden is 15 feet and the width is 10 feet, the total fencing Lucy will need to enclose her garden is 2*(15+10) = 50 feet.\n2. The area of a rectangle is given by the formula: length*width. Hence, the area of the garden is 15*10 = 150 square feet.'), ('import data.rat.basic\n\ntheorem rational_numbers_add (a b : ℚ) : ∃ c : ℚ, c = a + b :=\nbegin\n  use a + b,\nend', 'If a and b are rational numbers, prove that the sum of a and b is also a rational number.', 'A rational number is any number that can be expressed as the fraction p/q of two integers, p and q, with the denominator q not equal to zero. \n\nGiven a and b are rational numbers, we can express them as a = p1/q1 and b = p2/q2, respectively, where p1, q1, p2, and q2 are all integers and neither q1 nor q2 are zero.\n\nThe sum of a and b can be expressed as a + b = (p1/q1) + (p2/q2). To add these two fractions, we find a common denominator, which is q1*q2. \n\nSo, a + b = (p1*q2 + p2*q1) / (q1*q2). \n\nThe numerator (p1*q2 + p2*q1) and the denominator (q1*q2) are both integers because they are the product and sum of integers. Also, the denominator is not zero unless both q1 and q2 are zero, which we know is not the case. \n\nTherefore, the sum a + b is a rational number.'), ('import data.real.basic\n\n-- Defining the problem\ndef equation := λx : ℝ, 2*x - 3 - 5\n\n-- Defining the solution\ndef solution := 4\n\n-- Proving the solution\ntheorem solution_is_correct : equation solution = 0 :=\nbegin\n  unfold equation,       -- Unfold the definition of equation\n  unfold solution,       -- Unfold the definition of solution\n  simp,                  -- Simplify the equation\n  norm_num,              -- Normalize numbers\nend', "Let's assume a linear equation in one variable: 2x - 3 = 5. Solve this equation to find the value of x.", 'To solve for x, we first need to get rid of the -3 on the left side of the equation. To do this, we can add 3 to both sides of the equation, which will leave us with 2x = 8. Then, to isolate x, we divide both sides of the equation by 2. This leaves us with x = 4.'), ('open nat\n\ndef trees_in_field (rows : ℕ) (trees_per_row : ℕ) : ℕ :=\nrows * trees_per_row\n\nexample : trees_in_field 25 34 = 850 :=\nbegin\n  unfold trees_in_field,\n  exact rfl,\nend', 'In a rectangular field, there are 25 rows and each row has 34 trees planted. What is the total number of trees in the field?', 'To find out the total number of trees, we have to multiply the number of rows by the number of trees in each row. This is because each row has the same number of trees. So we multiply 25 rows by 34 trees per row, which equals 850. Therefore, there are 850 trees in the field.'), ('def calculate_students (total_students : ℕ) (sports_percentage : ℕ) (football_percentage : ℕ) : ℕ :=\nlet sports_students := total_students * sports_percentage / 100 in\nlet football_students := sports_students * football_percentage / 100 in\nsports_students - football_students\n\n#eval calculate_students 500 80 75  -- Output: 100', 'In a school, 80% of students play sports. Among these sports-playing students, 75% prefer football while the rest prefer basketball. If the total number of students in the school is 500, how many students prefer basketball?', 'Firstly, we calculate the number of students who play sports by multiplying the total number of students, which is 500, by 80%. This results in 400 students.\nSecondly, we calculate the number of students who prefer football by multiplying the number of sports-playing students, which is 400, by 75%. This results in 300 students.\nFinally, we calculate the number of students who prefer basketball by subtracting the number of students who prefer football from the total number of sports-playing students. This results in 100 students.'), ('import data.real.basic\n\nnoncomputable theory\n\nopen real\n\n-- define the initial amount of money John has\ndef initial_money := (10.00 : ℝ) \n\n-- define the cost of the toy car\ndef toy_car_cost := (4.20 : ℝ) \n\n-- define the amount of money John found on the street\ndef found_money := (2.35 : ℝ) \n\n-- calculate the amount of money left after buying the toy car\ndef money_after_buying := initial_money - toy_car_cost \n\n-- calculate the final amount of money John has\ndef final_money := money_after_buying + found_money \n\n-- proof that the final amount of money John has is $8.15\nexample : final_money = 8.15 := \nbegin \n  unfold final_money, \n  unfold money_after_buying, \n  unfold initial_money, \n  unfold toy_car_cost, \n  unfold found_money, \n  norm_num,\nend', 'John has $10.00. He spent $4.20 on a toy car and then he found $2.35 on the street. How much money does John have now?', 'First, we subtract the cost of the toy car from the amount John initially had. So, $10.00 - $4.20 equals $5.80. Then, we add the amount John found on the street to the amount left after buying the toy car. So, $5.80 + $2.35 equals $8.15. Therefore, John now has $8.15.'), ('import data.real.basic\n\nvariables (a b : ℝ)\n\ndef rectangle (a b : ℝ) : ℝ := a * b\n\ntheorem rectangle_area_eq_length_times_width : \nrectangle a b = a * b :=\nbegin\n  refl,\nend', 'Given a rectangle with length a and width b, prove that the area of the rectangle is equal to the product of its length and its width.', "A rectangle is a quadrilateral with four right angles. If we label the length of the rectangle as a, and the width as b, then the area of the rectangle is defined as the product of its length and its width, or ab. This is because for each unit length of the rectangle, there are 'b' units of width, and therefore 'b' square units of area. Hence, the total area of the rectangle is the sum of 'b' square units of area for each unit length 'a', which gives us the area as 'ab' square units."), ('import data.real.basic\n\nexample : (5 : ℝ)/10 + (3 : ℝ)/100 = 0.53 :=\nbegin\n  norm_num,\nend', 'If a number has 3 in the hundredths place and 5 in the tenths place, what is the value of the number?', 'The number in the tenth place represents tenths, which is 5/10 or 0.5 when converted to decimal. The number in the hundredths place represents hundredths, which is 3/100 or 0.03 when converted to decimal. The value of the number can be found by adding the values of these two places together. So 0.5 (the value of the tenths place) plus 0.03 (the value of the hundredths place) is 0.53.'), ('import data.real.basic\n\ntheorem exponents_are_equal : ∀ (a b : ℝ) (m n : ℕ), a = b ∧ m = n → a^m = b^n :=\nbegin\n  intros a b m n h,\n  rw h.1,\n  rw h.2,\nend', 'Prove that for any real numbers a and b, and any positive integers m and n, if a = b, then a^m = b^n.', 'We have been given that a = b. Therefore, a and b are identical. So, any operation performed on a and b will yield the same result. \n\nSo, a^m is the same as b^m, because a and b are the same. \n\nSimilarly, b^n is the same as a^n, because a and b are the same. \n\nTherefore, if a = b, then a^m = b^n.'), ("import data.real.basic\n\nopen real\n\n-- Let's denote the initial average score as a, the number of students as n, and the points added as p.\nvariables (a n p : ℝ)\n\n-- This is the equation for the new average after adding points.\nnoncomputable def new_avg (a n p : ℝ) := (a*n + p) / n\n\n-- Now we will prove that the new average is correct when a=75, n=20, and p=5.\nexample : new_avg 75 20 5 = 75.25 :=\nbegin\n  unfold new_avg, -- Apply the definition of new_avg\n  norm_num, -- Do the arithmetic calculation\nend", "A teacher conducted a test in a class of 20 students. The average score of the class was 75. After grading, the teacher realized that she had made a mistake in scoring one student's paper, and the student's actual score was 5 points higher than what she had originally given. After correcting the error, what is the new average score of the class?", 'The initial total score of the class was the average score times the number of students, which is 75 * 20 = 1500. After correcting the error, the total score became 1500 + 5 = 1505. So, the new average score is the total score divided by the number of students, which is 1505 ÷ 20 = 75.25.'), ('import data.real.basic\nimport tactic.norm_num\n\ndef distance (speed : ℝ) (time : ℝ) : ℝ := speed * time\n\ntheorem car_travel : distance 60 1.5 = 90 := \nbegin\n  unfold distance, \n  norm_num,\nend', 'If a car travels at a constant speed of 60 miles per hour, how far can it travel in 1.5 hours?', 'Since the speed of the car is constant and equals to 60 miles per hour, for every hour the car travels 60 miles. Therefore, in 1.5 hours, the car would travel 1.5 times the distance it travels in one hour, which is 60 miles. Thus, the car can travel 1.5 * 60 = 90 miles in 1.5 hours.'), ('import data.real.basic\n\n-- defining the fractions\nnoncomputable def frac_1 := (1 : ℝ) / 2\nnoncomputable def frac_2 := (2 : ℝ) / 4\nnoncomputable def frac_3 := (3 : ℝ) / 4\n\n-- stating the proof as a theorem\ntheorem compare_fractions : frac_1 < frac_3 ∧ frac_3 / frac_1 = 1.5 :=\nbegin\n  -- splitting the proof into two goals\n  split,\n  -- proving that frac_1 is less than frac_3\n  { unfold frac_1 frac_3, linarith },\n  -- proving that the ratio of frac_3 to frac_1 is 1.5\n  { unfold frac_1 frac_3, norm_num }\nend', 'Suppose we have two equivalent fractions 1/2 and 2/4, and another fraction 3/4. Which fraction is greater and by what ratio?', 'From the definition of equivalent fractions, we know 1/2 and 2/4 are the same. So we can compare 1/2 with 3/4. \n\nSince the denominators are the same, we can directly compare the numerators. 3 is greater than 1, so 3/4 is greater than 1/2. \n\nTo find the ratio, we divide 3/4 by 1/2. We can treat this as multiplying 3/4 by the reciprocal of 1/2, which is 2/1. So the ratio is (3/4) * (2/1) = 3/2 = 1.5. So, 3/4 is 1.5 times greater than 1/2.'), ('def cars_in_line (n : ℕ) : ℕ := 3 + (n - 1)\n\n#eval cars_in_ -- Result will be 12', 'John is lining up his toy cars in a pattern. He starts with 3 cars in the first line, then adds 4 more cars in the second line, 5 in the third line, 6 in the fourth line, and so on. If John continues this pattern, how many cars will he have in the 10th line?', 'Each line represents an arithmetic sequence. The first term in the sequence is 3 (for the first line), and the common difference is 1 (each line adds 1 more car than the previous line). \n\nTo find the number of cars in the 10th line, we use the formula for the nth term of an arithmetic sequence: a_n = a_1 + (n - 1)*d, where a_n is the nth term, a_1 is the first term, n is the term number (in this case, the line number), and d is the common difference. \n\nPlugging in the values we have: a_10 = 3 + (10 - 1)*1 = 3 + 9 = 12. So, John will have 12 cars in the 10th line.'), ('import data.real.basic\n\ndef f (x : ℝ) := 2 * x + 3\ndef g (x : ℝ) := x^2\ndef h (x : ℝ) := f (g x)\n\nlemma symmetric_y_axis (x : ℝ) : h x = h (-x) :=\nbegin\n  unfold h,\n  unfold f,\n  unfold g,\n  rw neg_sq,\nend', 'Let f(x) = 2x + 3 and g(x) = x^2. Is the function h(x) = (f∘g)(x) symmetric about the y-axis?', "First, let's find the composite function h(x). The composite function h(x) = (f∘g)(x) is f(g(x)) = f(x^2) = 2x^2 + 3. \n\nTo determine if a function is symmetric about the y-axis, we need to see if replacing x with -x in the function yields the same function. If h(x) = h(-x), then the function is symmetric about the y-axis. \n\nSubstituting -x into h(x), we get h(-x) = 2(-x)^2 + 3 = 2x^2 + 3. So, h(x) = h(-x), and hence the function h(x) = 2x^2 + 3 is symmetric about the y-axis."), ('import data.nat.basic\n\n-- defining the initial number of apples\ndef john_apples := 3\ndef mary_apples := 4 * john_apples\n\n-- defining the number of apples John gives to Mary\ndef given_apples := 2\n\n-- calculating the number of apples Mary has after John gives her 2 apples\ndef mary_apples_then := mary_apples + given_apples\n\n-- proof that Mary has 14 apples\nexample : mary_apples_then = 14 :=\nbegin\n  unfold mary_apples_then,\n  unfold mary_apples,\n  unfold john_apples,\n  unfold given_apples,\n  refl,\nend', 'John has 3 apples and Mary has 4 times as many apples as John. If John gives 2 apples to Mary, how many apples does Mary have then?', "First, we determine how many apples Mary has initially. As Mary has 4 times as many apples as John, and John has 3 apples, Mary has 4 * 3 = 12 apples initially. \n\nThen, John gives 2 apples to Mary. So, Mary's number of apples increases by 2. This gives Mary 12 + 2 = 14 apples.\n\nSo, Mary has 14 apples after John gives her 2 apples."), ('import data.real.basic\n\ndef f (x : ℝ) := 2*x + 3\n\n#eval f 5  -- output: 13', 'If f(x) is a linear function represented by the equation f(x) = 2x + 3, then find the value of f(5).', 'To solve this problem, we substitute the value x = 5 into the equation f(x) = 2x + 3. \n\nSo, we get f(5) = 2*5 + 3 = 10 + 3 = 13. \n\nTherefore, the value of f(5) is 13.'), ('import data.nat.basic\n\nopen nat \n\n#check (120 / 6) \n\n-- Lean 3 verifies that 120 divided by 6 equals 20', 'In a school, there are a total of 120 students. These students are equally divided into 6 classrooms. How many students are there in each classroom?', 'To find the number of students in each classroom, we need to divide the total number of students by the number of classrooms. \n\nSo, 120 students divided by 6 classrooms equals 20 students per classroom.'), ("import data.real.basic\n\n-- Let's define the function f and its derivative f'\ndef f (x : ℝ) := 3*x^2 + 2*x - 1\ndef f' (x : ℝ) := 6*x + 2\n\n-- The proof is a simple computation using the derivative\nexample : ∃ x_min : ℝ, f' x_min = 0 :=\nbegin\n  use -1/3,\n  -- Calculate the derivative at x = -1/3\n  dsimp only [f'],\n  norm_num,\nend", 'Let f(x) = 3x^2 + 2x - 1. Find the x-coordinate of the point where the function f(x) reaches its minimum value.', "To find the minimum of a function using derivatives, we need to first find the derivative of the function. The derivative of f(x) = 3x^2 + 2x - 1 is f'(x) = 6x + 2. \n\nThen, we set the derivative equal to zero and solve for x to find the critical points. So, we have 6x + 2 = 0. Solving for x gives x = -1/3.\n\nTherefore, the function f(x) reaches its minimum value at x = -1/3."), ('import data.nat.basic\n\nopen nat\n\ndef crayons_in_box : ℕ := 8\ndef number_of_boxes : ℕ := 7\n\ndef total_crayons (crayons_in_box number_of_boxes : ℕ) : ℕ := crayons_in_box * number_of_boxes\n\nexample : total_crayons crayons_in_box number_of_boxes = 56 :=\nbegin\n  rw total_crayons,\n  rw crayons_in_box,\n  rw number_of_boxes,\n  exact mul_comm 8 7,\nend', 'Lisa has 7 boxes of crayons. Each box contains 8 crayons. How many crayons does Lisa have in total?', 'To find out how many crayons Lisa has in total, we need to multiply the number of boxes she has by the number of crayons in each box. Lisa has 7 boxes of crayons and each box contains 8 crayons. So, we multiply 7 by 8 and get 56. Therefore, Lisa has 56 crayons in total.'), ('import data.real.basic\n\ntheorem powers_of_ten : (10^2 + 10^3) / 10^2 = 11 :=\nbegin\n  norm_num,\nend', 'If we add \\(10^2\\) and \\(10^3\\), then divide the result by \\(10^2\\), what is the final result?', 'We know that \\(10^2\\) is 100, and \\(10^3\\) is 1000. Adding these together, we get 1100. If we then divide 1100 by 100, we get 11.'), ("import data.real.basic\n\n-- Let's define y(t) as the function representing the study hours on day 't'\ndef study_hours (t : ℝ) : ℝ := t^2 - 3*t + 4\n\n-- Let's check the study hours on the first day\n#eval study_hours 1  -- Output: 2 (hours)\n\n-- Let's check the study hours on the 5th day\n#eval study_hours 5  -- Output: 14 (hours)", 'In a high school statistics class, a student recorded the number of hours they studied each day for 20 days. The daily study hours follow a pattern that can be modeled by the differential equation dy/dt = 2t - 3. If the student studied for 2 hours on the first day, how many hours did the student study on the 5th day?', "The given differential equation dy/dt = 2t - 3 is a simple first order linear differential equation. The solution to this equation can be found by integrating both sides with respect to 't'. The integral of dy/dt is y, and the integral of 2t - 3 is t^2 - 3t + C, where C is the constant of integration. \n\nSetting t = 1 (the first day), and y = 2 (the hours studied on the first day), we can solve for C. Substituting these values into the equation gives 2 = 1^2 - 3*1 + C, so C = 2 + 3 - 1 = 4.\n\nThe function that models the student's study time is therefore y = t^2 - 3t + 4.\n\nTo find the study hours on the 5th day, we substitute t = 5 into the equation, which gives y = 5^2 - 3*5 + 4 = 14. So, the student studied for 14 hours on the 5th day."), ('import data.real.basic\n\n-- Define the equation\ndef equation (x : ℝ) := 3*x + 5 = 11\n\n-- Prove that x = 2 is the solution\ntheorem solve_equation : ∃ x, equation x :=\nbegin\n  use 2, -- We claim that x = 2 is the solution\n  unfold equation, -- Expand the definition of the equation\n  norm_num, -- Simplify the equation and solve for x\nend', 'Given the equation 3x + 5 = 11, find the value of x.', 'To solve for x in the equation 3x + 5 = 11, we need to isolate x. First, subtract 5 from both sides of the equation to get 3x = 6. Then, divide both sides of the equation by 3 to get x = 2. Therefore, the value of x that satisfies the equation 3x + 5 = 11 is 2.'), ('import data.real.basic\n\n-- Declaration of the decimal numbers as noncomputable\nnoncomputable def a := (2.53 : ℝ)\nnoncomputable def b := (3.47 : ℝ)\n\n-- Proof that the sum of a and b is 6.00\nexample : a + b = 6.00 :=\nbegin\n  unfold a b,\n  norm_num\nend', "Let's consider two decimal numbers: 2.53 and 3.47. What is the sum of these two numbers?", 'To add these decimal numbers, we align them by the decimal point and add them as normal numbers:\n\n```\nline 1    2.53\nline 2  + 3.47\nline 3  ------\nline 4    6.00\nline 5 ```\nline 6 \nline 7 So, the sum of 2.53 and 3.47 is 6.00.\nline 8 \nline 9'), ("import data.real.basic\n\n-- Definitions of Jonah and Sam's positions as functions of time\ndef Jonah_position (t : ℝ) := 5 * t\ndef Sam_position (t : ℝ) := 3 * t + 20\n\n-- Theorem stating that Jonah catches up to Sam after 10 seconds\ntheorem Jonah_catches_Sam : \n  ∃ t : ℝ, Jonah_position t = Sam_position t ∧ t = 10 :=\nbegin\n  use 10,\n  split,\n  { unfold Jonah_position Sam_position, ring, },\n  { refl, },\nend", 'Jonah and Sam are running a race. Jonah runs at a steady speed of 5 meters per second, while Sam runs at a speed of 3 meters per second. They both start at the same time, but Sam starts 20 meters ahead of Jonah. How long does it take for Jonah to catch up to Sam?', "Jonah and Sam's positions over time can be represented as linear functions. Jonah's position at any given second (t) can be represented as 5t, and Sam's position can be represented as 3t + 20, where t is time in seconds.\n\nTo find the time it takes for Jonah to catch up to Sam, we need to find the time t at which 5t equals 3t + 20. By solving this equation, we first subtract 3t from both sides, which gives us 2t = 20. Then, by dividing both sides by 2, we get t = 10. Therefore, it takes 10 seconds for Jonah to catch up to Sam."), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def ribbon_length : ℝ := 3.6\nnoncomputable def piece_length : ℝ := 0.6\n\n-- defining the function that calculates the number of pieces\nnoncomputable def number_of_pieces (ribbon_length piece_length : ℝ) : ℝ := ribbon_length / piece_length\n\n-- proving the solution\nexample : number_of_pieces ribbon_length piece_length = 6 :=\nbegin\n  unfold number_of_pieces,\n  unfold ribbon_length,\n  unfold piece_length,\n  norm_num,\nend', 'Sarah has a ribbon that is 3.6 meters long. She wants to cut the ribbon into pieces that are 0.6 meters long. How many pieces can Sarah cut from the ribbon?', 'To find out how many pieces Sarah can cut from the ribbon, we need to divide the total length of the ribbon by the length of each piece. So, we divide 3.6 meters by 0.6 meters. The result is 6. Therefore, Sarah can cut 6 pieces from the ribbon.'), ('import data.real.basic\n\nopen real\n\n#check (2:ℝ) ^ 3 * 0.5\n\nexample : (2:ℝ) ^ 3 * 0.5 = 4 :=\nbegin\n  norm_num,\nend', 'Given the expression (2^3) * (0.5), calculate the result.', 'The expression can be broken down into two parts: 2^3 and 0.5. The exponent in 2^3 means that 2 is multiplied by itself 3 times, giving us 2*2*2 = 8. The second part of the expression is 0.5, which is a fraction that is equivalent to 1/2. To find the result of the expression, we multiply 8 (the result of 2^3) by 0.5, giving us 8*0.5 = 4. So, the result of the expression (2^3) * (0.5) is 4.'), ('import data.real.basic\n\n-- defining the variables\ndef b := (10 : ℝ) -- base\ndef h1 := (15 : ℝ) -- height of rectangle\ndef h2 := (30 : ℝ) -- height of triangle\n\n-- defining the area of rectangle and triangle\ndef area_rectangle := b * h1\nnoncomputable def area_triangle := b * h2 / 2\n\n-- proving the difference of areas is 0\nexample : area_rectangle - area_triangle = 0 :=\nbegin\n  rw [area_rectangle, area_triangle], -- replace definitions\n  unfold b h1 h2, -- unfold the definitions of b, h1 and h2\n  norm_num, -- perform calculations\nend', 'A rectangle and a triangle share the same base of length 10 units. The rectangle has a height of 15 units and the triangle has a height of 30 units. What is the difference between the areas of the rectangle and the triangle?', 'To start, we find the area of the rectangle. The area of a rectangle is calculated by multiplying the length of the base by the height, so the area of the rectangle is 10 units * 15 units = 150 square units.\n\nNext, we find the area of the triangle. The area of a triangle is calculated by multiplying the length of the base by the height and then dividing by 2, so the area of the triangle is (10 units * 30 units) / 2 = 150 square units.\n\nFinally, we find the difference between the areas of the rectangle and the triangle by subtracting the area of the triangle from the area of the rectangle. Since the areas are the same, the difference is 150 square units - 150 square units = 0 square units.'), ('open nat\n\ndef hourly_wage : ℕ := 12\ndef hours_worked : ℕ := 4\ndef total_earned : ℕ := 73\n\n-- Calculate total hourly wages\ndef total_hourly_wages : ℕ := hourly_wage * hours_worked\n\n-- Subtract total hourly wages from total earned to find transportation earnings\ndef transportation_earnings : ℕ := total_earned - total_hourly_wages\n\nexample : transportation_earnings = 25 := by refl', 'John has a part-time job. He earns $12 per hour, plus $25 for transportation. If he worked for 4 hours one day and earned a total of $73, how much does he earn for transportation?', 'The total amount John earned is made up of two parts: his hourly wages and his transportation allowance. His hourly wages total $12 per hour * 4 hours = $48. The rest of his earnings is for transportation. So we subtract his hourly wages from his total earnings to find out how much he earns for transportation: $73 - $48 = $25. Therefore, John earns $25 for transportation.'), ('def total_parts (boys girls : ℕ) : ℕ := boys + girls\ndef students_per_part (total boys girls : ℕ) : ℕ := total / total_parts boys girls\ndef num_boys (total boys girls : ℕ) : ℕ := students_per_part total boys girls * boys\ndef num_girls (total boys girls : ℕ) : ℕ := students_per_part total boys girls * girls\n#eval num_boys 20 3 2 -- outputs 12\n#eval num_girls 20 3 2 -- outputs 8', 'In a classroom, the ratio of boys to girls is 3:2. If there are total 20 students in the class, how many boys and girls are there?', 'First, we find the total parts in the ratio, which is 3 (for boys) + 2 (for girls) = 5. \n\nNext, each part of the ratio represents a certain number of students. In this case, the number of students per part is 20 (total students) divided by 5 (total parts), which equals 4 students per part. \n\nFinally, we can find the number of boys by multiplying the number of parts for boys (3) by the number of students per part (4), which gives us 12 boys. Similarly, the number of girls is the number of parts for girls (2) times the number of students per part (4), which gives us 8 girls.'), ('import data.nat.basic\n\n-- define the initial number of apples James has\ndef james_initial_apples : ℕ := 5\n\n-- define the number of apples Anna gives to James\ndef anna_apples : ℕ := 3\n\n-- define the number of apples James eats\ndef james_eats : ℕ := 2\n\n-- calculate the total number of apples James has after Anna gives him some\ndef total_after_anna : ℕ := james_initial_apples + anna_apples\n\n-- calculate the final number of apples James has after eating some\ndef total_after_eating : ℕ := total_after_anna - james_eats\n\n-- proof that James has 6 apples after all these operations\nexample : total_after_eating = 6 :=\nbegin\n  unfold total_after_eating,\n  unfold total_after_anna,\n  exact rfl,\nend', 'James has 5 apples and his friend Anna gives him 3 more. Later, James eats 2 of the apples. How many apples does James have now?', 'James starts with 5 apples. When Anna gives him 3 more, James has 5 + 3 = 8 apples. Then, after eating 2 apples, James has 8 - 2 = 6 apples remaining.'), ('import data.real.basic\n\n-- defining the measures of the angles\ndef angle_A : ℝ := 30\ndef angle_B : ℝ := 60\ndef angle_C : ℝ := 180 - angle_A - angle_B\n\n-- proof that the ratio of the measure of angle A to angle C is 1:3\nexample : angle_A / angle_C = 1 / 3 :=\nbegin\n  -- simplifying the expressions\n  have h₁ : angle_C = 180 - 30 - 60, from rfl,\n  have h₂ : angle_C = 90, by linarith,\n  have h₃ : angle_A = 30, from rfl,\n  -- calculating the ratio\n  rw [h₂, h₃],\n  norm_num,\nend', 'In a triangle ABC, if the measure of angle A is 30 degrees, and the measure of angle B is 60 degrees, what is the ratio of the measure of angle A to the measure of angle C?', 'Since the sum of the angles in a triangle is 180 degrees, we can calculate the measure of angle C by subtracting the measures of angles A and B from 180. Therefore, angle C is 180 - 30 - 60 = 90 degrees. \n\nThe ratio of the measure of angle A to the measure of angle C is 30:90. Simplifying this ratio by dividing both sides by 30, we get 1:3. \n\nSo, the ratio of the measure of angle A to the measure of angle C is 1:3.'), ('import data.int.basic\nimport tactic.norm_num\n\n-- defining the initial debt, the amount paid off, and the additional money borrowed\ndef debt : ℤ := -500\ndef paid : ℤ := 200\ndef borrowed : ℤ := -100\n\n-- calculating the remaining debt\ndef remaining_debt := debt + paid + borrowed\n\n-- proof\nexample : remaining_debt = -400 :=\nbegin\n  -- simplifying the expression for the remaining debt\n  unfold remaining_debt,\n  -- using the definitions of debt, paid, and borrowed\n  rw [debt, paid, borrowed],\n  -- proving the equality\n  norm_num,\nend', 'John has a debt of $500 to his friend Mike. He pays off $200 of it. Then he borrows another $100 from Mike. How much does he still owe to Mike?', 'John initially owes $500. After paying off $200, he reduces his debt to $500 - $200 = $300. However, by borrowing another $100, his debt increases to $300 + $100 = $400. Therefore, John still owes $400 to Mike.'), ('import data.real.basic\n\n-- we state that there exists a number x (the number of marbles Jack has) such that it satisfies the given conditions\nexample : ∃ x : ℝ, x ≥ 0 ∧ (2*x + 3 ≤ 13) :=\nbegin\n  -- we use the `use` keyword to specify a candidate for x\n  use 5,\n  -- we now need to prove that our candidate satisfies the conditions\n  split,\n  -- the first condition is that x (the number of marbles Jack has) is non-negative,\n  -- which is obviously true for x = 5\n  linarith,\n  -- the second condition is that the total number of marbles is less than or equal to 13,\n  -- which is also true for x = 5\n  linarith,\nend', 'John has 3 more marbles than Jack. If the total number of marbles that they have is less than or equal to 13, what is the maximum number of marbles that Jack can have?', "Let's denote the number of marbles Jack has as x. Then, John has x + 3 marbles. The total number of marbles they have is equal to x (Jack's marbles) + x + 3 (John's marbles), which is 2x + 3. Since the total number of marbles is less than or equal to 13, we have the inequality 2x + 3 ≤ 13. Solving this inequality for x, we first subtract 3 from both sides to get 2x ≤ 10. Then, we divide both sides by 2 to find x ≤ 5. Therefore, the maximum number of marbles that Jack can have is 5."), ('def volume_of_box (length : ℕ) (width : ℕ) (height : ℕ) : ℕ := length*width*height\n\n#eval volume_of_box 12 8 5  -- returns 480', 'A rectangular box has a length of 12 cm, a width of 8 cm, and a height of 5 cm. What is the volume of the box?', 'The volume of a rectangular box is calculated by multiplying the length, width, and height. Therefore, the volume of the box is 12 cm * 8 cm * 5 cm = 480 cubic cm.'), ('import data.real.basic\n\n-- Declare the variables\nvariables (a b c : ℝ)\n\n-- State the problem\nexample (ha : a = 3.2) (hb : b = 4.5) (hc : c = 2.3) : a + b + c = 10.0 :=\nbegin\n  rw [ha, hb, hc],\n  norm_num,\nend', 'If we have the decimal numbers 3.2, 4.5, and 2.3, what is the sum of these numbers?', 'First, we line up the numbers by the decimal point:\n```\nline 1   3.2\nline 2 + 4.5\nline 3 + 2.3\nline 4 -----\nline 5 ```\nline 6 Then, we add each column starting from the rightmost one:\nline 7 ```\nline 8   3.2\nline 9 + 4.5\nline 10 + 2.3\nline 11 -----\nline 12  10.0\nline 13 ```\nline 14 So, the sum of 3.2, 4.5, and 2.3 is 10.0.\nline 15 \nline 16'), ('import data.nat.basic\n\nopen nat\n\ndef a : ℕ := 25\ndef b : ℕ := 40\ndef c : ℕ := 35\n\nexample : (a + b) - c = b - c + a :=\nbegin\n  have h1 : (a + b) - c = 30,\n    calc\n      (a + b) - c = 25 + 40 - 35 : by refl\n              ... = 30 : by refl,\n  have h2 : b - c + a = 30,\n    calc\n      b - c + a = 40 - 35 + 25 : by refl\n            ... = 30 : by refl,\n  rw [h1, h2]\nend', "Let's assume we have three numbers: a = 25, b = 40, and c = 35. If we add a and b together, then subtract c from the result, do we get the same result if we first subtract c from b, then add a to the result?", "Let's solve both equations to see if they give the same result.\n\nFirst, let's add a and b together, then subtract c from the result. This gives us:\n25 + 40 - 35 = 30.\n\nSecond, let's subtract c from b, then add a to the result. This gives us:\n40 - 35 + 25 = 30.\n\nTherefore, both equations give the same result. So, it's true that adding a and b together, then subtracting c gives the same result as subtracting c from b, then adding a."), ('import data.real.basic\n\n-- Definition of the perimeter of a rectangle\ndef rect_perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- Proving the problem\nexample : ∃ (length width : ℝ), rect_perimeter length width = 60 ∧ length = width + 10 :=\nbegin\n  use [20, 10], -- We provide the values of length and width that we found\n  split, -- We split our goal into two subgoals: prove the perimeter is 60 and prove length = width + 10\n  { -- Proving the perimeter is 60\n    unfold rect_perimeter, -- We replace the definition of rect_perimeter in our goal\n    norm_num, -- Lean simplifies the numerical computation for us\n  },\n  { -- Proving length = width + 10\n    norm_num, -- Lean simplifies the numerical computation for us\n  }\nend', 'Let us consider a rectangle. The length of the rectangle is 10 units more than the width. The perimeter of the rectangle is 60 units. Find the length and width of the rectangle.', "Let's denote the width of the rectangle as x (in units). Since the length is 10 units more than the width, the length of the rectangle is x + 10. The perimeter of a rectangle is calculated by the formula 2*(length + width). According to the problem, the perimeter is 60 units, so we have the equation 2*(x + (x + 10)) = 60. \n\nSolving this equation gives us: \n\n2*(2x + 10) = 60,\n4x + 20 = 60,\n4x = 60 - 20,\n4x = 40,\nx = 40 / 4,\nx = 10. \n\nSo, the width of the rectangle is 10 units.\n\nSubstitute x = 10 into the expression for the length gives us: \n\nlength = x + 10 = 10 + 10 = 20. \n\nSo, the length of the rectangle is 20 units."), ("import data.real.basic\n\n-- defining the revenue function R(x) = 12x - 0.5x^2\nnoncomputable def R := λ (x : ℝ), 12*x - 0.5*x^2\n\n-- defining the derivative of the revenue function R'(x) = 12 - x\ndef R' := λ (x : ℝ), 12 - x\n\n-- proof that the maximum revenue occurs when x = 12\nexample : ∀ x : ℝ, R' x = 0 → x = 12 :=\nbegin\n  intros x H,\n  -- R'(x) = 0\n  unfold R' at H,\n  -- solving the equation 12 - x = 0\n  rw sub_eq_zero at H,\n  -- we get x = 12\n  exact eq.symm H,\nend", "A company's revenue R (in thousands of dollars) from selling x units of a product is described by the function R(x) = 12x - 0.5x^2. We need to find the number of units of the product the company needs to sell to maximize its revenue.", "To maximize the revenue, we can find the derivative of the revenue function R(x) and set it equal to 0 to solve for x. \n\nThe derivative of R(x) = 12x - 0.5x^2 is R'(x) = 12 - x. \n\nSetting R'(x) = 0, we get x = 12. \n\nSo, the company needs to sell 12 units of the product to maximize its revenue."), ('import data.real.basic\n\ntheorem add_in_range : ∀ (a b : ℝ), 2 ≤ a → a ≤ 3 → 1 ≤ b → b ≤ 2 → 3 ≤ a + b ∧ a + b ≤ 5 :=\nbegin\n  intros a b ha1 ha2 hb1 hb2,\n  split,\n  { \n    have h1 : 2 + 1 ≤ a + b,\n    from add_le_add ha1 hb1,\n    linarith,\n  }, \n  {\n    have h2 : a + b ≤ 3 + 2,\n    from add_le_add ha2 hb2,\n    linarith,\n  }\nend', 'If a and b are real numbers such that 2 ≤ a ≤ 3 and 1 ≤ b ≤ 2, prove that 3 ≤ a + b ≤ 5.', 'The smallest possible value of a + b is achieved when both a and b are at their minimum values. In this case, a = 2 and b = 1, so a + b = 2 + 1 = 3. The largest possible value of a + b is achieved when both a and b are at their maximum values. In this case, a = 3 and b = 2, so a + b = 3 + 2 = 5. Therefore, we can conclude that 3 ≤ a + b ≤ 5.'), ('def expression (x y z : ℕ) : ℕ := 5*x + 3*y - 2*z\ndef x := 2\ndef y := 3\ndef z := 1\n#eval expression x y z  -- output is 17', 'Consider the following expression: 5x + 3y - 2z. If x = 2, y = 3, and z = 1, what is the value of the expression?', 'We can solve this problem by substituting the given values of x, y, and z into the expression. \n\nSubstitute x = 2, y = 3, and z = 1 into the expression to get 5*2 + 3*3 - 2*1. \n\nBy following the order of operations, we first perform the multiplication to get 10 + 9 - 2. \n\nThen perform the addition and subtraction from left to right to get 19 - 2 = 17.\n\nSo, the value of the expression when x = 2, y = 3, and z = 1 is 17.'), ('import data.nat.basic\n\nopen nat\n\n-- Define the number of boxes and the number of pencils in each box\ndef boxes : ℕ := 5\ndef pencils_per_box : ℕ := 12\n\n-- Define the total number of pencils as the product of the number of boxes and the number of pencils in each box\ndef total_pencils : ℕ := boxes * pencils_per_box\n\n-- Proof that the total number of pencils is 60\nexample : total_pencils = 60 :=\nbegin\n  -- Calculate the total number of pencils\n  unfold total_pencils,\n  unfold boxes,\n  unfold pencils_per_box,\n  \n  -- Simplify the product\n  rw mul_comm,\n  exact rfl,\nend', 'John has 5 boxes of pencils. Each box contains 12 pencils. How many pencils does John have in total?', 'John has 5 boxes, and each box contains 12 pencils. So, to find the total pencils John has, we have to multiply the number of boxes by the number of pencils in each box. Hence, 5 boxes times 12 pencils equals 60 pencils. Therefore, John has 60 pencils in total.'), ('def rays_around_sun : ℕ := 360\ndef degrees_per_ray : ℕ := 40\ndef rays_painted : ℕ := rays_around_sun / degrees_per_ray\n\n#eval rays_painted\n-- returns 9', 'In a certain school, the students are planning to paint a wall mural. The mural design includes a large, bright sun, with rays spreading out from the center. Each ray forms an angle of 40 degrees with the next. The students start painting from the top of the sun and want to know how many rays they can paint before they reach the bottom.', 'We know that the sum of angles all the way around a point (or the full circle around the sun) is 360 degrees. Each ray creates an angle of 40 degrees with its neighbor. To find out how many rays the students can paint, we need to divide the total degrees in a circle, which is 360, by the degrees each ray takes up, which is 40. So, 360 ÷ 40 = 9. Hence, the students can paint 9 rays before they reach the bottom of the sun.'), ('import data.real.basic\n\n-- defining the amounts of money John had and his mother gave him\nnoncomputable def john_money : ℝ := 3.75\nnoncomputable def mother_money : ℝ := 2.10\n\n-- defining the total amount of money John has now\nnoncomputable def total_money := john_money + mother_money\n\n-- proof that the total money John has now is $5.85\nexample : total_money = 5.85 :=\nbegin\n  unfold total_money,\n  unfold john_money,\n  unfold mother_money,\n  norm_num,\nend', 'John has $3.75 in his pocket. His mother gives him $2.10 for lunch. How much money does John have now?', 'To solve this problem, we need to add the two amounts of money together. When you add $3.75 and $2.10, you get $5.85. So, John has $5.85 now.'), ('import data.real.basic\n\nexample : (1.5 : ℝ) - (0.75 : ℝ) = (0.75 : ℝ) :=\nbegin\n  norm_num,\nend', 'Mary has 1.5 bars of chocolate. She eats 0.75 bars of chocolate. How many bars of chocolate does Mary have now?', 'Mary starts with 1.5 bars of chocolate. If she eats 0.75 bars, we can subtract this amount from what she initially had. So, we subtract 0.75 from 1.5 to figure out how much chocolate Mary has now. The result is 0.75 bars of chocolate.'), ('import data.real.basic\n\nnoncomputable def f (x : ℝ) : ℝ :=\nif x > 0 then x else -x\n\ntheorem abs_eq_f (x : ℝ) : abs x = f x := \nbegin\n  unfold f,\n  split_ifs with h,\n  { rw abs_of_pos h, },\n  { rw abs_of_nonpos (le_of_not_gt h), },\nend', 'Given a piecewise function f(x) defined as follows:\n\nf(x) = \n  x, if x > 0,\n  -x, if x ≤ 0.\n\nProve that the absolute value of any real number x is equal to f(x).', 'We can break down the proof into two cases.\n\nCase 1: If x > 0, the absolute value of x is x itself, which is exactly the value of function f(x) in this case. \n\nCase 2: If x ≤ 0, the absolute value of x is -x, which is also the value of function f(x) in this case. \n\nSo, in either case, the absolute value of x is equal to the value of the function f(x). Therefore, the absolute value of any real number x is equal to f(x).'), ('def rectangle_area (length width : ℕ) : ℕ := length * width\n#eval rectangle_area 8 4  -- output: 32', "Alice is making a rectangular garden. The length of the garden is 8 feet and the width is 4 feet. What is the area of Alice's garden?", "The area of a rectangle can be calculated by multiplying the length by the width. In this case, Alice's garden has a length of 8 feet and a width of 4 feet. So, we multiply 8 by 4 to get the area. Therefore, the area of Alice's garden is 32 square feet."), ('import data.nat.basic\n\nopen nat\n\ndef number_of_lego_pieces (lego_sets : ℕ) (pieces_per_set : ℕ) (extra_pieces : ℕ) : ℕ :=\nlego_sets * pieces_per_set + extra_pieces\n\nexample : number_of_lego_pieces 10 12 23 = 143 :=\nbegin\n  unfold number_of_lego_pieces,\n  exact dec_trivial,\nend', "Johnny has 10 Lego sets. Each Lego set contains 12 pieces. Johnny's friend, Timmy, gives him another 23 Lego pieces. How many Lego pieces does Johnny have in total?", 'First, we need to find out how many Lego pieces Johnny has from his Lego sets. Since each Lego set contains 12 pieces and Johnny has 10 sets, we multiply 10 by 12, which equals 120 pieces. \nThen, we add the 23 Lego pieces that Timmy gave to Johnny to the 120 pieces Johnny already had. Therefore, Johnny has 120 + 23 = 143 Lego pieces in total.'), ('open nat\n\nexample : 5 - 2 = 3 :=\nbegin\n  refl,\nend', 'If Lucy has 5 apples and she gives 2 apples to her friend, how many apples does she have left?', 'If Lucy starts with 5 apples and gives away 2, she subtracts 2 from 5. The subtraction operation 5 - 2 equals 3. Therefore, Lucy has 3 apples left.'), ('import data.real.basic\n\ndef f (x : ℝ) : ℝ := 60 * x\n\nexample : f 5 + 10 = 310 :=\nbegin\n  unfold f,\n  norm_num,\nend', "A car travels at a constant speed of 60 miles per hour. After 2 hours, the car's odometer is discovered to be malfunctioning and is reading 10 miles less than it should. What is the car's real distance after 5 hours?", 'Since the car travels at a constant speed of 60 miles per hour, the distance it would cover in 2 hours would be 2 * 60 = 120 miles. However, the odometer was reading 10 miles less, which means it read 120 - 10 = 110 miles. We know that the odometer was off by 10 miles in 2 hours, so the car would actually travel 10 more miles than the odometer would read in 2 hours. Using the same rate, the car would travel 60 * 5 = 300 miles in 5 hours according to the speed. Given the odometer error, the actual distance would be 300 + 10 = 310 miles.'), ('import data.real.basic\n\nvariables a b c : ℝ\n\ntheorem transitive_inequality : a > b → b > c → a > c :=\nbegin\n  intros,\n  apply lt_trans,\n  repeat {assumption},\nend', 'Let a, b, and c be real numbers. If a > b and b > c, prove that a > c.', 'If a is greater than b, and b is greater than c, then a is greater than c. This is due to the transitive property of inequalities, which states that if one number is greater than a second number, and that second number is greater than a third number, then the first number is greater than the third number. Hence, a > c.'), ('-- Definitions\ndef garden_length := 10  -- in meters\ndef garden_width := 4   -- in meters\ndef fence_cost := 5     -- in dollars per meter\n\n-- Calculation\ndef garden_perimeter := 2 * (garden_length + garden_width) -- in meters\ndef total_cost := garden_perimeter * fence_cost -- in dollars\n\n-- Check\n#eval total_cost  -- returns 140', 'John has a rectangular garden measuring 10 meters long and 4 meters wide. He wants to install a fence around the garden. The cost of the fence is $5 per meter. How much will he spend on the fence?', "To find out how much John will spend on the fence, we first need to calculate the perimeter of the garden. The perimeter of a rectangle is calculated by the formula 2*(length + width). So, the perimeter of John's garden would be 2*(10m + 4m) = 28 meters. Given that the cost of the fence is $5 per meter, John will spend 28m * $5/m = $140 on the fence."), ('import data.int.basic\n\nopen int\n\ntheorem solve_eq : ∀ (x : ℤ), x - 7 = 5 → x = 12 :=\nbegin\n  intros x h,\n  have h1 : x = 5 + 7, from eq_add_of_sub_eq h,\n  rw add_comm at h1,\n  exact h1\nend', 'If x - 7 = 5, what is the value of x?', 'To solve for x, you would simply add 7 to both sides of the equation to isolate x on one side. So, x - 7 + 7 = 5 + 7, which simplifies to x = 12.'), ("import data.real.basic\n\n-- Let's represent the lengths of the sides of the triangles as real numbers\ndef AB : ℝ := 5\ndef BC : ℝ := 12\ndef AC : ℝ := 13\ndef DE : ℝ := 10\ndef EF : ℝ := 24\ndef DF : ℝ := 26\n\n-- The ratios of the corresponding sides of the two triangles are equal\nexample : AB / DE = BC / EF ∧ BC / EF = AC / DF :=\nbegin\n  split,\n  -- Calculate the ratios\n  { calc AB / DE = 5 / 10 : by rw [AB, DE]\n    ... = 12 / 24 : by norm_num\n    ... = BC / EF : by rw [BC, EF] },\n  { calc BC / EF = 12 / 24 : by rw [BC, EF]\n    ... = 13 / 26 : by norm_num\n    ... = AC / DF : by rw [AC, DF] }\nend", 'In triangle ABC, AB is 5 cm, BC is 12 cm, and AC is 13 cm. In triangle DEF, DE is 10 cm, EF is 24 cm, and DF is 26 cm. Are these two triangles similar? Why or why not?', 'Yes, the two triangles are similar. \n\nTriangles are similar if they have the same shape, but not necessarily the same size. This means that the corresponding sides of the triangles are in proportion. \n\nIn triangle ABC, the sides are 5 cm, 12 cm, and 13 cm. In triangle DEF, the sides are 10 cm, 24 cm, and 26 cm. \n\nIf we write these as ratios, we get 5:12:13 for ABC and 10:24:26 for DEF. \n\nIf we simplify the ratio for DEF, we also get 5:12:13. \n\nTherefore, the corresponding sides of the two triangles are in proportion, and the two triangles are similar.'), ('import data.real.basic\n\n-- defining the cost function\ndef C (x : ℝ) := 2*x + 100\n\n-- defining the revenue function\ndef R (x : ℝ) := 5*x\n\n-- defining the profit function\ndef P (x : ℝ) := R x - C x\n\n-- proof that the profit function is correct\nexample : ∀ (x : ℝ), P x = 3*x - 100 :=\nbegin\n  intro,\n  unfold P R C,\n  linarith,  \nend\n\n-- proof that the break-even point is at x = 34\nexample : P (34:ℝ) = 2 :=\nbegin\n  unfold P R C,\n  linarith,\nend', "John started a small business selling handmade bookmarks. He has initial costs of $100 for materials, and the cost to produce each bookmark is $2. He sells each bookmark for $5. If we denote the number of bookmarks John produces and sells as x, define a function to represent John's profit. \n\nFurthermore, how many bookmarks must John sell to break even?", "First, we need to identify the costs and revenue in this situation. The cost for John to produce the bookmarks is the initial $100 plus $2 per bookmark, so the cost function is C(x) = 2x + 100. The revenue from selling the bookmarks is $5 per bookmark, so the revenue function is R(x) = 5x. The profit function is the difference between the revenue and the cost, so P(x) = R(x) - C(x) = 5x - (2x + 100) = 3x - 100.\n\nTo find the break-even point, we set the profit equal to zero and solve for x. \n\n0 = 3x - 100\n\nAdding 100 to both sides gives:\n\n100 = 3x\n\nThen, dividing both sides by 3 gives:\n\nx = 100 / 3 ≈ 33.33.\n\nSo, John needs to sell about 34 bookmarks (since he can't sell a fraction of a bookmark) to break even."), ('import data.int.basic\n\nopen int\n\ndef money_left (initial_money : ℤ) (money_spent : ℤ) : ℤ :=\ninitial_money - money_spent\n\n#eval money_left 10 15 \n--output: -5', 'John has $10 in his wallet. He spends $15 on a book. How much money does he have left?', 'John starts with $10. He then spends $15, which we represent as subtracting $15 from $10. The operation is thus 10 - 15, which equals -5. Therefore, John has -$5 left, which means he owes $5.'), ("import data.real.basic\n\n-- Let's define the quadratic function that represents the area of the rectangle\ndef f (x : ℝ) := x^2 + 3*x - 28\n\n-- Now we prove that one of the roots of this equation is 4\nexample : f 4 = 0 :=\nbegin\n  unfold f,           -- expand the definition of f\n  norm_num,           -- simplify the expression\nend\n\n-- We also prove that the other root of this equation is -7\nexample : f (-7) = 0 :=\nbegin\n  unfold f,           -- expand the definition of f\n  norm_num,           -- simplify the expression\nend\n\n-- However, since a negative width does not make sense in this context, \n-- we discard x = -7. Therefore, the width of the rectangle is 4 units, \n-- and the length is 4 + 3 = 7 units.", 'A rectangle has a length that is 3 units longer than its width. The area of the rectangle is 28 square units. What are the dimensions of the rectangle?', "Let's denote the width of the rectangle as x (in units). Therefore, the length of the rectangle can be denoted as x + 3 (in units). The area of a rectangle is calculated by multiplying the length by the width, so we can create the following equation: x * (x + 3) = 28. \n\nFirst, expand the equation, which gives: x^2 + 3x - 28 = 0. This is a quadratic equation, and we can solve it by factoring. The factors of 28 that add up to 3 are 7 and -4, so the factored form of the equation is (x - 4)(x + 7) = 0. \n\nSetting each factor equal to zero gives the potential solutions x = 4 and x = -7. However, a negative width does not make sense in this context, so we discard x = -7. Therefore, the width of the rectangle is 4 units, and the length is 4 + 3 = 7 units."), ("import data.list.basic\nimport data.real.basic\n\nopen list\n\n-- assuming we have the definition of correlation\nvariables (x y : list ℝ)\nnoncomputable def correlation (x y : list ℝ) : ℝ := \n  if (length x ≠ length y) ∨ (length x = 0) then 0 else 1  -- dummy implementation, replace with actual calculation\n\n-- scatterplot is said to have a positive correlation if the correlation is positive\ndef scatterplot (x y : list ℝ) : Prop := correlation x y > 0\n\n-- postulate that multiplying each elements in x by 2 doesn't change the sign of correlation\naxiom correlation_of_transformation : \n  ∀ x y : list ℝ, scatterplot x y → scatterplot (map (λ a, 2*a) x) y\n\ntheorem transformation_preserves_correlation : \n  ∀ x y : list ℝ, scatterplot x y → scatterplot (map (λ a, 2*a) x) y :=\nbegin\n  intros x y h,\n  apply correlation_of_transformation,\n  assumption,\nend", 'In a high school baseball team, the coach made a scatterplot to record the relationship between the number of hours each player practiced in a week (x-axis) and the number of home runs they hit in the same week (y-axis). The coach noticed that the scatterplot exhibits a positive correlation. He then performed a transformation on the scatterplot by multiplying each x-value (the number of hours practiced) by 2. \n\nDoes the transformed scatterplot retain the positive correlation exhibited by the original scatterplot?', 'Yes, the transformed scatterplot retains the positive correlation exhibited by the original scatterplot. This is because the transformation applied by the coach is a linear transformation. Linear transformations preserve the properties of the data, including the correlation between the variables. In this case, the transformation simply stretches the x-axis by a factor of 2, but the relationship between the variables (the number of hours practiced and the number of home runs hit) remains the same. Therefore, the correlation is still positive.'), ('import data.real.basic\n\n-- Defining Candy A and Candy B\nnoncomputable def Candy_A := (1 : ℝ) / 4\nnoncomputable def Candy_B := (1 : ℝ) / 2\n\n-- Defining the function for calculating the total money made from selling candies\nnoncomputable def total_money (n : ℕ) (m : ℕ) : ℝ := n * Candy_A + m * Candy_B\n\n-- Proving the problem\nexample : total_money 50 20 = 22.5 :=\nbegin\n  unfold total_money,\n  unfold Candy_A,\n  unfold Candy_B,\n  norm_num,\nend', 'A shopkeeper has two types of candies in his candy shop: Candy A and Candy B. Each candy A costs 1/4 of a dollar and each candy B costs 1/2 of a dollar. The shopkeeper sold 50 Candy A and 20 Candy B on a particular day. What is the total amount of money he made from selling these candies?', 'First, we need to find the total money made from selling Candy A. Since each Candy A costs 1/4 of a dollar, the total money made from selling 50 Candy A is 50 * 1/4 = 12.5 dollars.\n\nThen, we need to find the total money made from selling Candy B. Since each Candy B costs 1/2 of a dollar, the total money made from selling 20 Candy B is 20 * 1/2 = 10 dollars.\n\nFinally, we add up the money made from both types of candies. So, the total amount of money made from selling these candies is 12.5 + 10 = 22.5 dollars.'), ('import data.real.basic\n\nopen real\n\n-- declare a variable `n` for length of string\nnoncomputable def n := (8^2 : ℝ)\n\n-- declare a variable `m` for length of each small piece\nnoncomputable def m := (1/2 : ℝ)\n\n-- calculate the number of pieces\nnoncomputable def pieces := n / m\n\n-- prove that Mike will get 128 pieces of string\nexample : pieces = 128 :=\nbegin\n  unfold pieces,\n  unfold n,\n  unfold m,\n  norm_num,\nend', 'Mike is cutting a piece of string into small pieces. Each small piece is 1/2 foot long. If he has a string 8^2 feet long and he wants to cut the string into pieces without any remainder, how many pieces of string will Mike get?', 'First, we need to calculate the total length of the string. Since the length is given by 8^2, we know that we multiply 8 by itself to get 64 feet. \n\nNext, we need to divide the total length of the string by the length of each small piece. Since each small piece is 1/2 foot long, we divide 64 by 1/2. \n\nRecall that dividing by a fraction is the same as multiplying by its reciprocal. So, we multiply 64 by 2/1, which gives us 128. Therefore, Mike will get 128 pieces of string.'), ('import data.real.basic\n\n-- define a and b\ndef a : ℝ := 5\ndef b : ℝ := 3\n\n-- calculate a^2 + b^2\n#eval (a^2 + b^2)', 'In a basket, there are 5 apples and 3 oranges. If we express the ratio of apples to oranges as a:b, then calculate the value of a^2 + b^2.', 'The ratio of apples to oranges is 5:3, so a=5 and b=3. Now we calculate the value of a^2 + b^2. It is equal to 5^2 + 3^2 = 25 + 9 = 34. So, a^2 + b^2 = 34.'), ('import data.real.basic\n\n-- First, we declare our variables\ndef side1 : ℝ := 5\ndef side2 : ℝ := 7\ndef side3 : ℝ := 5\ndef side4 : ℝ := 7\n\n-- The perimeter of a quadrilateral is the sum of the lengths of its four sides.\ndef perimeter : ℝ := side1 + side2 + side3 + side4\n\n-- Now we can compute the perimeter\n#eval perimeter\n-- This will output 24: ℝ, which means the perimeter of the field is 24 meters.', 'Sarah has a quadrilateral shaped field. The lengths of the four sides of the field are 5 meters, 7 meters, 5 meters, and 7 meters respectively. What is the perimeter of the field?', "The perimeter of a quadrilateral is the sum of the lengths of its four sides. In this case, we add 5 meters, 7 meters, 5 meters, and 7 meters together. The sum, 24 meters, is the perimeter of Sarah's field."), ('import data.nat.basic\n\nopen nat\n\n-- Define x and y\ndef x := 36\ndef y := 12\n\n-- Proof that x is a factor of 36\nexample : x ∣ 36 :=\nbegin\n  use 1,\n  refl,\nend\n\n-- Proof that y is a multiple of 4\nexample : 4 ∣ y :=\nbegin\n  use 3,\n  refl,\nend\n\n-- Proof that x + y = 48\nexample : x + y = 48 :=\nbegin\n  refl,\nend', 'Given two numbers, 36 and 48. Find two numbers, x and y, where x is a factor of 36, y is a multiple of 4, and x + y = 48.', 'We know that the factors of 36 are 1, 2, 3, 4, 6, 9, 12, 18, 36. \nWe also know that 48 is a multiple of 4, so y can be 4, 8, 12, 16, ..., up to 48.\nWe can create a system of equations where x is a factor of 36 and y is a multiple of 4. From the equation `x + y = 48`, we can find the pair (x, y) to be (36, 12), where x is a factor of 36 and y is a multiple of 4.'), ('-- Define the data set as a list of integers\ndef data_set : list nat := [4, 6, 8, 10, 12, 14]\n\n-- Define a function to calculate the sum of a list of integers\ndef list_sum : list nat → nat \n| [] := 0\n| (x::xs) := x + list_sum xs\n\n-- Define a function to calculate the mean of a list of integers\ndef mean (l : list nat) : nat := list_sum l / l.length\n\n-- Calculate the mean of the data set\n#eval mean data_set ', 'Consider the following data set: {4, 6, 8, 10, 12, 14}. You are asked to model the data distribution and find the mean of the data set.', 'To model the data distribution, we can use a frequency distribution, where each value in the data set is counted and then placed into a chart. For this data set, each number only appears once. Therefore, the frequency of each number is 1. \n\nIn order to calculate the mean of the data set, we need to add up all the numbers in the data set and then divide by the total number of data points. In our case, the sum of the numbers is 4+6+8+10+12+14 = 54. The total number of data points is 6. Therefore, the mean of the data set is 54/6 = 9.'), ('import data.real.basic\n\n-- define variables\ndef length := (15 : ℝ)\ndef width := (10 : ℝ)\ndef cost_per_meter := (10 : ℝ)\ndef total_cost := (length * 2 + width * 2) * cost_per_meter\nnoncomputable def half_cost := total_cost / 2\nnoncomputable def new_perimeter := half_cost / cost_per_meter\nnoncomputable def decrease_in_perimeter := length * 2 + width * 2 - new_perimeter\n\n-- prove that the decrease in perimeter is 25 meters\nexample : decrease_in_perimeter = 25 :=\nbegin\n  unfold decrease_in_perimeter,\n  unfold new_perimeter,\n  unfold half_cost,\n  unfold total_cost,\n  unfold length,\n  unfold width,\n  unfold cost_per_meter,\n  norm_num,\nend', "A rectangular garden has a length of 15 meters and a width of 10 meters. Tom decides to build a fence around the garden. The fence costs $10 per meter. Later, Tom realizes he doesn't have enough money and needs to decrease the cost by half. By how many meters should he decrease the perimeter of the garden?", 'First, we need to calculate the perimeter of the rectangle, which is 2*(length+width). The length is 15 meters and the width is 10 meters, so the perimeter is 2*(15+10) = 50 meters. The cost for the fence is $10 per meter, so the total cost is 50*10 = $500. \n\nTom wants to decrease the cost by half, so he needs to reduce it to $500/2 = $250. Since the cost of the fence is $10 per meter, the new perimeter should be $250/$10 = 25 meters. Therefore, Tom needs to reduce the perimeter by 50-25 = 25 meters.'), ('def sequence (n : ℕ) : ℤ := 20 - 5 * (n - 1)\n#eval sequence 10  -- output should be -25', 'In a pattern, each number is five less than the previous number. If the first number is 20, what is the 10th number in this sequence?', 'In this pattern, each number is 5 less than the previous one. So, to find the 10th number, we calculate how much less the 10th number is compared to the first one. Since each step decreases the number by 5, and there are 9 steps from the first number to the 10th one (10 - 1 = 9), the total decrease is 9 * 5 = 45. Thus, the 10th number is 20 - 45 = -25.'), ('import data.real.basic\n\n-- We first define a function to represent the area of the extended garden.\ndef extended_garden (x : ℝ) : ℝ := (12 + x) * (8 + x)\n\n-- The area of the original garden\ndef original_garden : ℝ := 12 * 8\n\n-- We then solve the equation that the area of the extended garden is twice the area of the original garden.\nexample : ∃ x : ℝ, extended_garden x = 2 * original_garden ∧ x > 0 :=\nbegin\n  use 4,\n  split,\n  -- we show that when x = 4, the equation holds\n  { dsimp [extended_garden, original_garden],\n    norm_num },\n  -- we show that x = 4 is positive\n  { norm_num }\nend', 'Lisa has a rectangular garden that is 12 meters long and 8 meters wide. She decided to increase the size of her garden by extending the length and width by the same amount. After the extension, the area of her garden became twice as large as before. What is the extension length and width she added to her garden?', 'Let x be the extension length and width Lisa added to her garden. After the extension, the length of the garden became 12 + x meters and the width became 8 + x meters. According to the problem, the area of the extended garden is twice the area of the original garden, which means (12 + x) * (8 + x) = 2 * 12 * 8.\n\nSolving this equation, we get: \nx^2 + 20x - 96 = 0. \nFactoring the equation, we get: \n(x - 4)(x + 24) = 0. \n\nSo, x = 4 or x = -24. Because the extension length and width cannot be negative, x = -24 is not a valid solution. Therefore, Lisa added an extension length and width of 4 meters to her garden.'), ("import data.real.basic\n\n-- let's define the length and width of the garden, and the width of the path\ndef garden_length : ℝ := 10\ndef garden_width : ℝ := 6\ndef path_width : ℝ := 2\n\n-- the area of the garden is the product of its length and width\ndef garden_area : ℝ := garden_length * garden_width\n\n-- the area of the path is the product of the garden's length and the path's width\ndef path_area : ℝ := garden_length * path_width\n\n-- the area left for planting is the difference between the garden's area and the path's area\ndef planting_area : ℝ := garden_area - path_area\n\n-- proof that the planting area is 40 square feet\nexample : planting_area = 40 :=\nbegin\n  unfold planting_area garden_area path_area,\n  rw [garden_length, garden_width, path_width],\n  norm_num,\nend", 'John has a rectangular garden. The length of the garden is 10 feet and the width is 6 feet. John plants vegetables in half of the garden and flowers in the other half. He also has a 2-foot-wide path that runs along the length of the garden. How many square feet of the garden are left for growing vegetables and flowers?', 'First, we calculate the total area of the garden by multiplying the length and width of the garden. So, the area of the garden is 10 feet * 6 feet which equals 60 square feet. \n\nNext, we calculate the area of the path. The path runs along the length of the garden, so its area is 10 feet * 2 feet which equals 20 square feet. \n\nFinally, we subtract the area of the path from the total area of the garden to find out the area left for growing vegetables and flowers. So, 60 square feet - 20 square feet equals 40 square feet. \n\nTherefore, John has 40 square feet of his garden left for growing vegetables and flowers.'), ('import data.nat.basic\n\nopen nat\n\ndef noah_age : ℕ := 2^3\ndef emma_age : ℕ := noah_age * 2\ndef total_age : ℕ := emma_age + noah_age\n\nexample : noah_age = 8 := by refl\nexample : emma_age = 16 := by refl\nexample : total_age = 24 := by refl', "There are two siblings, Emma and Noah. Emma is twice as old as Noah. If Noah's age is represented by the expression 2^3, how old is Emma? What is the sum of their ages?", "If Noah's age is represented by the expression 2^3, this means Noah is 8 years old because 2 multiplied by itself 3 times is 8. Since Emma is twice as old as Noah, Emma is 16 years old. The sum of their ages is Emma's age plus Noah's age, which is 16 + 8 = 24 years old."), ('variables (a b c : ℕ)\n\nexample : a = 5 → b = 7 → c = 9 → (b - 2 + c = a + c) :=\nbegin\n  intros ha hb hc,\n  rw [ha, hb, hc],\nend', 'If you have a sequence of three numbers: 5, 7, and 9. If you subtract 2 from the second number and add the result to the third number, does it equal the sum of the first and third numbers in the original sequence?', 'First, we subtract 2 from the second number (7) in the original sequence, which gives us 5. Then we add this result to the third number (9) in the original sequence, which gives us 14. \n\nOn the other hand, the sum of the first and third numbers in the original sequence (5 + 9) is also 14. \n\nTherefore, subtracting 2 from the second number and adding the result to the third number yields the same result as adding the first and third numbers in the original sequence.'), ('import data.real.basic\n\nexample : (3.6 : ℝ) + (2.4 : ℝ) = (6 : ℝ) :=\nbegin\n  norm_num,\nend', "Let's say we have two decimal numbers, 3.6 and 2.4. We want to add these two numbers together. What is the sum?", 'To add 3.6 and 2.4 together, we simply add the numbers like we would with whole numbers. First, we add 6 tenths (from 3.6) and 4 tenths (from 2.4) together to get 10 tenths, which is 1 whole. Then, we add the whole numbers 3 and 2 together to get 5. Finally, we add the 1 whole we got from adding the tenths to the 5 to get 6. So, 3.6 + 2.4 = 6.'), ('import data.real.basic\n\nopen real\n\nnoncomputable def other_leg_length (x : ℝ) (y : ℝ) (z : ℝ) : ℝ := z * y / x\n\nexample (x y z : ℝ) (h₁ : x = 3) (h₂ : y = 4) (h₃ : z = 6) : other_leg_length x y z = 8 :=\nbegin\n  rw [h₁, h₂, h₃, other_leg_length],\n  norm_num,\nend', 'In a right triangle, the lengths of the two legs are 3 cm and 4 cm respectively. According to the concept of similar triangles, another right triangle has a leg of length 6 cm corresponding to the 3 cm leg of the first triangle. What is the length of the other leg in the second triangle?', 'The two right triangles are similar, so the ratio of corresponding sides is the same. In the first triangle, the ratio of the two legs is 3:4. So in the second triangle, the length of the other leg corresponding to the 4 cm leg in the first triangle should be 6:4 = 3:2 times the length of the 4 cm leg in the first triangle, which is 8 cm.'), ('import data.real.basic\n\n-- defining the initial number of apples\ndef number_of_apples : ℝ := 20\n\n-- defining the number of apples given to friend\ndef apples_given_to_friend : ℝ := 5\n\n-- defining the number of apples given back by friend\ndef apples_given_back : ℝ := 3\n\n-- defining the final number of apples\ndef final_number_of_apples : ℝ := number_of_apples - apples_given_to_friend + apples_given_back\n\n-- proving the final number of apples is 18\nexample : final_number_of_apples = 18 :=\nbegin\n  unfold final_number_of_apples,\n  unfold number_of_apples,\n  unfold apples_given_to_friend,\n  unfold apples_given_back,\n  norm_num,\nend', 'Assume you have 20 apples and you give 5 apples to your friend. Then, your friend gives you back 3 apples. Estimate how many apples you have now.', 'Initially, you have 20 apples. After giving 5 apples to your friend, you have 20 - 5 = 15 apples. Your friend then gives you back 3 apples, so you have 15 + 3 = 18 apples. Therefore, the estimation of the apples you have now is 18.'), ('import data.real.basic\n\n-- defining the function f(x) = 3x + 2\ndef f (x : ℝ) : ℝ := 3*x + 2\n\n-- proving that f(4) = 14\nexample : f 4 = 14 :=\nbegin\n  -- unfolding the definition of f\n  unfold f,\n  -- simplifying the right-hand side\n  norm_num,\nend', 'Given a linear function f(x) = 3x + 2, find the value of f(4).', 'To find the value of f(4), we substitute x = 4 into the function. \n\nSo the calculation will be: f(4) = 3*4 + 2 = 12 + 2 = 14.\n\nTherefore, the value of f(4) is 14.'), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def length := (1.2 : ℝ) \nnoncomputable def width := (0.7 : ℝ)\nnoncomputable def tile_length := (0.1 : ℝ)\n\n-- defining the formula for the perimeter of a rectangle\nnoncomputable def rect_perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- calculate the perimeter\nnoncomputable def perimeter := rect_perimeter length width \n\n-- calculating the number of tiles\nnoncomputable def number_of_tiles := perimeter / tile_length \n\n-- proof that Jane needs 38 tiles\nexample : number_of_tiles = 38 :=\nbegin\n  unfold number_of_tiles,    -- replace number_of_tiles with its definition\n  unfold perimeter,          -- replace perimeter with its definition\n  unfold rect_perimeter,     -- replace rect_perimeter with its definition\n  unfold length,\n  unfold width,\n  unfold tile_length,\n  norm_num,                  -- simplify the numerical computation\nend', 'Jane has a rectangular garden that is 0.7 meters wide and 1.2 meters long. She wants to place tiles along the perimeter of the garden. If each tile is 0.1 meters long, how many tiles does Jane need to place around her garden?', "First, we need to find the perimeter of Jane's rectangular garden. The formula for the perimeter of a rectangle is 2*(length + width). Applying this formula, we find that the perimeter is 2*(0.7 m + 1.2 m) = 2*(1.9 m) = 3.8 m. \n\nSince each tile is 0.1 meters long, the number of tiles needed is the perimeter divided by the length of each tile. Therefore, Jane needs 3.8 m / 0.1 m/tile = 38 tiles."), ('import data.real.basic\n\n-- defining the rates\nnoncomputable def sebastian_rate := (1:ℝ) / 5\nnoncomputable def rania_rate := (1:ℝ) / 4\n\n-- combining the rates\nnoncomputable def combined_rate := sebastian_rate + rania_rate\n\n-- calculating the time taken when working together\nnoncomputable def time_together := 1 / combined_rate\n\n-- proof that the time taken together is 20/9 hours\nlemma time_together_is_correct: time_together = 20 / 9 :=\nbegin\n  unfold time_together combined_rate sebastian_rate rania_rate,\n  norm_num,\nend', 'If Sebastian can mow a lawn in 5 hours and his sister, Rania can do the same job in 4 hours. If they work together, how long does it take for them to mow a lawn?', "Sebastian's mowing rate is 1 lawn per 5 hours, or 1/5 lawns per hour.\nRania's mowing rate is 1 lawn per 4 hours, or 1/4 lawns per hour.\nWhen they work together, their rates add up. Therefore, their combined rate is 1/5 + 1/4 = 9/20 lawns per hour.\nTo find out how long it takes for them to mow a lawn together, we take the reciprocal of their combined rate, which is 20/9 hours, or approximately 2.22 hours."), ('open nat\n\n-- define the initial number of apples\ndef johns_apples := 5\n\n-- define the number of apples John buys\ndef bought_apples := 7\n\n-- calculate the total number of apples\ndef total_apples := johns_apples + bought_apples\n\n-- define the number of bad apples\ndef bad_apples := total_apples / 2\n\n-- calculate the number of apples left\ndef remaining_apples := total_apples - bad_apples\n\n-- prove that the remaining number of apples is 6\nexample : remaining_apples = 6 :=\nbegin\n  unfold remaining_apples,\n  unfold bad_apples,\n  unfold total_apples,\n  unfold johns_apples,\n  unfold bought_apples,\n  -- manually perform the simplification Lean failed to do automatically\n  have h : 5 + 7 - (5 + 7) / 2 = 6, from rfl,\n  exact h\nend', 'John has 5 apples and he buys 7 more. After a few days, half of the apples go bad. How many apples does John have left?', 'John initially has 5 apples, and he buys an additional 7 apples, which gives him a total of 5 + 7 = 12 apples. After a few days, half of the apples go bad, which means he loses 1/2 * 12 = 6 apples. Therefore, John has 12 - 6 = 6 apples left.'), ("import data.real.basic\nimport data.fintype.card\n\nopen_locale classical\n\nnoncomputable theory\n\ndef cards : finset ℕ := finset.range 52\n\ndef hearts : finset ℕ := finset.range 13\n\ndef diamonds : finset ℕ := (list.range' 13 13).to_finset\n\ndef clubs : finset ℕ := (list.range' 26 13).to_finset\n\nlemma draw_cards : \n  ((finset.card hearts / finset.card cards) * \n  (finset.card diamonds / (finset.card cards - 1)) * \n  (finset.card clubs / (finset.card cards - 2))) = \n  (1/4) * (13/51) * (13/50) :=\nbegin\n  have hc : finset.card cards = 52, \n    { exact finset.card_range 52 },\n  have hh : finset.card hearts = 13, \n    { exact finset.card_range 13 },\n  have hd : finset.card diamonds = 13, \n    { exact list.to_finset_card_of_nodup (list.nodup_range' 13 13) },\n  have hcl : finset.card clubs = 13, \n    { exact list.to_finset_card_of_nodup (list.nodup_range' 26 13) },\n  rw [hc, hh, hd, hcl],\n  norm_num,\nend", 'We have a deck of 52 cards (13 cards from each of the four suits: hearts, diamonds, clubs, and spades). What is the probability of drawing 3 cards in a row, without replacement, where the first card is a heart, the second card is a diamond, and the third card is a club?', 'In a standard deck of 52 cards, there are 13 cards of each suit. \n\nThe probability of drawing a heart on the first draw is 13/52, or 1/4, because there are 13 hearts and 52 total cards. \n\nAfter drawing a heart, we have 51 cards left, of which 13 are diamonds. The probability of drawing a diamond on the second draw is 13/51.\n\nFinally, after drawing a diamond, we have 50 cards left, of which 13 are clubs. The probability of drawing a club on the third draw is 13/50. \n\nThe probability of all these events occurring is the product of their individual probabilities, which is (1/4) * (13/51) * (13/50).'), ("import data.real.basic\n\n-- Let's define the equations\ndef eq1 (x y : ℝ) : Prop := 2*x + 3*y = 6\ndef eq2 (x y : ℝ) : Prop := 4*x + 6*y = 12\n\n-- Now, we'll prove that they're equivalent\nexample : ∀ x y : ℝ, eq1 x y ↔ eq2 x y :=\nbegin\n  intros,\n  -- unfold the definitions\n  unfold eq1 eq2,\n  -- split the ↔ into two implications\n  split,\n  { -- for the forward direction, we need to show that 2*x + 3*y = 6 implies 4*x + 6*y = 12\n    intro h1,\n    -- we can do this by multiplying every term in the equation by 2\n    linarith,\n  },\n  { -- for the reverse direction, we need to show that 4*x + 6*y = 12 implies 2*x + 3*y = 6\n    intro h2,\n    -- we can do this by dividing every term in the equation by 2\n    linarith,\n  }\nend", "Let's consider two linear equations: \n\n1) `2x + 3y = 6` \n\n2) `4x + 6y = 12` \n\nAre these two equations equivalent?", "To check if two linear equations are equivalent, we need to check if they have the same solutions. In other words, for any (x, y) that satisfies the first equation, it should also satisfy the second equation, and vice versa.\n\nLet's transform the second equation by dividing every term by 2:\n\n`4x/2 + 6y/2 = 12/2`\n\nwhich simplifies to:\n\n`2x + 3y = 6`\n\nWe see that this is identical to the first equation. Therefore, the two equations are equivalent."), ('def seq : ℕ → ℕ \n| 0     := 2\n| (n+1) := 3 * seq n - 2\n\n#eval seq 0 + seq 1 + seq 2 + seq 3 + seq 4  -- output: 126', 'A sequence is defined by the recursive formula an = 3an-1 - 2, where a1 = 2. What is the sum of the first 5 terms of this sequence?', 'First, we find the first 5 terms of the sequence using the recursive formula. \n\nThe first term a1 is given as 2. \n\nThen we use the formula to find the next four terms:\n\n- a2 = 3*a1 - 2 = 3*2 - 2 = 4\n- a3 = 3*a2 - 2 = 3*4 - 2 = 10\n- a4 = 3*a3 - 2 = 3*10 - 2 = 28\n- a5 = 3*a4 - 2 = 3*28 - 2 = 82\n\nThe sum of the first 5 terms is a1 + a2 + a3 + a4 + a5 = 2 + 4 + 10 + 28 + 82 = 126\n\nSo, the sum of the first 5 terms of this sequence is 126.'), ("import data.nat.basic\n\nopen nat\n\n-- Let's define the numbers of cupcakes\ndef chocolate_cupcakes := 48\ndef vanilla_cupcakes := 60\n\n-- We want to find the greatest common divisor (GCD)\ndef num_in_each_row := gcd chocolate_cupcakes vanilla_cupcakes\n\n#eval num_in_each_row  -- this will compute to 12", 'Alice is a bakery owner. She has 48 chocolate cupcakes and 60 vanilla cupcakes. She wants to arrange all the cupcakes in rows with the same number of cupcakes in each row. What is the greatest number of cupcakes Alice can place in each row so that each row has the same number of cupcakes and contains only one type of cupcakes?', 'To solve this problem, we need to find the greatest common factor (GCF) of 48 and 60. The GCF of two numbers is the largest number that divides both of them without leaving a remainder. \n\nFirst, we find the factors of both numbers:\nThe factors of 48 are 1, 2, 3, 4, 6, 8, 12, 16, 24, 48.\nThe factors of 60 are 1, 2, 3, 4, 5, 6, 10, 12, 15, 20, 30, 60. \n\nThe common factors of 48 and 60 are 1, 2, 3, 4, 6, 12. \n\nThe greatest common factor of 48 and 60 is 12. \n\nTherefore, Alice can place 12 cupcakes in each row.'), ('import data.real.basic\n\n-- define variables\ndef f (x : ℝ) := 2*x + 3\n\n-- prove the statement\ntheorem min_value_y : ∀ x : ℝ, x > 4 → f(x) ≥ 11 :=\nbegin\n  intros x hx,\n  -- express f(x) using the definition\n  rw f,\n  -- use the fact that x > 4\n  linarith,\nend', "Consider a linear equation in two variables, let's say `y = 2x + 3`. Given that `x > 4`, find the minimum possible value for `y`.", 'Since `y` is a function of `x`, the value of `y` will change based on the value of `x`. Here, `y` increases linearly as `x` increases. Given that `x > 4`, the minimum possible value for `x` is `4`. Substituting `x = 4` into the equation `y = 2x + 3`, we get `y = 2*4 + 3 = 11`. Therefore, if `x > 4`, the minimum possible value for `y` is `11`.'), ('import data.nat.basic\n\n-- defining the constants\ndef student_to_teacher_ratio := 30\ndef total_students := 450\n\n-- defining the function to calculate number of teachers\ndef calculate_teachers (total_students : ℕ) (student_to_teacher_ratio : ℕ) : ℕ :=\ntotal_students / student_to_teacher_ratio\n\n-- proof that for 450 students and a student to teacher ratio of 30:1, there are 15 teachers\nexample : calculate_teachers total_students student_to_teacher_ratio = 15 :=\nbegin\n  unfold calculate_teachers,\n  exact dec_trivial,\nend', 'In a school, the student to teacher ratio is 30:1. If there are 450 students, how many teachers does the school have?', 'As the student to teacher ratio is given as 30:1, it means that for every 30 students, there is 1 teacher. Therefore, if there are 450 students, we can calculate the number of teachers by dividing the total number of students by the student to teacher ratio, i.e., 450 / 30 = 15. Hence, the school has 15 teachers.'), ('import data.real.basic\n\nopen_locale classical\n\n-- define the problem parameters\ndef area : ℝ := 60\ndef width : ℝ := 5\n\n-- state the problem\ntheorem find_length (area width : ℝ) (h1 : area = 60) (h2 : width = 5) : \n  ∃ length : ℝ, area = length * width :=\nbegin\n  use (area / width),\n  rw h1,\n  rw h2,\n  norm_num,\nend', 'A rectangular garden has an area of 60 square meters. The width of the garden is 5 meters. What is the length of the garden?', 'The area of a rectangle is calculated by multiplying the length by the width. Since we know that the area is 60 square meters and the width is 5 meters, we can find the length by dividing the area by the width. Hence, the length of the garden is 60/5 = 12 meters.'), ('import data.real.basic\n\n-- first we define x and y\ndef x : ℝ := 4\ndef y : ℝ := 0\n\n-- now we verify that these values satisfy the equations\nexample : 2*x + y = 8 ∧ x - y = 4 :=\nbegin\n  split,\n  {   -- this is for the first equation\n    rw [x, y],\n    norm_num,\n  },\n  {   -- this is for the second equation\n    rw [x, y],\n    norm_num,\n  }\nend', 'Consider the following system of equations:\n\n1) 2x + y = 8\n\n2) x - y = 4\n\nFind the values of x and y that satisfy both equations.', 'To solve the system of equations for x and y, we can use the method of addition or elimination. \n\nFirst, we add the two equations together to eliminate y. This gives us:\n\n2x + y + x - y = 8 + 4\n\nWhich simplifies to:\n\n3x = 12\n\nWe can then solve for x by dividing both sides by 3, which gives us x = 4.\n\nNext, we substitute x = 4 into the first equation in order to solve for y:\n\n2(4) + y = 8\n\nThis simplifies to:\n\n8 + y = 8\n\nSubtracting 8 from both sides, we find that y = 0.\n\nTherefore, the solution to the system of equations is x = 4 and y = 0.'), ('import data.real.basic\n\ndef swimming_pool_cost : ℝ :=\nlet length := 12 in\nlet width := 7 in\nlet depth := 1.5 in\nlet cost_per_cubic_meter := 5 in\nlet volume := length * width * depth in\nvolume * cost_per_cubic_meter\n\n#eval swimming_pool_cost', 'John has a rectangular swimming pool in his backyard. It has a length of 12 meters, a width of 7 meters, and a depth of 1.5 meters. He plans to fill it with water for the upcoming summer. If one cubic meter of water costs $5, how much will it cost to fill the pool?', 'First, we need to find the volume of the swimming pool. In a rectangular prism, the volume is found by multiplying the length, width, and height (depth in this case). So, the volume of the pool is 12 meters * 7 meters * 1.5 meters = 126 cubic meters.\n\nSince the cost of water is given per cubic meter, we multiply the volume of the pool by the cost per cubic meter to find the total cost. Hence, the cost to fill the pool is 126 cubic meters * $5/cubic meter = $630.'), ('import data.real.basic\n\n-- defining the constants\ndef A := 10\ndef B := 15\ndef total_weight := 75\ndef A_candies := 3\n\n-- defining the functions\ndef equation_1 := A * A_candies\ndef equation_2 (x : ℕ) := B * x\ndef total_eq (x : ℕ) := equation_1 + equation_2 x = total_weight\n\n-- proving the solution\nexample : total_eq 3 :=\nbegin\n  unfold total_eq,\n  unfold equation_2,\n  unfold equation_1,\n  unfold A_candies,\n  unfold B,\n  unfold A,\n  unfold total_weight,\n  norm_num,\nend', 'John has two types of candies, type A and type B. Each candy of type A weighs 10 grams and each candy of type B weighs 15 grams. John has 3 candies of type A and x candies of type B. If the total weight of all candies John has is 75 grams, how many candies of type B does John have?', 'Firstly, we know that the total weight of type A candies John has is 3 * 10 = 30 grams. \nThen, we know that the total weight of the candies John has is 75 grams. Therefore, the weight of all type B candies John has is 75 - 30 = 45 grams.\nSince each candy of type B weighs 15 grams, the number of type B candies John has is 45 / 15 = 3. So John has 3 candies of type B.'), ('import data.real.basic\n\nopen real\n\nnoncomputable def toy_car : ℝ := 2.50\ndef box : ℕ := 4\ndef boxes : ℕ := 5\n\nnoncomputable def total_toy_cars : ℝ := box * boxes\nnoncomputable def total_cost : ℝ := toy_car * total_toy_cars\n\nexample : total_cost = 50.00 :=\nbegin\n  unfold total_cost total_toy_cars toy_car box boxes,\n  norm_num,\nend', 'A toy store has 5 boxes of toy cars. Each box contains 4 toy cars. If each toy car costs $2.50, how much does the total cost of all the toy cars in the 5 boxes?', 'First, we need to find out how many toy cars there are in total. Since each box contains 4 toy cars and there are 5 boxes, we multiply 4 by 5 to get 20 toy cars.\n\nNext, we need to find out the total cost of these 20 toy cars. Since each toy car costs $2.50, we multiply 20 by $2.50 to get $50.00. \n\nTherefore, the total cost of all the toy cars in the 5 boxes is $50.00.'), ('import data.real.basic\n\n-- define the function f\ndef f : ℝ × ℝ → ℝ := λ x, 3 * x.1^2 + 4 * x.2^2\n\n-- calculate the derivative of f with respect to x\ndef df_dx : ℝ × ℝ → ℝ := λ x, 6 * x.1\n\n-- calculate the mixed second derivative of f with respect to x and then y\ndef d2f_dxdy : ℝ × ℝ → ℝ := λ x, 0\n\n-- assert that the mixed second derivative of f is 0 at any point\nexample : ∀ x : ℝ × ℝ, d2f_dxdy x = 0 :=\nbegin\n  intro x,\n  unfold d2f_dxdy,\nend\n\n-- assert that the mixed second derivative of f is 0 at the point (1, 2)\nexample : d2f_dxdy (1, 2) = 0 :=\nbegin\n  unfold d2f_dxdy,\nend', 'Let f: ℝ² → ℝ be a function defined as f(x, y) = 3x² + 4y². What is the value of ∂²f/∂x∂y at the point (1, 2)?', 'The second order mixed partial derivative ∂²f/∂x∂y is found by first taking the derivative of f with respect to x, and then taking the derivative of the result with respect to y. \n\nThe first derivative of f with respect to x is ∂f/∂x = 6x. \n\nThe second order mixed partial derivative is then ∂²f/∂x∂y = ∂(∂f/∂x)/∂y = ∂(6x)/∂y, which is 0, because x and y are independent variables. Therefore, the value of ∂²f/∂x∂y at any point, including (1, 2), is 0.'), ('import data.real.basic\n\n-- Defining the function to calculate the number of flowers\ndef num_flowers (start : ℕ) (weeks : ℕ) : ℕ := start * (2^weeks)\n\n-- Proving the problem\nexample : num_flowers 1 10 = 1024 :=\nbegin\n  unfold num_flowers,\n  rw nat.one_mul,\n  refl,\nend', 'John has a garden. He noticed that every week, the number of flowers in his garden doubles. If he started with 1 flower, how many flowers will he have after 10 weeks?', "If the number of flowers in John's garden doubles every week, this means he has 2 times the number of flowers he had the previous week. This is a case of exponential growth. Since he started with 1 flower, after 10 weeks he will have 2^10 flowers. So, he will have 1024 flowers."), ('import data.real.basic\n\ndef enjoy_math := λ x : ℝ, 3*x\ndef not_enjoy_math := λ x : ℝ, 2*x\ndef total_students := λ x : ℝ, enjoy_math x ^ 2 + not_enjoy_math x ^ 2\n\ntheorem math_enjoyment: total_students 10 = 1300 ∧ enjoy_math 10 = 30 ∧ not_enjoy_math 10 = 20 :=\nbegin\n  split,\n  { calc enjoy_math 10 ^ 2 + not_enjoy_math 10 ^ 2 = (3 * 10) ^ 2 + (2 * 10) ^ 2 : by refl\n    ... = 900 + 400 : by norm_num\n    ... = 1300 : by norm_num },\n  split,\n  { calc enjoy_math 10 = 3 * 10 : by refl\n    ... = 30 : by norm_num },\n  { calc not_enjoy_math 10 = 2 * 10 : by refl\n    ... = 20 : by norm_num }\nend', "In a survey of high school students, it was found that the ratio of students who enjoy Mathematics to those who don't is 3:2. If the height of a right triangle represents the number of students who enjoy Mathematics, and the base represents those who don't, and the hypotenuse is 100 students. Prove that the number of students who enjoy Mathematics is 60 and those who do not enjoy Mathematics is 80.", "In a right triangle, the relationship between the sides is governed by the Pythagorean theorem, which states that the square of the length of the hypotenuse (the side opposite the right angle) is equal to the sum of the squares of the lengths of the other two sides. This can be written as: a² + b² = c².\n\nIn this problem, the hypotenuse represents the total number of students (100), and the other two sides represent the number of students who enjoy Mathematics and those who don't, in the ratio 3:2 respectively. Let's represent the number of students who enjoy Mathematics as 3x and those who don't as 2x.\n\nSubstituting these values into the Pythagorean theorem, we get:\n\n(3x)² + (2x)² = 100²\n9x² + 4x² = 10000\n13x² = 10000\nx² = 10000 / 13\nx = sqrt(10000 / 13)\nx = 10sqrt(100 / 13)\nx = 10sqrt(100 / 13) * sqrt(13 / 13)\nx = 10sqrt(1300 / 169)\nx = 10*sqrt(1300) / sqrt(169)\nx = 10*36 / 13\nx = 360 / 13\nx = ~27.7\n\nSo the number of students who enjoy Mathematics is 3x = 3 * 27.7 = ~83.1, and the number of students who do not enjoy Mathematics is 2x = 2 * 27.7 = ~55.4.\n\nHowever, since the number of students cannot be a decimal, it seems there might be a mistake in the problem. The hypotenuse cannot be 100 if the ratio of students who enjoy Mathematics to those who don't is 3:2."), ('import data.real.basic\n\n-- defining the fractions as real numbers\nnoncomputable def pizza_start : ℝ := 2 / 3\nnoncomputable def pizza_eaten_fraction : ℝ := 1 / 4\nnoncomputable def pizza_eaten : ℝ := pizza_start * pizza_eaten_fraction\nnoncomputable def pizza_left : ℝ := pizza_start - pizza_eaten\n\n-- proof that the pizza left is 1/2\nexample : pizza_left = 1 / 2 :=\nbegin\n  -- unfolding the definitions\n  unfold pizza_start pizza_eaten_fraction pizza_eaten pizza_left,\n  -- simplifying the calculations\n  norm_num,\nend', 'If a student has 2/3 of a pizza and they eat 1/4 of it, what fraction of the pizza does the student have left?', 'To find out how much pizza the student ate, we multiply 2/3 by 1/4 to get 2/12, which simplifies to 1/6. The student ate 1/6 of the pizza. Since the student started with 2/3 of the pizza, to find out how much is left, we subtract the fraction the student ate, 1/6, from the fraction the student started with, 2/3. 2/3 equals 4/6, so the subtraction becomes 4/6 - 1/6, which equals 3/6. Therefore, the student has 1/2 of the pizza left.'), ("import data.real.basic\n\n-- John's initial money\nnoncomputable def john_initial_money : ℝ := 4.56\n\n-- The money John found\nnoncomputable def john_found_money : ℝ := 10\n\n-- The total money John has\nnoncomputable def john_total_money : ℝ := john_initial_money + john_found_money\n\n-- Prove that John now has $14.56\nexample : john_total_money = 14.56 :=\nbegin\n  unfold john_total_money, -- expand the definition of john_total_money\n  unfold john_initial_money, -- expand the definition of john_initial_money\n  unfold john_found_money, -- expand the definition of john_found_money\n  norm_num, -- simplify the arithmetic\nend", 'John has $4.56 in his pocket. He found a $10 bill on the ground and picked it up. How much money does John have now?', 'John initially has $4.56. After finding a $10 bill, the amount of money he has increases. We add $10 to the $4.56 that John originally has. The sum of $10 and $4.56 is $14.56. So John now has $14.56.'), ('import data.real.basic\n\n-- Defining the point A and translation\ndef A : ℝ × ℝ := (2, 3)\ndef translate (p : ℝ × ℝ) (dx dy : ℝ) : ℝ × ℝ := (p.1 + dx, p.2 + dy)\n\n-- Proving the translation\nexample : translate A 4 5 = (6, 8) := \nbegin\n  unfold translate,\n  unfold A,\n  simp,\n  split,\n  linarith,\n  linarith,\nend', 'In the coordinate plane, there is a point A at (2,3). If point A is translated 4 units to the right and 5 units up, what new coordinate does point A occupy?', 'In a translation, the point moves along the coordinate plane without changing its orientation or size. It is simply shifted to a new location. \n\nHere, point A is initially at (2,3). \n\nWhen it is translated 4 units to the right, its x-coordinate increases by 4. Now, the x-coordinate is 2+4=6.\n\nWhen it is translated 5 units up, its y-coordinate increases by 5. Now, the y-coordinate is 3+5=8.\n\nTherefore, after the translation, point A is at the coordinate (6,8).'), ('--define the specific values of a and b\ndef a := 16\ndef b := 4\n\n-- prove the theorem\ntheorem div_eq : a / b = 4 :=\nbegin\n  -- replace a with 16 and b with 4\n  rw [a, b],\n  -- check that both sides of the equation are the same\n  exact rfl,   \nend', "Let's assume that we have two variables a and b, where a = 16 and b = 4. Prove that the result of a divided by b is equal to 4.", 'Given that a = 16 and b = 4, we know that division is the process of splitting into equal parts or groups. If we divide a by b (a ÷ b), it means we are dividing 16 into 4 equal parts. Each part would contain 4 units. Therefore, a ÷ b = 4.'), ('import data.real.basic\n\ntheorem factor_polynomial : \n  ∀ x : ℝ, x^3 - 6*x^2 + 11*x - 6 = (x - 1)*(x - 2)*(x - 3) :=\nbegin\n  intros,\n  ring,\nend', 'Given a polynomial `f(x) = x^3 - 6x^2 + 11x - 6`, factorize it into linear factors.', 'We can start by guessing the roots of the polynomial. Let’s try 1, 2, and 3. Substituting these values into the equation, we find that all of them are indeed roots of the polynomial. Therefore, we can write the polynomial as a product of linear factors `(x - 1)`, `(x - 2)`, and `(x - 3)`. So, `f(x) = (x - 1)(x - 2)(x - 3)`.'), ('import data.real.basic\n\nlemma multiply_fractions_and_add_decimal : (1 / 2) * (1 / 4) + 0.4 = 0.525 :=\nbegin\n  have h1: (1 / 2) * (1 / 4) = 1 / 8, by norm_num,\n  have h2: (1 : ℝ) / 8 = 0.125, by norm_num,\n  rw h1,\n  norm_num,\nend', 'Given two fractions, 1/2 and 1/4, multiply them together. Then, add the result to the decimal 0.4. What is the final result?', 'To solve this problem, we first multiply the fractions 1/2 and 1/4. The result is 1/8. \n\nNext, we convert the fraction 1/8 to a decimal. The decimal equivalent of 1/8 is 0.125. \n\nFinally, we add the decimal 0.125 to 0.4. The sum is 0.525.'), ('import data.real.basic\n\nnoncomputable theory\n\n/-- The amount of salt in the tank at time t. -/\ndef S (t : ℝ) := 2 - 0.02*t\n\ntheorem salt_in_tank_after_20_min : S 20 = 1.6 :=\nbegin\n  unfold S,\n  norm_num,\nend', 'Consider a tank that contains 100 liters of a brine solution with 2 kg of salt dissolved in it. Water containing 0.02 kg of salt per liter is entering the tank at the rate of 3 liters per minute and the mixture is allowed to flow out at the same rate. What is the amount of salt in the tank after 20 minutes?', "First, let's denote the amount of salt at time t by S(t), in kg. The rate of change of the amount of salt in the tank is given by the rate at which salt enters the tank minus the rate at which salt leaves the tank. The rate at which salt enters the tank is 3 liters/minute * 0.02 kg/liter = 0.06 kg/minute. The rate at which salt leaves the tank is the volume of the mixture leaving per minute times the concentration of the salt in the tank at that time, which is 3 liters/minute * S(t) / 100 liters = 0.03*S(t) kg/minute.\n\nTherefore, we obtain the following differential equation:\n\ndS/dt = 0.06 - 0.03*S(t).\n\nWe can solve this differential equation using methods of integration. We first separate the variables to get:\n\ndS / (0.06 - 0.03*S(t)) = dt.\n\nIntegrating both sides, we get:\n\n-100/3 * ln|0.06 - 0.03*S(t)| = t + C.\n\nSolving for S(t) and applying the initial condition S(0) = 2 kg, we find C = -100/3 * ln(0.04). Therefore, the solution is\n\nS(t) = 2 - 0.02t.\n\nFinally, plugging in t = 20 minutes, we get S(20) = 2 - 0.02*20 = 1.6 kg."), ('def calculate_price (length : ℕ) (width : ℕ) (price_per_foot : ℕ) : ℕ :=\n  let perimeter := 2*(length + width) in\n    perimeter * price_per_foot\n\n#eval calculate_price 15 12 10  -- The output will be 540', 'John has a rectangular garden. The length of the garden is 15 feet and the width is 12 feet. He wants to build a fence around the garden. If the fence costs $10 per foot, how much will John spend in total?', "First, we need to calculate the perimeter of the garden. For a rectangle, the formula of the perimeter is 2*(length + width). So the perimeter of John's garden is 2*(15+12) = 54 feet. Then, since the fence costs $10 per foot, John will spend 54*10 = $540 in total."), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\n#eval rectangle_area 8 5  -- returns 40', 'A rectangle has a length of 8 units and a width of 5 units. What is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. Given that the length is 8 units and the width is 5 units, we multiply these two numbers together to get 40 units squared. So, the area of the rectangle is 40 square units.'), ("import data.real.basic\n\n-- Let's define the number of games played, won, lost, and tied\ndef games_played : ℝ := 10\ndef games_won : ℝ := 6\ndef games_lost : ℝ := 3\ndef games_tied : ℝ := 1\n\n-- Now, let's prove that the sum of games won, lost, and tied is equal to the total games played\nexample : games_won + games_lost + games_tied = games_played :=\nbegin\n  unfold games_won games_lost games_tied games_played,\n  norm_num,\nend\n\n-- Then, let's calculate the probability of winning the next game based on past performance\nnoncomputable def probability_winning : ℝ := games_won / games_played\n\n-- Finally, let's prove that the probability of winning the next game is 0.6\nexample : probability_winning = 0.6 :=\nbegin\n  unfold probability_winning games_won games_played,\n  norm_num,\nend", 'A soccer team played 10 games this season. They won 6 games, lost 3 games, and tied 1 game. What is the probability that they won their next game based on their past performance?', 'The probability of an event is calculated by dividing the number of favorable outcomes by the total number of outcomes. In this case, the total number of outcomes is the number of games played, which is 10. The number of favorable outcomes is the number of games won, which is 6.\n\nSo, based on their past performance, the probability that the soccer team won their next game is 6/10 or 0.6 or 60%.'), ('def calc_students_who_play_football (total_students : ℕ) : ℕ :=\n  let boys := total_students * 60 / 100 in\n  let girls := total_students * 40 / 100 in\n  let boys_who_play_football := boys * 30 / 100 in\n  let girls_who_play_football := girls * 40 / 100 in\n  boys_who_play_football + girls_who_play_football\n\n#eval calc_students_who_play_football 1200  -- returns 408', 'A high school has 1200 students. Of these students, 60% are boys. Among the boys, 30% play football, and among the girls, 40% play football. How many students in total play football?', 'First, we calculate the number of boys in the school. 60% of 1200 students are boys, so there are 0.60 * 1200 = 720 boys.\nAmong the boys, 30% play football, so 0.30 * 720 = 216 boys play football.\nThe remaining 40% of the students are girls, so there are 0.40 * 1200 = 480 girls.\nAmong the girls, 40% play football, so 0.40 * 480 = 192 girls play football.\nTherefore, the total number of students who play football is 216 boys + 192 girls = 408 students.'), ('def real_length (model_length scale : ℕ) : ℕ := model_length * scale\n\ndef model_length : ℕ := 30\ndef scale : ℕ := 18\n\n#eval real_length model_length scale  -- output will be 540', 'John has a scale model of a car. The scale on the model is 1:18, which means 1 cm on the model represents 18 cm on the real car. If the length of the model car is 30 cm, what is the length of the real car?', 'Given the scale of 1:18, each centimeter on the model represents 18 centimeters on the real car. Therefore, to find the length of the real car, we simply multiply the length of the model car by the scale factor. That is, 30 cm (the length of the model car) times 18 (the scale factor) equals 540 cm, which is the length of the real car.'), ("import data.real.basic\n\nopen real\n\n-- Let's define our variables and given conditions\ndef initial_population := 5\ndef doubling_period_in_hours := 3\ndef total_time_in_hours := 24\n\n-- We know that the population doubles every 3 hours\ndef number_of_doublings := total_time_in_hours / doubling_period_in_hours\n\n-- Now we calculate the final population\ndef final_population := initial_population * (2^number_of_doublings)\n\n-- We can now check if our final population is 1280 as expected\n#eval final_population -- it outputs 1280", 'The population of a certain species of bacteria doubles every 3 hours. If you start with 5 bacteria, how many bacteria will there be after 24 hours?', 'Since the population doubles every 3 hours, after 24 hours, the population will have doubled 24/3 = 8 times. So we can find the final population by multiplying the initial population by 2 to the power of the number of times it doubles, which is 5 * 2^8 = 5 * 256 = 1280. Therefore, there will be 1280 bacteria after 24 hours.'), ('import data.real.basic\n\n-- Define the problem\ndef problem (x : ℝ) := 5*x + 2 = 3*x + 6\n\n-- Proof\nexample : ∃ x, problem x :=\nbegin\n  use 2,\n  unfold problem,\n  -- 5*2 + 2 = 3*2 + 6\n  -- 10 + 2 = 6 + 6\n  -- 12 = 12\n  linarith,\nend', 'If x is a positive real number and 5x + 2 = 3x + 6, what is the value of x?', 'To solve for x, we first subtract 3x from both sides of the equation to get 2x + 2 = 6. Then we subtract 2 from both sides to get 2x = 4. Finally, we divide both sides by 2 to get x = 2.'), ('-- Importing the real number library in Lean\nimport data.real.basic\n\n-- We declare our variables\ndef John_hour : ℝ := 10 \ndef Bob_hour : ℝ := 15\ndef together_hour : ℝ := 6\n\n-- We prove that their combined rate is the sum of their individual rates\ntheorem fence_building : 1/John_hour + 1/Bob_hour = 1/together_hour :=\nbegin\n  unfold John_hour Bob_hour together_hour, -- substitute the values of John_hour, Bob_hour, and together_hour\n  norm_num, -- simplify the numerical calculations\nend', 'John and Bob are working together to build a fence. John can build the fence all by himself in 10 hours. Bob is less experienced and can build the fence by himself in 15 hours. If they work together, how long will it take for them to build the fence?', 'The rate at which John can build the fence is 1 fence per 10 hours, or 1/10 of a fence per hour. The rate at which Bob can build the fence is 1 fence per 15 hours, or 1/15 of a fence per hour. Therefore, when they work together, they can build the fence at a rate of 1/10 + 1/15 = 1/6 of a fence per hour. So, it will take them 6 hours to build the fence together.'), ('def rectangle_perimeter (width : ℕ) (length : ℕ) : ℕ := 2*(width + length)\n\nexample : rectangle_perimeter 5 10 = 30 :=\nbegin\n  unfold rectangle_perimeter,\n  exact eq.refl (2 * (5 + 10)),\nend', 'John has a rectangular garden that is 5 meters wide and 10 meters long. He wants to put a fence around the whole garden. How many meters of fence does he need?', 'To find out how many meters of fence John needs, we need to calculate the perimeter of the rectangle. The formula for the perimeter of a rectangle is 2*(width + length). In this case, the width is 5 meters and the length is 10 meters. Plugging these values into the formula gives us 2*(5 + 10) = 2*15 = 30 meters. Therefore, John needs 30 meters of fence to surround his garden.'), ('import data.real.basic\n\n-- The definition of the function\ndef f : ℝ → ℝ := λ x, 3*x^3 - 4*x^2 + 2*x - 1\n\n-- The derivative of the function\ndef df : ℝ → ℝ := λ x, 9*x^2 - 8*x + 2\n\n-- Proof that the derivative at x = 2 is 22\nexample : df 2 = 22 :=\nbegin\n  unfold df, \n  norm_num,\nend', 'Consider a polynomial function f(x) = 3x^3 - 4x^2 + 2x - 1. Find the derivative of this function and use it to determine the slope of the tangent line to the graph of the function at the point where x = 2.', "The derivative of a function gives us the slope of the tangent line to the graph of the function at any point. To find the derivative of the function f(x) = 3x^3 - 4x^2 + 2x - 1, we can use the power rule, which states that the derivative of x^n is n*x^(n-1).\n\nApplying the power rule to each term of the function, we find that the derivative of f(x) is f'(x) = 9x^2 - 8x + 2.\n\nWe can then substitute x = 2 into this derivative function to find the slope of the tangent line to the graph of the function at the point where x = 2. Substituting x = 2 gives us f'(2) = 9*4 - 8*2 + 2 = 36 - 16 + 2 = 22.\n\nSo, the slope of the tangent line to the graph of the function at the point where x = 2 is 22."), ('import data.real.basic\n\nopen_locale classical\n\n-- define the fractions\nnoncomputable def alice_initial := (4 : ℝ) / 5\nnoncomputable def bob_initial := (2 : ℝ) / 3\nnoncomputable def alice_ate := (1 : ℝ) / 5\nnoncomputable def bob_ate := (1 : ℝ) / 3\n\n-- calculate how much each person has left\nnoncomputable def alice_left := alice_initial - alice_ate\nnoncomputable def bob_left := bob_initial - bob_ate\n\n-- calculate the total amount of fruit left\nnoncomputable def total_left := alice_left + bob_left\n\n-- proof that the total amount of fruit left is 14/15\nexample : total_left = (14 : ℝ) / 15 :=\nbegin\n  unfold total_left alice_left bob_left alice_initial bob_initial alice_ate bob_ate,\n  norm_num,\nend', 'Alice and Bob are making a fruit salad. Alice has 4/5 of a pineapple and Bob has 2/3 of a mango. They decided to combine their fruits. Alice ate 1/5 of the pineapple and Bob ate 1/3 of the mango. How much fruit do they have left in total?', 'First, we need to find out how much fruit Alice and Bob ate. Alice ate 1/5 of a pineapple, so she has 4/5 - 1/5 = 3/5 of the pineapple left. Similarly, Bob ate 1/3 of a mango, so he has 2/3 - 1/3 = 1/3 of the mango left. \n\nNow, to find out how much fruit they have in total, we just add the fractions 3/5 and 1/3. To do this, we need to find a common denominator, which is 15. So, 3/5 becomes 9/15 and 1/3 becomes 5/15. Adding these gives us 14/15. \n\nSo, Alice and Bob have 14/15 of fruit left in total.'), ('import data.real.basic\n\n-- Defining the equation\ndef eqn (x y : ℝ) : Prop := 2*x - 3*y = 2\n\n-- Proof that the equation holds for x = 4 and y = 2\nexample : eqn 4 2 :=\nbegin\n  unfold eqn, -- Expanding the definition of the equation\n  norm_num, -- Simplifying the numerical computation\nend', 'If x = 4 and y = 2, prove that the equation 2x - 3y = 2 is true.', 'We substitute x and y into the equation. So, we have 2 * 4 - 3 * 2. This simplifies to 8 - 6, which equals 2. Thus, the equation 2x - 3y = 2 holds true for x = 4 and y = 2.'), ('import data.real.basic\n\n-- Define the original function f\ndef f (x : ℝ) := 3 * x^2 + 2 * x + 1\n\n-- Define the transformation function g\ndef g (x : ℝ) := f (x - 3)\n\n-- Define the derivative of f\ndef f_deriv (x : ℝ) := 6 * x + 2\n\n-- Define the derivative of g\ndef g_deriv (x : ℝ) := f_deriv (x - 3)\n\n-- Prove that the derivative of g at x = 4 is 8\nexample : g_deriv 4 = 8 :=\nbegin\n  -- Simplify the right-hand side\n  unfold g_deriv f_deriv,\n  -- Perform the substitution x = 4\n  norm_num,\nend', 'Suppose we have a function f(x) = 3x^2 + 2x + 1. We perform a transformation on this function to get a new function g(x) = f(x - 3). Determine the derivative of g(x) at x = 4.', "To find the derivative of g(x) at x = 4, we first need to understand what g(x) is. Since g(x) = f(x - 3), it is a transformation of the function f(x) that shifts f(x) to the right by 3 units. Thus, g(x) = 3(x-3)^2 + 2(x-3) + 1. \n\nNext, we find the derivative of g(x) using the power rule and the chain rule for differentiation. The derivative of g(x) is g'(x) = 6(x-3) + 2.\n\nFinally, we substitute x = 4 into the derivative to find the rate of change of g at x = 4. So, g'(4) = 6(4-3) + 2 = 8. Thus, the derivative of g(x) at x = 4 is 8."), ('variables (m : ℕ)\n\n#check m - 5', 'If Alex has "m" marbles and he loses 5 marbles, how many marbles does he have left? Write an algebraic expression to represent this situation.', 'If Alex initially has "m" marbles and he loses 5 marbles, the number of marbles he has left is represented by the expression "m - 5". This is because subtracting 5 from the initial number of marbles "m" gives the number of marbles Alex has left after losing 5.'), ('-- Lean 3 does not have built-in support for logarithmic or trigonometric functions. \n-- However, this proof would focus on the properties of the logarithmic function, \n-- particularly the requirement for the base to be a positive real number not equal to 1.', 'Prove that if the equation 2^x = cos(x) has a real solution, then the base of the logarithm log_b(2^x) = log_b(cos(x)) must be a positive number that is not equal to 1.', "First, let's understand that the function 2^x is an exponential function and cos(x) is a trigonometric function. If 2^x = cos(x) has a real solution, it means there exists at least one point where these two functions intersect. \n\nNext, let's consider the logarithmic function log_b(2^x) = log_b(cos(x)). The base 'b' of the logarithm must be a positive number that is not equal to 1 for the function to be defined and real. This is because the base of a logarithm dictates the rate at which the function grows or decays. If the base is equal to 1, the function does not grow or decay, which contradicts the behavior of the functions 2^x and cos(x). If the base is not a positive number, the function is not defined in the real number system. \n\nTherefore, the base of the logarithm log_b(2^x) = log_b(cos(x)) must be a positive number that is not equal to 1."), ('import data.real.basic\n\ndef f (x y z : ℝ) : ℝ := 3*x^2*y - 2*y*z + 4*z^3\n\ndef fx (x y z : ℝ) : ℝ := 6*x*y\n\ndef fy (x y z : ℝ) : ℝ := 3*x^2 - 2*z\n\ndef fz (x y z : ℝ) : ℝ := -2*y + 12*z^2', 'Given a function f(x, y, z) = 3x^2y - 2yz + 4z^3, find the gradient of the function at the point (1,2,3).', 'The gradient of a function is a vector that contains the first order partial derivatives of the function. \n\nTo find the gradient of the function, we need to find the partial derivatives with respect to x, y, and z. \n\nThe partial derivative of f with respect to x is ∂f/∂x = 6xy.\nAt the point (1,2,3), ∂f/∂x = 6*1*2 = 12.\n\nThe partial derivative of f with respect to y is ∂f/∂y = 3x^2 - 2z.\nAt the point (1,2,3), ∂f/∂y = 3*1^2 - 2*3 = 1.\n\nThe partial derivative of f with respect to z is ∂f/∂z = -2y + 12z^2.\nAt the point (1,2,3), ∂f/∂z = -2*2 + 12*3^2 = 100.\n\nTherefore, the gradient of the function f at the point (1,2,3) is (12, 1, 100).'), ("-- Lean does not yet have the functionality to perform symbolic computation, \n-- which would be necessary for a formal proof of this problem. \n-- However, the proof can be explained in a structured way using Lean's comment functionality:\n\n/- \nWe want to solve the differential equation x^2 * y' = y^1/2.\nFirst, we rewrite this as a separable equation: y' / y^1/2 = 1 / x^2.\nThen we integrate both sides with respect to x. \n\nThe integral of y' / y^1/2 with respect to x is 2y^1/2. \nWe can confirm this by differentiating 2y^1/2 to get back the original expression. \nThe integral of 1 / x^2 with respect to x is -1 / x. \n\nTherefore, the solution to the differential equation is 2y^1/2 = -1 / x + C, \nwhere C is the constant of integration. \n\nTo solve for y, we square both sides to get 4y = 1 / x^2 + 2C / x + C^2. \nTherefore, y = 1 / (4x^2) + C / (2x) + C^2 / 4.\n-/", "Solve the differential equation x^2 * y' = y^1/2 where y' is the derivative of y with respect to x.", "First, we can rewrite this differential equation as a separable equation by moving the y terms to one side and the x terms to the other: y' / y^1/2 = 1 / x^2. Then we integrate both sides with respect to x. The integral of y' / y^1/2 with respect to x is 2y^1/2 (you can confirm this by differentiating 2y^1/2 to get back the original expression). The integral of 1 / x^2 with respect to x is -1 / x. Therefore, the solution to the differential equation is 2y^1/2 = -1 / x + C, where C is the constant of integration. To solve for y, we square both sides to get 4y = 1 / x^2 + 2C / x + C^2. Therefore, y = 1 / (4x^2) + C / (2x) + C^2 / 4."), ('import data.real.basic\n\n-- Define the concept of a point in a scatterplot.\nstructure point :=\n(x : ℝ)\n(y : ℝ)\n\n-- Define the concept of a circle.\nstructure circle :=\n(center : point)\n(radius : ℝ)\n\n-- Define the concept of a point being inside a circle.\ndef inside_circle (c : circle) (p : point) : Prop :=\n(pow (p.x - c.center.x) 2 + pow (p.y - c.center.y) 2 ≤ pow c.radius 2)\n\n-- Prove that any randomly chosen point from the scatterplot falls within the circle.\ntheorem point_in_circle (c : circle) (p : point) (h : inside_circle c p) : \n(pow (p.x - c.center.x) 2 + pow (p.y - c.center.y) 2 ≤ pow c.radius 2) :=\nbegin\n  exact h,\nend', 'In a scatterplot of 20 data points, there is a trend that resembles a perfect circle. The circle is centered at point (a, b) and has a radius of r. If a data point (x, y) is chosen at random from the scatterplot, prove that the point falls within the equation of the circle (x-a)² + (y-b)² ≤ r².', 'Firstly, we need to understand that the equation of the circle is given by (x-a)² + (y-b)² = r². This equation represents all the points that lie exactly on the boundary of the circle.\n\nFor a point to be within the circle, it has to be closer to the center than the boundary. In other words, the distance from the center to the point has to be less than or equal to r. \n\nIn terms of the equation, this means that (x-a)² + (y-b)² has to be less than or equal to r². If this condition is met, then the point (x, y) lies within the circle.'), ('import data.real.basic\n\n-- Definitions\ndef f (x y : ℝ) : ℝ := 3 * x^2 + 2 * y\n\n-- Main theorem\ntheorem calc_value : f 2 1 = 14 :=\nbegin\n  unfold f,    -- unfold the definition of f\n  norm_num,    -- simplify the expression\nend', 'Let f: ℝ² → ℝ be a function. Suppose for any x, y in ℝ, f(x, y) = 3x^2 + 2y. Prove that f(2, 1) = 14.', 'We substitute x = 2 and y = 1 into the function f(x, y) = 3x^2 + 2y. This gives us 3*(2^2) + 2*1 = 3*4 + 2 = 12 + 2 = 14.'), ('open nat \n\ndef multiply (a b : ℕ) : ℕ := a * b\n\nexample : multiply 4 3 = 12 :=\nbegin\n  refl,\nend', 'On a coordinate plane, there is a line segment with one endpoint at (0,0) and the other endpoint at (4,0). If we multiply the x-coordinate of the second endpoint by 3, what would be the x-coordinate of the new point?', 'The x-coordinate of the second endpoint of the line segment is 4. If we multiply this number by 3, we get 12. So, the x-coordinate of the new point will be 12.'), ('def triangle_third_angle (angle1 : ℕ) (angle2 : ℕ) : ℕ :=\n180 - (angle1 + angle2)\n\n#eval triangle_third_angle 45 60 -- Returns 75', 'A triangular park has two angles measuring 45 degrees and 60 degrees respectively. What is the measure of the third angle?', 'The sum of the angles in a triangle is always 180 degrees. Given two angles measuring 45 degrees and 60 degrees, we can find the measure of the third angle by subtracting the sum of the given angles from 180 degrees. That is, 180 - (45 + 60) = 75 degrees.'), ('import data.real.basic\n\ndef volume_of_prism (l w h : ℝ) : ℝ := l * w * h\n\ndef area_of_rectangle (l h : ℝ) : ℝ := l * h\n\nexample : volume_of_prism 5 3 4 = 60 :=\nbegin\n  unfold volume_of_prism,\n  norm_num,\nend\n\nexample : area_of_rectangle 5 4 = 20 :=\nbegin\n  unfold area_of_rectangle,\n  norm_num,\nend', 'A rectangular prism has a length of 5 cm, a width of 3 cm, and a height of 4 cm. What is the volume of the rectangular prism? Also, what is the area of the front face of the prism?', 'The volume of a rectangular prism is calculated by multiplying the length, width, and height of the prism. In this case, the volume would be 5 cm * 3 cm * 4 cm = 60 cubic cm. \n\nThe area of the front face (which is a rectangle) of the prism can be calculated by multiplying the length and height of the face. In this case, the area would be 5 cm * 4 cm = 20 square cm.'), ('import data.nat.basic\n\nopen nat\n\n-- defining the number of initial boxes, cookies in each initial box, \n-- the number of new boxes and cookies in each new box\ndef initial_boxes : ℕ := 3\ndef cookies_initial_box : ℕ := 4\ndef new_boxes : ℕ := 5\ndef cookies_new_box : ℕ := 8\n\n-- defining the total number of cookies in initial boxes and new boxes\ndef total_cookies_initial_boxes : ℕ := initial_boxes * cookies_initial_box\ndef total_cookies_new_boxes : ℕ := new_boxes * cookies_new_box\n\n-- proving that the total number of cookies Alice has is 52\nexample : total_cookies_initial_boxes + total_cookies_new_boxes = 52 :=\nbegin\n  rw [total_cookies_initial_boxes, total_cookies_new_boxes, initial_boxes, cookies_initial_box, new_boxes, cookies_new_box],\n  exact dec_trivial,\nend', 'Alice has 3 boxes of cookies. Each box contains 4 cookies. She bought another 5 boxes, but each of these boxes contains 8 cookies. How many cookies does Alice have in total?', 'First, we find out how many cookies Alice has in the first 3 boxes. Since each box contains 4 cookies, she has 3 * 4 = 12 cookies in the first 3 boxes.\n\nNext, we find out how many cookies are in the 5 new boxes. Since each of these boxes contains 8 cookies, she has 5 * 8 = 40 cookies in the new boxes.\n\nSo, Alice has 12 + 40 = 52 cookies in total.'), ('import tactic\nimport data.real.basic\n\nnoncomputable theory\nopen_locale classical\n\ntheorem first_order_solution (x : ℝ) (h1 : x ≠ 0) (C : ℝ) :\n  (C*x) / x = C :=\nbegin\n  rw mul_div_cancel _ h1,\nend', 'Prove that the solution to the first order differential equation dy/dx = y/x is given by y = Cx, where C is an arbitrary constant.', 'The given differential equation is dy/dx = y/x, which is a separable first order differential equation. We can separate the variables to one side each, giving us dy/y = dx/x. Taking the integral of both sides, we get ln|y| = ln|x| + C, where C is the constant of integration. By using the properties of logarithms, we can write this equation as ln|y/x| = C. Taking the exponential of both sides gives y/x = e^C. But e^C is also an arbitrary constant, so we can write the solution as y = Cx.'), ("-- defining variables and the equation\ndef x := 40\ndef equation := x + 2*x\n\n-- theorem for Mary's sales\ntheorem marys_sales : x = 40 :=\nbegin\n  exact rfl,\nend\n\n-- theorem for John's sales\ntheorem johns_sales : 2*x = 80 :=\nbegin\n  rw marys_sales, -- substitute the value of x from the previous theorem\n  exact rfl,\nend", 'John and Mary are selling lemonade at their stand. They sold a total of 120 cups of lemonade. John sold twice as many cups as Mary. How many cups of lemonade did each of them sell?', "Let's denote the number of cups Mary sold as x. According to the problem, we know that John sold twice as many cups as Mary, so John sold 2x cups. The total number of cups they sold is the sum of the cups Mary sold and the cups John sold, which is 120. Therefore, we can form the equation x + 2x = 120. Solving this equation gives x = 40. So, Mary sold 40 cups and John sold 80 cups."), ('import data.nat.basic\n\nopen nat\n\ndef no_of_students : ℕ := 30\ndef chocolate_likers : ℕ := 12\ndef vanilla_likers : ℕ := 10\n\ndef strawberry_likers : ℕ := no_of_students - (chocolate_likers + vanilla_likers)\n\n#eval strawberry_likers', 'In a classroom of 30 students, 12 students like chocolate ice cream, 10 students like vanilla ice cream, and the remaining students like strawberry ice cream. How many students like strawberry ice cream?', 'To solve this problem, we first add the number of students who like chocolate and vanilla ice cream together, which is 12 + 10 = 22. Then, we subtract this total from the total number of students in the class, which is 30. Therefore, 30 - 22 = 8 students like strawberry ice cream.'), ('def rectangle_area (length width : ℕ) : ℕ :=\n  length * width\n\nexample : rectangle_area 7 3 = 21 :=\n  begin\n    unfold rectangle_area,\n    refl,\n  end', 'If a rectangle has a length of 7 and a width of 3, what is its area?', 'The area of a rectangle can be found by multiplying its length by its width. So, we multiply 7 (the length) by 3 (the width) to get an area of 21 square units.'), ('import data.real.basic\n\nlemma equivalent_fractions_same_value {A B C : ℝ} (h : A = B) : (A > C ↔ B > C) :=\nbegin\n   split,\n   { intro h1,\n     rw ← h,\n     exact h1, },\n   { intro h2,\n     rw h,\n     exact h2, },\nend', "If two fractions are equivalent, do they always have the same value when compared to another fraction? To be more specific, let's consider three fractions A, B, and C. If A is equivalent to B, is it always the case that A is greater than C if and only if B is greater than C?", 'Yes, two equivalent fractions always have the same value when compared to another fraction. Equivalent fractions are fractions that look different but represent the same quantity. If fraction A is equivalent to fraction B, it means that A and B have the same value. So, if A is greater than C, then B, having the same value as A, must also be greater than C. Conversely, if B is greater than C, then A, having the same value as B, must also be greater than C. Therefore, A is greater than C if and only if B is greater than C.'), ('open nat\n\n-- declare variables\nvariables (candies : ℕ) (friends : ℕ) (found_candies : ℕ)\n\n-- state the problem\ndef candies_each_friend_has (candies friends : ℕ) : ℕ := candies / friends\ndef candies_tom_has (found_candies : ℕ) : ℕ := found_candies\n\n-- input the values\n#eval candies_each_friend_has 120 10 -- expected output: 12\n#eval candies_tom_has 5 -- expected output: 5', 'Tom has 120 candies. He wants to share them equally among his 10 friends. After giving out the candies, he found 5 more candies in his pocket. He decided to keep them for himself. How many candies does he have now?', 'First, Tom divides the 120 candies among his 10 friends, so each friend gets 120 / 10 = 12 candies. Then Tom finds 5 more candies. So, Tom now has 5 candies.'), ('import data.real.basic\n\ndef taxi_cost : ℝ → ℝ :=\nλ x, 3*x + 2\n\nexample : taxi_cost 4 = 14 :=\nbegin\n  unfold taxi_cost,\n  norm_num,\nend', 'The cost (in dollars) of a taxi ride is represented by the equation y = 3x + 2, where x is the distance (in miles) and y is the total cost. If you travel 4 miles in the taxi, what will be the total cost?', 'The equation given is y = 3x + 2. To find the cost for a 4 mile journey, we substitute x = 4 into the equation. This gives us y = 3*4 + 2 = 12 + 2 = 14. Therefore, the total cost for a 4 mile journey would be 14 dollars.'), ('-- define the length and width of the rectangle\ndef rectangle_length : ℕ := 70\ndef rectangle_width : ℕ := 45\n\n-- define the function to calculate the area of a rectangle\ndef rectangle_area (length width : ℕ) : ℕ := length * width\n\n-- calculate the area of the rectangle\n#eval rectangle_area rectangle_length rectangle_width', 'A rectangular field has a length of 70 meters and a width of 45 meters. What is the area of this field?', 'To calculate the area of a rectangle, we multiply the length by the width. So, in this case, we multiply 70 meters (the length) by 45 meters (the width), which equals 3150 square meters. Therefore, the area of the field is 3150 square meters.'), ('import data.real.basic\n\n-- definition of the height function\ndef h (t : ℝ) := -16*t^2 + 64*t + 256\n\n-- definition of the derivative of the height function\ndef h_derivative (t : ℝ) := -32*t + 64\n\n-- proof that the velocity of the stone at t = 3 seconds is -32\nexample : h_derivative 3 = -32 :=\nbegin\n  -- compute the derivative at t = 3\n  unfold h_derivative, \n  norm_num,\nend', 'A stone is thrown upwards from a skyscraper and its height after t seconds is given by the function: h(t) = -16t^2 + 64t + 256. What is the velocity of the stone at t = 3 seconds?', "The velocity of the stone at any point in time can be determined by finding the derivative of the height function, h(t). The derivative of a function represents the rate of change of the function at a particular point, which in this case is the velocity of the stone. The derivative of h(t) = -16t^2 + 64t + 256 is h'(t) = -32t + 64. So, to find the velocity of the stone at t = 3 seconds, we substitute t = 3 into h'(t), which gives us h'(3) = -32(3) + 64 = -32."), ('def scale (drawing_length : ℕ) (scale_factor : ℕ) : ℕ := drawing_length * scale_factor\n\nexample : scale 4 50 = 200 :=\nbegin\n  rw scale,\n  refl,\nend', 'In a scale drawing, the scale is 1 cm : 50 m. If the length of a building on the drawing is 4 cm, what is the actual length of the building?', 'From the scale, we know that 1 cm on the drawing represents 50 m in real life. So if the length of the building on the drawing is 4 cm, we would multiply 4 by 50 to find the actual length of the building. Therefore, the actual length of the building is 200 m.'), ('def calculate_perimeter (length : ℕ) (width : ℕ) : ℕ := 2*(length + width)\n\ndef calculate_fence_sections (perimeter : ℕ) : ℕ := perimeter\n\ndef lisa_garden_fence_sections : ℕ :=\nlet length := 4 in\nlet width := 3 in\nlet perimeter := calculate_perimeter length width in\ncalculate_fence_sections perimeter\n\n#eval lisa_garden_fence_sections  -- output is 14', 'Lisa has a rectangular garden that is 4 meters long and 3 meters wide. She wants to build a fence around the garden. If each section of the fence is 1 meter long, how many sections does she need?', "To find out the number of fence sections Lisa needs, we need to calculate the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2*(length + width). So, the perimeter of Lisa's garden is 2*(4 meters + 3 meters) = 2*7 meters = 14 meters. Since each section of the fence is 1 meter long, Lisa needs 14 sections of fence."), ('open nat\n\ndef tim_apples : ℕ := 35\ndef friend_apples : ℕ := 18\ndef mom_apples : ℕ := 46\n\n-- Tim gives apples to his friend\ndef after_giving := tim_apples - friend_apples\n\n-- Tim receives apples from his mom\ndef final_apples := after_giving + mom_apples\n\nexample : final_apples = 63 :=\nbegin\n  unfold final_apples,\n  unfold after_giving,\n  refl,\nend', 'Tim has 35 apples and he gives 18 apples to his friend. Afterwards, Tim receives 46 apples from his mom. How many apples does Tim have now?', 'First, we need to subtract the number of apples that Tim gave to his friend from the number he originally had. That is, 35 minus 18, which equals to 17. Then, we add the number of apples Tim received from his mom to the number he has left. That is, 17 plus 46, which equals to 63. So, Tim has 63 apples now.'), ('import data.int.basic\n\nexample : (7 + 5 - 3 = 9) :=\nbegin\n  exact dec_trivial,\nend', 'John has 7 apples. Ann gives John 5 more apples. Later, John eats 3 apples. How many apples does John have now?', 'First, we add 7 and 5 to find out how many apples John has after Ann gives him more. That is 12 apples. Then we subtract 3 from 12 because John eats 3 apples. Therefore, John has 9 apples left.'), ('import data.real.basic\n\ntheorem neg_mul_neg_is_pos : ∀ a b : ℝ, a < 0 → b < 0 → a * b > 0 :=\nbegin\n  intros a b ha hb,\n  have h : 0 < -a, from neg_pos.mpr ha,\n  have i : 0 < -b, from neg_pos.mpr hb,\n  have j : 0 < (-a) * (-b), from mul_pos h i,\n  rwa neg_mul_neg at j,\nend', 'Prove that the product of two negative numbers is a positive number. More specifically, prove that if a and b are negative numbers, then the product ab is a positive number.', "The product of two negative numbers is a positive number. This is because the negative sign of the first number can be thought of as a reflection on the number line. If you take a positive number and reflect it about the origin (0), you get a negative number. If you then take that negative number and reflect it again, you get back to the original positive number. This is what is happening when we multiply two negative numbers together. \n\nFor instance, let's take -4 and -3, which are negative numbers. When we multiply -4 and -3, we get 12. \n\nTherefore, the product of two negative numbers is a positive number."), ('import data.real.basic\nimport tactic\n\nopen_locale classical\n\nnoncomputable def boy_in_science_stream (total_student : ℝ) (science_student : ℝ) (arts_student : ℝ) (boy_ratio_in_science : ℝ) (girl_ratio_in_science : ℝ) (boy_ratio_in_arts : ℝ) (girl_ratio_in_arts : ℝ) := (boy_ratio_in_science / (boy_ratio_in_science + girl_ratio_in_science)) * science_student / total_student\n\nexample : abs (boy_in_science_stream 1000 600 400 3 2 2 3 - 0.36) < 0.01 := \nbegin\n  unfold boy_in_science_stream,\n  norm_num,\nend', 'In a high school, there are 1000 students. Among them, 600 students are in the Science stream and the rest are in the Arts stream. In a survey, it was found out that in the Science stream, the ratio of boys to girls is 3:2, and in the Arts stream, the ratio is 2:3. If a student is selected at random, what is the probability that the student is a boy from the Science stream?', 'First, we find the number of students in each category. The number of Science stream students is 600, and the ratio of boys to girls is 3:2. Therefore, the number of boys is (3/5)*600 = 360, and the number of girls is (2/5)*600 = 240. \n\nSimilarly, the number of Arts stream students is 1000-600 = 400, and the ratio of boys to girls is 2:3. Therefore, the number of boys is (2/5)*400 = 160, and the number of girls is (3/5)*400 = 240.\n\nNow, the total number of students is 1000, and the number of boys in the Science stream is 360. So, the probability that a randomly selected student is a boy from the Science stream is 360/1000 = 0.36.'), ('import data.real.basic\n\n-- system of equations\ndef f (x y : ℝ) := 3*x - y = 7\ndef g (x y : ℝ) := x + 2*y = 5\n\n-- proof\nexample : ∃ (x y : ℝ), f x y ∧ g x y :=\nbegin\n  use [19/7, 8/7],\n  split,\n  { unfold f, norm_num, },\n  { unfold g, norm_num, },\nend', 'If the equation `3x - y = 7` and `x + 2y = 5` are true for some `x` and `y`, what are the values of `x` and `y`?', "We can solve this system of equations using the method of substitution or elimination. \n\nFirst, let's rearrange the second equation to solve for `x`: `x = 5 - 2y`. \n\nThen, we substitute `5 - 2y` for `x` in the first equation: `3(5 - 2y) - y = 7`. \n\nSimplifying that gives: `15 - 6y - y = 7`, which further simplifies to `15 - 7y = 7`.\n\nSubtract 15 from both sides to isolate -7y on the left side, we get: `-7y = 7 - 15`, which simplifies to `-7y = -8`.\n\nFinally, divide both sides by -7 to solve for y, we get: `y = -8 / -7 = 8/7`.\n\nSubstitute `y = 8/7` into the second equation: `x = 5 - 2(8/7)`. \n\nSolving for `x` gives us `x = 5 - 16/7 = 35/7 - 16/7 = 19/7`. \n\nSo the solution to the system of equations is `x = 19/7` and `y = 8/7`."), ('def calculate_stickers_left (initial_stickers : ℕ) (friend_percentage : ℕ) (brother_percentage : ℕ) : ℕ :=\nlet friend_stickers := initial_stickers * friend_percentage / 100 in\nlet remaining_stickers_after_friend := initial_stickers - friend_stickers in\nlet brother_stickers := remaining_stickers_after_friend * brother_percentage / 100 in\nremaining_stickers_after_friend - brother_stickers\n\n#eval calculate_stickers_left 100 25 40  -- The output should be 45', 'John bought a pack of 100 stickers. He gave away 25% of the stickers to his friend, and then another 40% of the remaining stickers to his brother. How many stickers does John have left?', 'Initially, John has 100 stickers. He gives away 25% to his friend, which is 25% of 100 equals to 25 stickers. So, he has 100 - 25 = 75 stickers left after giving some to his friend. Then, he gives away 40% of the remaining stickers to his brother. This is 40% of 75 equals to 30 stickers. So, after giving some to his brother, he has 75 - 30 = 45 stickers left. So, John has 45 stickers left.'), ('def dilation (original_length : ℕ) (scale_factor : ℕ): ℕ := original_length * scale_factor\n\n#eval dilation 5 3 -- The output will be 15, which indicates that the side length of the new square is 15 cm after the dilation transformation.', 'A square has a side length of 5 cm. If the square undergoes a dilation transformation with a scale factor of 3, what will be the side length of the new square?', 'In a dilation transformation, the size of the shape changes while maintaining the same shape and proportions. The side lengths of the shape are multiplied by the scale factor. Therefore, in this case, the side length of the square after the dilation will be 5 cm * 3 = 15 cm.'), ('def survey_results := [(5 : ℕ), 3, 2, 4, 6]\ndef total_students := list.foldl (+) 0 survey_results\ndef total_fruits := list.length survey_results\ndef average := total_students / total_fruits\n\n#eval average  -- returns 4', 'A fifth-grade class conducted a survey on the favorite fruit of students. The results were recorded as follows:\n- 5 students chose apples\n- 3 students chose oranges\n- 2 students chose bananas\n- 4 students chose grapes\n- 6 students chose strawberries\n\nThe teacher asked the students to represent the data on a line plot and calculate the average (mean) number of students who chose each fruit. Calculate the average and represent it as a decimal to the nearest hundredth place.', 'First, we need to find the total number of students who participated in the survey. By adding all the given numbers together, we find that there were 20 students in total. \n\nNext, we need to find the total number of fruits chosen. Since each student chose one fruit, the total number of fruits chosen is also 20. \n\nTo find the average number of students who chose each fruit, we divide the total number of students (20) by the total number of fruits chosen (5), which is 20 ÷ 5 = 4. \n\nTherefore, the average number of students who chose each fruit is 4. \n\nTo represent this as a decimal to the nearest hundredth place, we can write it as 4.00. \n\nSo, the average number of students who chose each fruit, represented as a decimal to the nearest hundredth place, is 4.00.'), ('def arithmetic_sequence (a₁ : ℕ) (d : ℕ) (n : ℕ) : ℕ := a₁ + d * (n - 1)\n\nexample : arithmetic_sequence 3 2 10 = 21 :=\nbegin\n  unfold arithmetic_sequence,\n  simp,\n  refl,\nend', 'Consider the arithmetic sequence defined by the first term a₁ = 3 and the common difference d = 2. What is the 10th term of the sequence?', 'In an arithmetic sequence, the nth term can be found by the formula aₙ = a₁ + (n-1)d where aₙ is the nth term, a₁ is the first term, n is the position of the term in the sequence, and d is the common difference. \n\nGiven in the problem, a₁ = 3 and d = 2. We want to find the 10th term, so n = 10.\n\nSubstituting these values into the formula, we get:\n\na₁₀ = a₁ + (n-1)d\n    = 3 + (10-1)2\n    = 3 + 9 * 2\n    = 3 + 18\n    = 21\n\nSo the 10th term of the sequence is 21.'), ("import data.real.basic\n\n-- Define the function\ndef f : ℝ → ℝ := λ x, 3*x^4 - 2*x^3 + 5*x - 7\n\n-- Define the derivative\ndef f' : ℝ → ℝ := λ x, 12*x^3 - 6*x^2 + 5\n\n-- Prove that the derivative at x = 2 is 77\nexample : f' 2 = 77 :=\nbegin\n  rw f',\n  norm_num,\nend", 'Let f(x) = 3x^4 - 2x^3 + 5x - 7. Find the derivative of f at the point x = 2.', "The derivative of a function at a particular point can be found by applying the power rule for derivatives, which states that the derivative of x^n is n*x^(n-1). \n\nApplying this rule to each term in the function: \n\n- The derivative of 3x^4 is 12x^3.\n- The derivative of -2x^3 is -6x^2.\n- The derivative of 5x is 5.\n- The derivative of -7 (a constant) is 0. \n\nSo, the derivative of f(x) is f'(x) = 12x^3 - 6x^2 + 5. \n\nEvaluating this derivative at the point x = 2 gives: \n\nf'(2) = 12*(2)^3 - 6*(2)^2 + 5 = 96 - 24 + 5 = 77."), ('import data.real.basic\n\n-- defining the triangle ABC \ndef triangle (A B C : ℝ) := A + B + C = 180 \n\n-- defining the given values of the angles A and B \ndef A : ℝ := 60 \ndef B : ℝ := 40 \n\n-- proving the value of angle C \nexample : ∃ (C : ℝ), triangle A B C ∧ C = 80 := \nbegin\n  use 80, -- postulate that C is 80 \n  split, -- split the goal into two: 1) show that A + B + C = 180, and 2) show that C = 80\n  { -- show that A + B + C = 180\n    unfold triangle, -- unfold the definition of a triangle\n    unfold A B, -- unfold the definitions of A and B\n    norm_num, -- simplify the numbers\n  },\n  { -- show that C = 80\n    refl, -- this is true by definition\n  },\nend', 'In triangle ABC, the angle at A is 60 degrees, and the angle at B is 40 degrees. What is the angle at C?', 'Since the sum of angles in a triangle is always 180 degrees, we can calculate the angle at C by subtracting the angles at A and B from 180. So, angle C = 180 - 60 - 40 = 80 degrees.'), ("def save_money := λ week, 10*week + 15*week\ndef weeks_needed := λ cost, cost / save_money 1\n\n#eval weeks_needed 90 -- returns 3.6\n\n-- Since they can't save for a fraction of a week, we'll need to round up to the nearest whole number.\ndef round_up := λ n : ℕ, if n % 1 = 0 then n else n + 1\n\n#eval round_up (weeks_needed 90) -- returns 4", 'John and his sister, Mary, decide to save up for a new video game that costs $90. John saves $10 a week, while Mary saves $15 a week. How many weeks will it take for them to have enough money to buy the video game together?', "We know that John saves $10 a week and Mary saves $15 a week. Therefore, in total, they save $25 a week together. To find out how many weeks it will take for them to save up enough for the video game, we need to divide the total cost of the video game by the amount they save each week. So, $90 divided by $25 equals 3.6 weeks. However, since they can't save for a fraction of a week, we'll need to round up to the nearest whole number. Therefore, it will take them 4 weeks to save up enough money to buy the video game."), ('import data.real.basic\n\nopen_locale classical\n\ntheorem solve_system_of_equations : \n∃ (x y : ℝ), 2*x + 3*y = 12 ∧ 4*x - y = 10 :=\nbegin\n  use [3, 2],\n  split,\n  { linarith, },\n  { linarith, },\nend', 'Solve the following system of equations: \n\n1) 2x + 3y = 12\n2) 4x - y = 10', 'To solve this system of equations, we can use the method of substitution or elimination. We can start with the elimination method by multiplying the second equation by 3. \n\nSo, the system of equations becomes: \n\n1) 2x + 3y = 12\n2) 12x - 3y = 30\n\nNow, we can add the two equations together to eliminate y: \n\n14x = 42\n\nDividing by 14, we can solve for x: \n\nx = 42/14 = 3\n\nSubstitute x = 3 into the first equation:\n\n2*3 + 3y = 12\n6 + 3y = 12\n3y = 12 - 6\n3y = 6\ny = 6/3 = 2\n\nSo, the solution to the system of equations is x = 3, y = 2.'), ('def calculate_value (tens : ℕ) (ones : ℕ) : ℕ := tens*10 + ones\nexample : calculate_value 3 4 = 34 := by refl', "If we have a 2-digit number with the tens digit '3' and the ones digit '4', what is the value of the number in the base-10 numeral system?", "In the base-10 numeral system, the place value of a digit is determined by its position in the number. The ones place is the first digit from the right, and the tens place is the second digit from the right. So, the number we are looking at is '34'. The number in the tens place is 3, which means there are 3 tens or 3*10 = 30. The number in the ones place is 4, which means there are 4 ones or 4*1 = 4. So, the value of the number '34' is equal to 30 + 4 = 34."), ('import data.real.basic\n\n-- Definitions\ndef rectangle_area (length : ℝ) (width : ℝ) : ℝ := length * width\ndef rectangle_perimeter (length : ℝ) (width : ℝ) : ℝ := 2 * (length + width)\n\n-- Constants\ndef garden_length : ℝ := 20\ndef garden_width : ℝ := 15\ndef fence_cost_per_foot : ℝ := 5\n\n-- Area calculation\n#check rectangle_area garden_length garden_width  -- Output: 300\n\n-- Perimeter calculation\n#check rectangle_perimeter garden_length garden_width  -- Output: 70\n\n-- Fence cost calculation\n#check rectangle_perimeter garden_length garden_width * fence_cost_per_foot  -- Output: 350', 'There is a rectangular garden with a length of 20 feet and a width of 15 feet. There is a fence around the garden. The fence costs $5 per foot. \n1. What is the area of the garden?\n2. How much does the fence cost?', '1. The area of a rectangle is calculated by multiplying the length by the width. So, the area of the garden is 20 feet times 15 feet, which equals 300 square feet.\n2. The perimeter of a rectangle is calculated by multiplying the sum of the length and the width by 2. So, the perimeter of the garden is 2 times (20 feet + 15 feet), which equals 70 feet. Since the fence costs $5 per foot, the total cost of the fence is 70 feet times $5, which equals $350.'), ("-- defining the variables for John's and Mary's savings\ndef J := 10 * 50\ndef M := 10 * 40\n\n-- defining the equation\ndef eq1 := J + M = 900\n\n-- proving that the equation is correct\nexample : eq1 :=\nbegin\n  -- proving eq1: J + M = 900\n  rw [eq1],\n  exact dec_trivial, -- this is true by calculation\nend", "John and Mary are saving money for a trip. John saves $50 each week, while Mary saves $40 each week. After 10 weeks, they have a total of $900 saved up. However, they realize they have mixed up their savings and can't tell who saved what amount. How much did John and Mary each save?", "Let's denote John's savings as J and Mary's savings as M. We know from the problem that:\n\n1) J + M = $900\n2) J = 10 * $50 = $500\n3) M = 10 * $40 = $400\n\nSubstitute (2) and (3) into equation (1), we get:\n\n$500 + $400 = $900\n\nSo, John saved $500 and Mary saved $400."), ('open nat\n\ndef count_marbles (bags : ℕ) (marbles_per_bag : ℕ) : ℕ := bags * marbles_per_bag\n\nlemma teddy_has_50_marbles : count_marbles 5 10 = 50 :=\nbegin\n  unfold count_marbles,\n  exact rfl,\nend', 'Teddy has 5 bags of marbles. Each bag contains 10 marbles. How many total marbles does Teddy have?', 'Each bag of marbles that Teddy has contains 10 marbles. Since Teddy has 5 bags of marbles, we can simply multiply the number of bags (5) by the number of marbles in each bag (10) to get the total number of marbles. So, 5 bags x 10 marbles/bag = 50 marbles. Therefore, Teddy has a total of 50 marbles.'), ('import data.nat.basic\n\nopen nat \n\ndef chocolates_in_boxes (n m : ℕ) : ℕ := n * m\n\nexample : chocolates_in_boxes 12 7 = 84 :=\nbegin\n  unfold chocolates_in_boxes,\n  exact mul_comm 12 7\nend', 'If we know that a box contains 12 chocolates, and there are 7 boxes, how many chocolates are there in total?', 'We can solve this problem by using multiplication. We simply multiply the number of chocolates in one box (12) by the number of boxes (7). This gives us a total of 84 chocolates.'), ('import data.real.basic\n\n-- The cost of building a garden is a function of the area of the garden\ndef cost_of_building (x : ℝ) : ℝ := 10 * (3 * x * 5 * x)\n\n-- Proving that the cost of building the garden is $150x^2\nexample (x : ℝ) : cost_of_building x = 150 * x^2 :=\nbegin\n  unfold cost_of_building,\n  -- simplifying the expression\n  ring,\nend', 'A rectangular garden is being built with dimensions 3x and 5x. The cost to build the garden is $10 per square meter. What is the cost of building the garden?', 'The area of the rectangular garden can be calculated by multiplying its length and its width, which gives us 3x * 5x = 15x^2. The cost to build the garden is $10 per square meter, so the total cost will be 15x^2 * $10 = $150x^2.'), ('import data.real.basic \n\n-- defining the polynomial function\ndef f (x : ℝ) : ℝ := 2*x^3 - 3*x^2 + 4*x - 1\n\n-- proof\nexample : f 2 = 11 :=\nbegin\n  -- calculate the function value at x = 2\n  calc f 2 = 2*(2)^3 - 3*(2)^2 + 4*2 - 1 : rfl\n       ... = 2*8 - 3*4 + 8 - 1 : by norm_num\n       ... = 16 - 12 + 8 - 1 : by norm_num\n       ... = 11 : by norm_num,\nend', 'Consider the polynomial function f(x) = 2x^3 - 3x^2 + 4x - 1. What is the y-coordinate of the point on the graph of this function when x = 2?', 'To find the y-coordinate of the point on the graph of the function when x = 2, we simply substitute x = 2 into the equation. \n\nSo, f(2) = 2*(2)^3 - 3*(2)^2 + 4*2 - 1 = 2*8 - 3*4 + 8 - 1 = 16 - 12 + 8 - 1 = 11. \n\nTherefore, the y-coordinate of the point on the graph of this function when x = 2 is 11.'), ('import data.real.basic\n\n-- definition of the velocity function\ndef v : ℝ → ℝ := λ t, 3*t^2 - 6*t + 5\n\n-- derivative of the velocity function\ndef v_deriv : ℝ → ℝ := λ t, 6*t - 6\n\n-- proof that the maximum speed is reached at t = 1\nexample : ∃ t, v_deriv t = 0 :=\nbegin\n  use 1,\n  dsimp [v_deriv],\n  norm_num,\nend', "John is driving a car on a straight road. The velocity of the car is given by the equation v(t) = 3t^2 - 6t + 5 (m/s), where t is the time in seconds. John starts driving at t = 0. At what time will John's car reach its maximum speed?", "To find the time at which the car reaches its maximum speed, we need to find the maximum of the velocity function v(t). This can be done by finding the derivative of v(t) and setting it equal to zero, because the maximum of a function occurs where its derivative is zero. \n\nThe derivative of v(t) is v'(t) = 6t - 6. Setting this equal to zero, we get 6t - 6 = 0, which simplifies to t = 1. Therefore, John's car will reach its maximum speed at t = 1 second."), ('import data.real.basic\n\nexample : (0.2)^2 + (0.3)^3 - (0.1)^1 = 0.067 :=\nbegin\n  norm_num,\nend', 'Calculate the following expression: \n\n0.2^2 + 0.3^3 - 0.1^1', 'First, we need to compute the exponential parts of the problem: 0.2^2, 0.3^3 and 0.1^1.\n\n0.2^2 = 0.2 * 0.2 = 0.04.\n\n0.3^3 = 0.3 * 0.3 * 0.3 = 0.027.\n\nAnd 0.1^1 = 0.1.\n\nNext, we add and subtract the results: \n\n0.04 (from 0.2^2) + 0.027 (from 0.3^3) - 0.1 (from 0.1^1) = 0.067.\n\nSo, 0.2^2 + 0.3^3 - 0.1^1 = 0.067.'), ('import tactic.norm_num\n\nopen nat\n\ndef number_of_blocks (blue_blocks : ℕ) (red_blocks : ℕ) (green_blocks : ℕ) : ℕ := \n    blue_blocks + red_blocks + green_blocks\n\nexample : number_of_blocks 3 5 2 = 10 :=\nbegin\n    rw number_of_blocks\nend', 'Samantha is playing with her building blocks. She has 3 blue blocks, 5 red blocks, and 2 green blocks. She wants to build a tower using all her blocks. How many blocks does she have in total?', "To find out how many blocks Samantha has in total, we simply need to add the number of each color of blocks. So, we add the 3 blue blocks, the 5 red blocks, and the 2 green blocks together. That's 3 + 5 + 2, which equals 10. Therefore, Samantha has 10 blocks in total."), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 23 17 = 391 := rfl', 'Alice and Bob were playing a game in math class. Alice drew a rectangle on the chalkboard with a length of 23 units and a width of 17 units. Bob was supposed to find the area of the rectangle. However, Bob forgot the formula to find the area of a rectangle. Can you help Bob to find the area of the rectangle?', 'To find the area of a rectangle, we multiply the length by the width. In this case, the length is 23 units and the width is 17 units. So, to find the area, we do 23 * 17 = 391 units². Therefore, the area of the rectangle is 391 units².'), ('import data.real.basic\n\ndef expected_value := (1/2) * 1 + (1/3) * 2 - (1/6) * 3\n\ntheorem expected_value_of_game : expected_value = 0.67 :=\nbegin\n  unfold expected_value,\n  norm_num,\nend', 'Consider a game where you roll a fair six-sided die. If it lands on 1, 2, or 3, you win $1. If it lands on 4 or 5, you win $2. If it lands on 6, you lose $3. What is the expected value of this game?', 'The expected value is calculated by multiplying each outcome by its probability and then adding those products together. Since the die is fair, each outcome has a probability of 1/6. \n\nThe outcomes and their respective probabilities are:\n\n- Winning $1, which happens with probability 1/2 (since there are 3 outcomes—1, 2, and 3—where this happens out of 6 total possible outcomes).\n- Winning $2, which happens with probability 1/3 (since there are 2 outcomes—4 and 5—where this happens out of 6 total possible outcomes).\n- Losing $3, which happens with probability 1/6 (since there is 1 outcome—6—where this happens out of 6 total possible outcomes).\n\nSo, the expected value is:\n\n(1/2 * $1) + (1/3 * $2) - (1/6 * $3) = $0.5 + $0.67 - $0.5 = $0.67. \n\nThus, the expected value of this game is $0.67.'), ('import data.real.basic\n\ndef f (x : ℝ) := 2*x^3 - 5*x^2 + 3*x - 2\n\ntheorem intersect_y_axis_at_neg2 : f 0 = -2 :=\nbegin\n  simp [f],\nend', 'Given the polynomial function f(x) = 2x^3 - 5x^2 + 3x - 2, find the y-coordinate of the point where the function intersects the y-axis.', 'The function intersects the y-axis when the value of x equals 0. So, to find the y-coordinate of the intersection point, we substitute x = 0 into the function:\n\nf(0) = 2(0)^3 - 5(0)^2 + 3(0) - 2 = -2\n\nSo the function intersects the y-axis at the point (0, -2).'), ('def student : ℕ := 30\ndef original_average : ℕ := 85\ndef total_points : ℕ := student * original_average\ndef corrected_points : ℕ := total_points + 5\ndef new_average : ℕ := corrected_points / student\n\n#eval new_average', "In a class of 30 students, the average score on a math exam was reported to be 85 points. Later, it was found that one student's score was miscalculated and was actually 5 points higher than originally recorded. What is the new average score of the class?", 'The original total points for the class was 30 (students) * 85 (average score) = 2550. After the correction, the total points became 2550 + 5 = 2555. So, the new average score of the class is 2555 / 30 = 85.17.'), ('import data.nat.basic\n\nopen nat\n\ndef number_of_pencils (boxes : ℕ) (pencils_per_box : ℕ) : ℕ := boxes * pencils_per_box\n\nexample : number_of_pencils 34 25 = 850 :=\nbegin\n  unfold number_of_pencils,\n  refl,\nend', 'John has a box of pencils. Each box contains 25 pencils. He has 34 boxes in total. How many pencils does John have?', 'To find out how many pencils John has, we need to multiply the number of pencils in each box by the number of boxes. So, we multiply 25 (the number of pencils in each box) by 34 (the total number of boxes). The product of 25 and 34 equals 850, so John has 850 pencils.'), ('import data.int.basic\n\ntheorem add_sub_associative : ∀ (a b c : ℤ), (a + b) - c = a + (b - c) :=\nbegin\n  intros,\n  rw add_sub,\nend', 'If we have three numbers, a, b and c. The statement is true: (a + b) - c = a + (b - c).', "To understand why this statement holds true, let's break it down.\n\nFirstly, let's focus on the left side of the equation, (a + b) - c. According to the definition of subtraction, we are adding a and b together first, and then subtracting c from the result.\n\nOn the right side of the equation, a + (b - c), we first subtract c from b, and then add the result to a. \n\nThe reason these two are equal is because of the associative property of addition and subtraction, which states that the way in which numbers are grouped does not change the result. So, whether we add a and b first, or subtract c from b first, the result will be the same."), ('import data.int.basic\n\ndef A := (3,2)\ndef B := (5,7)\ndef move := (2,5)\n\ndef new_A := (A.1 + move.1, A.2 + move.2)\ndef new_B := (B.1 + move.1, B.2 + move.2)\n\nexample : new_A ≠ new_B :=\nbegin\n  unfold new_A new_B,\n  unfold A B move,\n  simp,\n  intro h,\n  injection h with h1 h2,\n  have h3 : 5 ≠ 7 := by exact dec_trivial,\n  have h4 : 7 ≠ 12 := by exact dec_trivial,\n  contradiction,\nend', "Let's imagine a scenario where two ants, A and B, are located at the points (3,2) and (5,7) respectively on a 2D plane. They decided to race along the line segment connecting their positions. Ant A is at the starting point and Ant B is at the end point of this segment. If Ant A moves along the vector (2,5) and Ant B moves along the vector (2,5), will they meet at the same point? If they do, which point is it?", 'The position of ant A and ant B can be represented by vectors. Initially, the vector of ant A is (3,2) and the vector of ant B is (5,7). When they move along the vector (2,5), they are actually adding this vector to their initial positions.\n\nSo, the new position of ant A will be (3+2, 2+5) = (5,7) and the new position of ant B will be (5+2, 7+5) = (7,12). As you can see, they will not meet at the same point.'), ('def matrix_multiply (A B : list (list ℕ)) : list (list ℕ) :=\nmatch A, B with\n| [[a, b], [c, d]], [[w, x], [y, z]] := [[a*w + b*y, a*x + b*z], [c*w + d*y, c*x + d*z]]\n| _, _ := []\nend\n\n#eval matrix_multiply [[2, 3], [1, 4]] [[5, 2], [3, 1]]  -- returns [[19, 7], [17, 6]]', 'Given two 2x2 matrices A and B, where A = [[2, 3], [1, 4]] and B = [[5, 2], [3, 1]], calculate the result of the matrix multiplication A*B.', 'To multiply two matrices, we multiply the elements of each row of the first matrix by the elements of each column of the second matrix and add the products. \n\nFor the first row, first column of the product matrix: (2*5) + (3*3) = 19.\n\nFor the first row, second column of the product matrix: (2*2) + (3*1) = 7.\n\nFor the second row, first column of the product matrix: (1*5) + (4*3) = 17.\n\nFor the second row, second column of the product matrix: (1*2) + (4*1) = 6. \n\nTherefore, the resulting matrix of A*B is [[19, 7], [17, 6]].'), ("import data.real.basic\n\nopen real\n\n-- defining the function f(x)\ndef f (x : ℝ) := (3*x^2 + 2*x + 1)^5\n\n-- defining the derivative of the function f(x)\ndef f' (x : ℝ) := 5*(3*x^2 + 2*x + 1)^4 * (6*x + 2)\n\n-- defining the function g(u)\ndef g (u : ℝ) := u^5\n\n-- defining the derivative of the function g(u)\ndef g' (u : ℝ) := 5*u^4\n\n-- defining the function h(x)\ndef h (x : ℝ) := 3*x^2 + 2*x + 1\n\n-- defining the derivative of the function h(x)\ndef h' (x : ℝ) := 6*x + 2\n\n-- proof that the derivative of f(x) is f'(x)\ntheorem derivative_of_f : ∀ x : ℝ, f' x = g' (h x) * h' x :=\nbegin\n  intro x,\n  unfold f f' g' h h',\nend", 'Let f(x) be a function defined as f(x) = (3x^2 + 2x + 1)^5. Find the derivative of f(x) using the chain rule.', "The chain rule states that the derivative of a composite function is the derivative of the outer function multiplied by the derivative of the inner function. Here, we can consider the outer function as g(u) = u^5 and the inner function as h(x) = 3x^2 + 2x + 1. \n\nFirst, we find the derivative of the outer function g'(u) = 5u^4. Then we find the derivative of the inner function h'(x) = 6x + 2.\n\nFinally, substituting h(x) into g'(u), and then multiplying by h'(x), we get the derivative of f(x) as f'(x) = 5(3x^2 + 2x + 1)^4 * (6x + 2)."), ('import data.real.basic\n\n-- let x represent the original side length of the garden\nvariable (x : ℝ)\n\n-- the original area A1 and the expanded area A2\ndef A1 : ℝ := x^2\ndef A2 : ℝ := (x+3)^2\n\n-- the difference in the area\ndef ΔA : ℝ := A2 x - A1 x\n\n-- verify that the difference in the area is 6x + 9\nexample : ΔA x = 6*x + 9 :=\nbegin\n  dsimp [ΔA, A2, A1],\n  ring,\nend', "John has a garden in the shape of a square. The area of his garden is represented by the quadratic equation A = x^2, where A is the area in square feet and x is the length of one side in feet. After expanding his garden by 3 feet in length and width, the new area of the garden is represented by the equation A = (x+3)^2. What is the difference in the area of John's garden before and after expansion?", 'The initial area of the garden is x^2 square feet. After the expansion, the area of the garden is (x+3)^2 = x^2 + 6x + 9. The difference in the area is then (x^2 + 6x + 9) - x^2 = 6x + 9 square feet.'), ('import data.real.basic\n\n-- Declare the variables\nvariables (l_park w_park l_garden w_garden : ℝ)\n\n-- Assume the given conditions\ndef park_area (l_park w_park : ℝ) := l_park * w_park\ndef garden_area (l_garden w_garden : ℝ) := l_garden * w_garden\ndef park_excluding_garden (l_park w_park l_garden w_garden : ℝ) := park_area l_park w_park - garden_area l_garden w_garden\n\n-- Declare the values of the variables\ndef l_park_val := 80 -- length of the park\ndef w_park_val := 60 -- width of the park\ndef l_garden_val := 20 -- length of the garden\ndef w_garden_val := 20 -- width of the garden\n\n-- Calculate the area of the park excluding the garden\n#eval park_excluding_garden l_park_val w_park_val l_garden_val w_garden_val', 'A rectangular park has a length of 80 meters and a width of 60 meters. There is a square garden in the middle of the park that measures 20 meters on each side. What is the area of the park excluding the garden?', 'First, we find the total area of the park by multiplying the length and the width (80 meters * 60 meters = 4800 square meters). Then we find the area of the garden by multiplying the length and the width (20 meters * 20 meters = 400 square meters). To find the area of the park excluding the garden, we subtract the area of the garden from the total area of the park (4800 square meters - 400 square meters = 4400 square meters). So, the area of the park excluding the garden is 4400 square meters.'), ('import data.real.basic \n\nopen_locale classical \n\n-- declare a variable `x`\nvariables (x : ℝ)\n\n-- state the problem in Lean\ntheorem solve_eq : -3 * (4*x - 2) = -6 → x = 1 :=\nbegin\n  -- introduce the hypothesis\n  intro h,\n  -- simplify the equation\n  have h₁ : -12*x + 6 = -6 := by linarith,\n  -- isolate x\n  have h₂ : -12*x = -12 := by linarith,\n  -- solve for x\n  have h₃ : x = 1 := by linarith,\n  -- conclusion\n  exact h₃,\nend', 'Solve the equation -3(4x - 2) = -6', 'To solve the equation, first we can distribute the -3 across the (4x - 2). This gives us -3 * 4x + -3 * -2 = -6, which simplifies to -12x + 6 = -6. Then, we can subtract 6 from both sides to isolate the term with x on one side, giving us -12x = -12. Finally, we can divide both sides by -12 to solve for x. This gives us x = 1.'), ('import data.real.basic\n\n-- stating the problem\ndef f (x : ℝ) : ℝ := x^2 + 3\n\n-- proving the problem\nexample : f 2 = 7 :=\nbegin\n  unfold f,\n  norm_num,\nend', 'Let `y = f(x)` be a function that satisfies the differential equation `dy/dx = 2x`. If `f(0) = 3`, find `f(2)`.', 'To find `f(2)`, we need to solve the given differential equation `dy/dx = 2x`. The solution to this differential equation is `y = x^2 + C`, where `C` is the integration constant. \n\nGiven that `f(0) = 3`, we can substitute `x = 0` and `y = 3` into `y = x^2 + C` to find `C = 3`. \n\nSo, the solution to the differential equation is `y = x^2 + 3`. \n\nFinally, substituting `x = 2` into `y = x^2 + 3`, we find that `f(2) = 2^2 + 3 = 7`.'), ('import data.complex.basic\n\nnoncomputable theory\n\ndef AB : ℝ := 7\ndef BC : ℝ := 24\ndef CA : ℝ := 25\n\ndef cos_ABC : ℝ :=\n(BC^2 + AB^2 - CA^2) / (2*BC*AB)\n\ndef cos_ACB : ℝ :=\n(CA^2 + AB^2 - BC^2) / (2*CA*AB)\n\ndef sin_ACB : ℝ :=\nreal.sqrt(1 - cos_ACB^2)\n\ndef sin_ABC : ℝ :=\nBC*sin_ACB / CA\n\ndef complex_representation : ℂ :=\n⟨cos_ABC, sin_ABC⟩', 'In a non-right triangle ABC, the lengths of sides AB, BC and CA are 7, 24 and 25 units respectively. The angle between sides AB and BC is ∠ABC. Find the complex number representation for cos(∠ABC) + i*sin(∠ABC).', "First, we can calculate the cosine and sine of the angle ∠ABC using the Law of Cosines and the Law of Sines respectively. \n\nThe Law of Cosines is given by: \ncos(∠ABC) = (BC^2 + AB^2 - CA^2) / (2*BC*AB)\n\nSubstituting the given values, we get \ncos(∠ABC) = (24^2 + 7^2 - 25^2) / (2*24*7) = 16/168 = 2/21.\n\nThe Law of Sines is given by,\nsin(∠ABC) = BC*sin(∠ACB) / CA\n\nTo get sin(∠ACB), we use the fact that cos(∠ACB) = (CA^2 + AB^2 - BC^2) / (2*CA*AB). \n\nSubstituting the given values, we get \ncos(∠ACB) = (25^2 + 7^2 - 24^2) / (2*25*7) = 15/175 = 3/35. \n\nSince the triangle's angles are all less than 180 degrees, we can say that sin(∠ACB) = sqrt(1 - cos^2(∠ACB)) = sqrt(1 - (3/35)^2) = 34/35.\n\nSubstituting these values into the Law of Sines, we get \nsin(∠ABC) = 24*34/35 / 25 = 816/875.\n\nTherefore, the complex number representation for cos(∠ABC) + i*sin(∠ABC) is 2/21 + i*816/875."), ('import data.real.basic\n\n-- defining the parameters\ndef length := (8 : ℝ)\ndef width := (5 : ℝ)\ndef perimeter := 2 * (length + width)\n\n-- proving the solution\nexample : perimeter = 26 :=\nbegin\n  unfold perimeter,\n  unfold length,\n  unfold width,\n  norm_num,\nend', 'John has a rectangular garden with a length of 8 meters and a width of 5 meters. He wants to plant flowers around the perimeter of his garden. Given that one flower can be planted every meter, how many flowers does he need to plant?', 'The perimeter of a rectangle is calculated by the formula: 2 * (length + width). In this case, the length of the garden is 8 meters and the width is 5 meters. By substituting these values into the formula, we get: 2 * (8 + 5) = 2 * 13 = 26. Therefore, John needs 26 flowers to plant around the perimeter of his garden.'), ('def candies_on_day_one := 10\ndef candies_given_away_each_day := 5\ndef candies_on_day_two := (candies_on_day_one * 2) - candies_given_away_each_day\ndef candies_on_day_three := (candies_on_day_two * 2) - candies_given_away_each_day\n\n#eval candies_on_day_three', 'Sally wants to calculate how many pieces of candy she will have after 3 days if she doubles the number of candies she has each day starting with 10 candies on the first day. However, she also gives 5 candies to her friend each day. How many pieces of candy does Sally have at the end of 3 days?', 'On the first day, Sally starts with 10 candies. She then doubles this number on the second day, giving her 2 * 10 = 20 candies. However, she gives 5 candies to her friend, leaving her with 20 - 5 = 15 candies. On the third day, she doubles this number again, giving her 2 * 15 = 30 candies. After giving her friend 5 candies, she is left with 30 - 5 = 25 candies. Therefore, Sally has 25 candies at the end of 3 days.'), ('import data.real.basic\n\n-- define the variables\ndef johns_stamps : ℝ := 24\ndef mikes_stamps : ℝ := 18\ndef new_stamps : ℝ := 36\n\n-- define the ratio\nnoncomputable def ratio : ℝ := johns_stamps / mikes_stamps \n\n-- calculate how many new stamps John should get\nnoncomputable def johns_new_stamps : ℝ := new_stamps * (ratio / (1 + ratio))\n\n-- calculate how many new stamps Mike should get\nnoncomputable def mikes_new_stamps : ℝ := new_stamps * (1 / (1 + ratio))\n\n-- round to the nearest whole number\nnoncomputable def johns_new_stamps_rounded : ℝ := round johns_new_stamps\nnoncomputable def mikes_new_stamps_rounded : ℝ := round mikes_new_stamps\n\n-- check if the solution is correct\n#check johns_new_stamps_rounded  -- outputs: johns_new_stamps_rounded : ℝ\n#check mikes_new_stamps_rounded  -- outputs: mikes_new_stamps_rounded : ℝ', "John and Mike are friends who collect stamps. They decided to combine their collections. John has 24 stamps and Mike has 18 stamps. They agreed to add to their collection in such a way that the ratio of John's stamps to Mike's stamps remains the same. If they decide to add 36 stamps to their collection, how many stamps should John get and how many should Mike get?", "The ratio of John's stamps to Mike's stamps is 24:18, which simplifies to 4:3 when we divide both numbers by their greatest common divisor, which is 6. This means for every 4 stamps John gets, Mike gets 3 stamps. \n\nNow, we know they want to add 36 stamps. To maintain the same ratio, we must divide the new stamps in the ratio 4:3. The sum of the ratio values is 4 + 3 = 7. \n\nSo, John should get 4/7 of the new stamps, which is (4/7)*36 = 20.5714, but since we cannot have a fraction of a stamp, he gets 20 stamps. \n\nSimilarly, Mike should get 3/7 of the new stamps, which is (3/7)*36 = 15.4286, and rounding this to the nearest whole number, Mike gets 15 stamps."), ('def beehive_to_honey := λx : ℕ, 4*x\n\n#eval beehive_to_honey 12  -- output should be 48', 'John is a beekeeper and he collects honey from his bees. He notices that if he has 5 beehives, he can collect 20 kg of honey in a month. How much honey can he collect in a month if he has 12 beehives?', 'This problem is about rates and proportional relationships. We know that with 5 beehives, John collects 20 kg of honey. This means that each beehive produces 20/5 = 4 kg of honey in a month. If John has 12 beehives, then he will be able to collect 12 * 4 = 48 kg of honey in a month.'), ("import data.real.basic\n\n-- let's define f and g\ndef f (x : ℝ) : ℝ := 2*x^3 - 3*x^2 + 4*x - 5\ndef g (x : ℝ) : ℝ := f (x + 1)\n\ntheorem transformation : ∀ x : ℝ, g x = f (x+1) :=\nbegin\n  intro x,\n  -- expand g\n  unfold g,\nend", "Let's consider a polynomial function f(x) = 2x^3 - 3x^2 + 4x - 5. We perform a transformation on f to obtain a new function g(x) = 2(x+1)^3 - 3(x+1)^2 + 4(x+1) - 5. Prove that g(x) is f(x) shifted one unit to the left on the x-axis.", 'The transformation from f(x) to g(x) involves replacing every instance of x in f with (x+1). This is the transformation that corresponds to a horizontal shift of the graph of f one unit to the left to obtain the graph of g. \n\nIn more detail, the function g(x) = 2(x+1)^3 - 3(x+1)^2 + 4(x+1) - 5 expands out to 2x^3 + 6x^2 + 6x - 2 - 3x^2 - 3x - 3 + 4x + 4 - 5, which simplifies to 2x^3 + 3x^2 + 7x - 6. \n\nIf you compare this to the original function f(x) = 2x^3 - 3x^2 + 4x - 5, you can see that every term is the same except for the constant term, which is 1 more in g than in f. This corresponds to a shift of 1 unit to the left on the x-axis. Therefore, g(x) is f(x) shifted one unit to the left.'), ('import data.real.basic\n\ndef cube_volume (a : ℝ) : ℝ := a^3\n\ndef transformed_cube_volume (a b : ℝ) : ℝ := cube_volume (a * b)\n\nexample : transformed_cube_volume 3 3 = 729 :=\nbegin\n  unfold transformed_cube_volume,\n  unfold cube_volume,\n  norm_num,\nend', 'A cube with a side length of 3 cm undergoes a transformation that triples its dimensions. What is the volume of the transformed cube?', 'The volume of a cube is calculated by cubing the side length. So, the initial volume of the cube is 3 cm * 3 cm * 3 cm = 27 cm³. \n\nWhen the cube undergoes a transformation that triples its dimensions, the new side length becomes 3 cm * 3 = 9 cm. \n\nTherefore, the volume of the transformed cube is 9 cm * 9 cm * 9 cm = 729 cm³.'), ('open nat\ndef books_to_read : ℕ := 100 - 35\ndef weeks_needed : ℕ := books_to_read / 5\n#eval weeks_needed', 'Maria has a goal to read 100 books this year. She has already read 35 books. If Maria reads 5 books every week, how many more weeks does she need to reach her goal?', 'First, we subtract the number of books Maria has already read from her goal: 100 - 35 = 65 books still need to be read. \n\nThen, we divide the remaining books by the number of books she reads every week: 65 ÷ 5 = 13 weeks. \n\nSo, Maria needs 13 more weeks to reach her goal.'), ('def tomatoes : ℕ → ℕ\n| 0 := 0\n| 1 := 4\n| 2 := 11\n| 3 := 20\n| (n + 4) := tomatoes (n + 3) + (tomatoes (n + 3) - tomatoes (n + 2)) + 2\n\n#eval tomatoes 5  -- Output: 33', 'Liam has a vegetable garden where he grows tomatoes. The number of tomatoes he grows each week forms a quadratic sequence. In the first week, he grew 4 tomatoes. In the second week, he grew 11 tomatoes. In the third week, he grew 20 tomatoes. If this pattern continues, how many tomatoes will Liam grow in the fifth week?', 'We can find how many tomatoes Liam grows each week by looking at the differences in the number of tomatoes he grows each week. The difference between the number of tomatoes grown in the first week and the second week is 11 - 4 = 7. The difference between the second week and the third week is 20 - 11 = 9. \n\nThe difference between the two differences is 9 - 7 = 2, which is the common difference in this quadratic sequence. \n\nTo find the number of tomatoes Liam will grow in the fifth week, we would add the common difference, 2, to the difference between the third and fourth weeks (which is 11, the difference between the third week and the second week, plus the common difference, 2). This gives us 13. \n\nThen we would add this difference, 13, to the number of tomatoes grown in the fourth week (which is 20, the number of tomatoes grown in the third week, plus the difference between the third and fourth weeks, 11). \n\nSo, Liam will grow 20 + 13 = 33 tomatoes in the fifth week.'), ('open nat \n\n-- Defining the data\ndef monday : ℕ := 15\ndef tuesday : ℕ := 18\ndef wednesday : ℕ := 12\ndef days : ℕ := 3\n\n-- Defining the function for average\ndef average (monday tuesday wednesday days: ℕ) : ℕ := (monday + tuesday + wednesday) / days\n\n-- Proving the problem\nexample : average monday tuesday wednesday days = 15 :=\nbegin\n  unfold average, -- expand the definition of average\n  exact dec_trivial, -- prove the trivial decimal equality\nend', "In Ms. Johnson's 3rd grade class, there are 20 students. On Monday, 15 students said they had breakfast. On Tuesday, 18 students said they had breakfast. On Wednesday, only 12 students said they had breakfast. What is the average number of students who had breakfast over these three days?", 'To find the average number of students who had breakfast over these three days, we need to add up the number of students who had breakfast each day and then divide by the number of days. \n\nSo, we add 15 (from Monday) + 18 (from Tuesday) + 12 (from Wednesday) = 45 students. \n\nThen we divide 45 students by 3 days, which equals 15 students. \n\nSo, the average number of students who had breakfast over these three days is 15.'), ('def calculate_perimeter (length : ℕ) (width : ℕ) : ℕ := 2 * (length + width)\n\ndef garden_perimeter : ℕ :=\ncalculate_perimeter 10 7\n\n#eval garden_perimeter\n-- output: 34', 'Amy has a rectangular garden plot. The length of the garden is 10 meters and the width is 7 meters. What is the perimeter of the garden?', 'The perimeter of a rectangle is calculated by doubling the sum of the length and the width. In this case, the length of the garden is 10 meters and the width is 7 meters. So, the sum of the length and the width is 10 + 7 = 17 meters. Doubling this sum gives the perimeter: 2 * 17 = 34 meters. The perimeter of the garden is 34 meters.'), ('theorem diff_of_gt_is_pos : ∀ (n m : ℤ), n > m → n - m > 0 :=\nbegin\n  intros n m h,\n  apply int.sub_pos_of_lt,\n  exact h,\nend', "Let's assume there are two integers, n and m. If n is greater than m, prove that the difference between n and m is a positive integer.", 'Given that n and m are integers and n is greater than m, the difference n - m will be a positive number. This is because subtracting a smaller number from a larger number results in a positive number. Additionally, the difference of two integers is always an integer. Therefore, n - m is a positive integer.'), ('import data.real.basic\n\nnoncomputable theory\nopen_locale classical\n\n-- define the production rate function p(t)\ndef p (t : ℝ) : ℝ := 3 * t^2 + 2 * t + 1\n\n-- define the original vector [t, p(t)]\ndef v (t : ℝ) : ℕ → ℝ := λ n, if n = 0 then t else p t\n\n-- define the transformed vector Av\ndef Av (t : ℝ) : ℕ → ℝ := λ n, if n = 0 then v t 1 else v t 0\n\n-- define the transformed production quantity q(t)\ndef q (t : ℝ) : ℝ := Av t 1\n\n-- assert that the transformed production quantity at the end of 5 hours is 5\nexample : q 5 = 5 :=\nbegin\n  unfold q Av v,\n  simp,\nend', 'A company produces a product, and the rate of production is given by the function p(t) = 3t^2 + 2t + 1 items per hour, where t is the time in hours. The company starts production at t = 0. \n\nA 2x2 transformation matrix A = [[0, 1], [1, 0]] is applied to the vector [t, p(t)] at each point in time to give a new vector [p(t), t].\n\nWhat is the transformed production quantity, say q(t), at the end of 5 hours?', 'The quantity of products produced by the end of t hours is given by the integral of the production rate from 0 to t. This is because the integral of a rate function over an interval gives the net change over that interval, which in this case is the total quantity of products produced by the end of t hours.\n\nThus, the original production quantity P at the end of 5 hours is given by the integral from 0 to 5 of the function p(t) = 3t^2 + 2t + 1. \n\nThe transformed production quantity q(t) at any time t is the second component of the transformed vector [p(t), t] after applying the transformation matrix. Therefore, q(t) = t.\n\nSo, the transformed production quantity Q at the end of 5 hours is simply 5.'), ('import data.real.basic\n\ntheorem sum_of_negatives_is_negative (a b : ℝ) (ha : a > 0) (hb : b > 0) : -a + -b < 0 :=\nbegin\n  have hab : a + b > 0,\n  { exact add_pos ha hb, },\n  rw ←neg_add a b,\n  exact neg_neg_of_pos hab,\nend', 'If we have two negative numbers, -a and -b (with a, b > 0), prove that their sum, -a + -b, is also a negative number.', 'If we have two negative numbers, -a and -b, their sum is -a + -b which can be rewritten as -(a + b). Since a and b are both positive, their sum (a + b) is also positive. And the negative of a positive number is a negative number. Therefore, -(a + b) is a negative number.'), ('import data.real.basic\n\n-- First, define the equation\ndef equation (x : ℝ) : Prop := 2*(3*x - 2) = 4*(x - 3) + 6\n\n-- Now, prove the solution\nexample : ∃ x, equation x ∧ x = -1 :=\nbegin\n  use -1,\n  split,\n  { -- Proving that x = -1 is a solution to the equation\n    unfold equation,\n    norm_num, },\n  { -- Proving that x indeed equals -1\n    refl, },\nend', 'Given the algebraic equation 2(3x - 2) = 4(x - 3) + 6, find the value of x.', 'To solve for x, we first simplify the equation. On the left side, distribute the 2 to get 6x - 4. On the right side, distribute the 4 to get 4x - 12, and then add 6 to get 4x - 6. \n\nThe equation simplifies to 6x - 4 = 4x - 6.\n\nNext, isolate the x terms on one side and the constants on the other side. Subtract 4x from both sides to get 2x - 4 = -6. Then, add 4 to both sides to get 2x = -2. \n\nFinally, divide both sides by 2 to get x = -1.'), ('def add (a b : ℕ) : ℕ := a + b\n\n#eval add (add 325 258) 417 -- output is 1000', 'John has a toy collection. He has 325 cars, 258 action figures, and 417 Lego sets. How many toys does John have in total?', "We can solve this problem by summing up all of John's toys. First, we add the number of cars (325) to the number of action figures (258), which gives us a total of 583 toys. Then, we add the number of Lego sets (417) to that total, which gives us 1000 toys. So, John has 1000 toys in total."), ('import data.real.basic\n\nlemma pizza_left : (3 / 4 : ℝ) - (1 / 3 : ℝ) = 5 / 12 :=\nbegin\n  norm_num,\nend', 'Tom has 3/4 of a pizza left and he eats 1/3 of the pizza. How much of the pizza does Tom have left?', 'To solve this problem, we subtract the fraction of the pizza Tom ate (1/3) from the fraction of the pizza he had left before eating (3/4). \n\nFirst, we need to find a common denominator for these two fractions. The least common denominator for 3 and 4 is 12. \n\nSo we convert 3/4 to a fraction with 12 as the denominator. We do this by multiplying both the numerator and the denominator by 3, which gives us 9/12. \n\nNext, we convert 1/3 to a fraction with 12 as the denominator. We do this by multiplying both the numerator and the denominator by 4, which gives us 4/12.\n\nNow that the two fractions have the same denominator, we can subtract them. \n\n9/12 - 4/12 = 5/12 \n\nSo, Tom has 5/12 of the pizza left.'), ('import data.nat.basic\n\nopen nat\n\ndef num_of_apples (num_of_baskets : ℕ) (apples_per_basket : ℕ) : ℕ := \n    num_of_baskets * apples_per_basket\n\nexample : num_of_apples 5 7 = 35 :=\n    begin\n        unfold num_of_apples,\n        rw mul_comm,\n        exact rfl,\n    end', 'Alice has 5 baskets and each basket contains 7 apples. How many apples does Alice have in total?', 'We know that each basket contains 7 apples. Alice has 5 of such baskets. Therefore, we can find the total number of apples by multiplying the number of baskets by the number of apples in each basket. This gives us 5 * 7 = 35. So, Alice has 35 apples in total.'), ('import data.real.basic\n\n-- defining the sequence\ndef scores (n : ℕ) : ℝ := 70 + 3 * n\n\n-- proving the problem\nexample : scores 19 = 127 :=\nbegin\n  -- unfolding the definition of scores\n  unfold scores,\n  -- simplifying the expression\n  simp,\n  -- performing the calculation\n  norm_num,\nend', "In a high school, the Mathematics department decided to conduct a study about the progression of math scores over time. They collected the scores of a random student from Algebra 1 class and noticed a pattern: The student's scores seemed to follow a sequence where each score is 3 points higher than the previous one. The first score in the sequence was 70. Given this information, what will be the student's score on the 20th test?", "Since the scores follow a sequence where each score is 3 points higher than the previous one, this is an arithmetic sequence. The formula for an arithmetic sequence is a_n = a_1 + (n - 1)*d, where a_n is the nth term, a_1 is the first term, n is the term number, and d is the common difference.\n\nHere, a_1 = 70, d = 3, and we want to find a_20. Substituting these values into the formula, we have a_20 = 70 + (20 - 1)*3 = 70 + 57 = 127. Therefore, the student's score on the 20th test will be 127."), ('import data.real.basic\n\n-- define the problem\ndef marbles (x : ℝ) := x + 5 = 2 * x\n\n-- proof the problem\nlemma find_marbles : ∃ x, marbles x :=\nbegin\n  use 5,\n  unfold marbles,\n  linarith,\nend', 'John has a certain number of marbles. If he adds 5 to the number of marbles he has, he gets twice the number of marbles he had initially. How many marbles does John have?', 'Let\'s denote the initial number of marbles that John has as "x". According to the problem, if John adds 5 to the number of marbles he has, he gets twice the number of marbles he had initially. This can be expressed as the equation: x + 5 = 2x. To solve for x, we can subtract x from both sides of the equation, which gives us 5 = x. Therefore, John has 5 marbles.'), ('import data.real.basic\n\n-- length and width of the rectangle\ndef len := (7 : ℝ) \ndef wid := (5 : ℝ)\n\n-- actual perimeter\ndef actual_perimeter := 2 * (len + wid)\n\n-- shortage\ndef shortage := (6 : ℝ)\n\n-- planned perimeter\ndef planned_perimeter := actual_perimeter + shortage\n\nexample : planned_perimeter = 30 := \nbegin\n  unfold planned_perimeter,\n  unfold actual_perimeter,\n  unfold shortage,\n  unfold len,\n  unfold wid,\n  norm_num,\nend', 'John has a rectangular garden that is 7 meters long and 5 meters wide. He wants to build a fence around the garden. However, after buying all the materials, he realizes that he has miscalculated and now he is 6 meters short. What is the total length of the fence John initially planned to build?', "To find the perimeter of a rectangle, we add up all the sides of the rectangle. The perimeter of a rectangle is given by the formula 2*(length + width). So, the actual perimeter of John's garden would be 2*(7 + 5) = 24 meters. \n\nBut John miscalculated and he is 6 meters short. This means that he initially planned to build a fence of 24 + 6 = 30 meters long."), ('def volume (l w h : ℕ) : ℕ := l * w * h\ndef liters (v : ℕ) : ℕ := v / 1000\n\n#eval liters (volume 50 40 30)  -- output will be 60', 'John has a rectangular aquarium that measures 50 cm in length, 40 cm in width, and 30 cm in height. He needs to fill it with water. If each liter of water has a volume of 1,000 cubic centimeters, how many liters of water will John need to fill the aquarium?', 'First, we need to find the volume of the aquarium. We can do this by multiplying the length, width, and height of the aquarium. So, the volume of the aquarium is 50 cm * 40 cm * 30 cm = 60,000 cubic cm. \n\nAs 1 liter of water is equivalent to 1,000 cubic cm, we can figure out the volume of the water needed in liters by dividing the volume of the aquarium in cubic cm by 1,000. So, John will need 60,000 cubic cm / 1,000 = 60 liters of water to fill the aquarium.'), ('import data.real.basic\n\n-- defining the area of the garden\ndef garden_area := 8 * 6 -- in square feet\n\n-- defining the area required by each tulip\ndef tulip_area := 4 -- in square feet\n\n-- defining the number of tulips\ndef number_of_tulips := garden_area / tulip_area\n\nexample : number_of_tulips = 12 :=\nbegin\n  unfold number_of_tulips,\n  unfold garden_area,\n  unfold tulip_area,\n  norm_num,\nend', 'John has a rectangular garden that is 8 feet long and 6 feet wide. He plants tulips in this garden. Each tulip requires 4 square feet space. How many tulips can John plant in his garden?', 'First, we need to find out the total area of the garden. The area of a rectangle is calculated by multiplying its length by its width. So, the area of the garden is 8 feet * 6 feet = 48 square feet. \n\nSince each tulip requires 4 square feet space, the number of tulips John can plant is the total area of the garden divided by the area each tulip requires. That is, 48 square feet / 4 square feet/tulip = 12 tulips. \n\nSo, John can plant 12 tulips in his garden.'), ('import data.nat.basic\nimport init.algebra.functions\n\ndef calculate_total_apples (bags : ℕ) (apples_per_bag : ℕ) : ℕ := bags * apples_per_bag\ndef calculate_apples_per_friend (total_apples : ℕ) (friends : ℕ) : ℕ := total_apples / friends\n\ndef bags := 8\ndef apples_per_bag := 43\ndef friends := 4\ndef total_apples := calculate_total_apples bags apples_per_bag\ndef apples_per_friend := calculate_apples_per_friend total_apples friends\n\nexample : apples_per_friend = 86 := by refl', 'Jake has 8 bags of apples. Each bag contains 4 tens and 3 units of apples. Jake wants to give all his apples to his 4 friends equally. How many apples does each friend get?', 'First, we need to find out how many apples Jake has in total. Since each bag contains 4 tens and 3 units of apples, each bag contains 43 apples. So, Jake has 8 bags * 43 apples/bag = 344 apples in total. \n\nThen, Jake wants to divide these apples equally among his 4 friends. So, each friend gets 344 apples / 4 friends = 86 apples.'), ('def calculate_parts (total : ℕ) (parts : ℕ) : ℕ := total / parts\ndef calculate_students (part : ℕ) (ratio : ℕ) : ℕ := part * ratio\ndef add_students (current : ℕ) (new : ℕ) : ℕ := current + new\ndef simplify_ratio (boys : ℕ) (girls : ℕ) (divisor : ℕ) : ℕ × ℕ := (boys / divisor, girls / divisor)\n\ndef main : Prop :=\n  let total_students := 500 in\n  let boys_ratio := 3 in\n  let girls_ratio := 2 in\n  let new_girls := 50 in\n  let part := calculate_parts total_students 5 in\n  let boys := calculate_students part boys_ratio in\n  let girls := calculate_students part girls_ratio in\n  let new_girls_total := add_students girls new_girls in\n  let new_ratio := simplify_ratio boys new_girls_total 50 in\n  new_ratio = (6, 5)', 'In a school, there are a total of 500 students. The proportion of boys to girls is 3:2. If 50 new girls join the school, what will be the new ratio of boys to girls?', 'First, we need to calculate the number of boys and girls in the school. We know that the ratio of boys to girls is 3:2, so we can add these two parts together, giving us a total of 5 parts. Since we know the total number of students is 500, each part therefore consists of 500/5 = 100 students.\n\nSo, there are 3*100 = 300 boys and 2*100 = 200 girls in the school. \n\nWhen 50 new girls join the school, the number of girls becomes 200+50 = 250. \n\nThe new ratio of boys to girls is therefore 300:250, which simplifies to 6:5 when we divide both sides by 50.'), ('def pattern_value (pos : ℕ) : ℕ := 2 * pos\n\n#eval pattern_value 20 -- output: 40', 'Consider a pattern where each term is twice its position number. For example, the first term (at position 1) is 2, the second term (at position 2) is 4, and so on. What is the value of the term at position 20?', 'To find the value at the 20th position, we can use the rule of the pattern: each term is twice its position number. Therefore, the value at the 20th position is 2*20=40.'), ('import data.real.basic\n\n-- Defining the fractions as real numbers\nnoncomputable def a : ℝ := 1/2\nnoncomputable def b : ℝ := 3/4\n\n-- Proof that a*b equals 3/8\nlemma mul_fractions : a * b = 3/8 :=\nbegin\n  unfold a b,\n  norm_num\nend', 'If we multiply 1/2 by 3/4, what is the result?', 'Multiplication of fractions involves multiplying the numerators (the top numbers) together and the denominators (the bottom numbers) together. So in this case, we multiply 1 and 3 to get 3, and 2 and 4 to get 8. So the result is 3/8.'), ('example : (12 + 34) = 46 :=\nbegin\n  refl,\nend', 'Given two pairs of coordinates on a 2D coordinate plane, (1,2) and (3,4). If we use the place value of the coordinates to form two, two-digit numbers, 12 and 34, what is the sum of these two numbers?', 'To find the sum of the numbers 12 and 34, we add them together. By using the knowledge of place value, we know that 2 is in the ones place and 1 is in the tens place for the number 12. Similarly, for the number 34, 4 is in the ones place and 3 is in the tens place. \n\nWhen we add these two numbers together, we first add the ones place (2 + 4 = 6). Then, we add the tens place (1 + 3 = 4). So, the sum of 12 and 34 is 46.'), ('variables (x : ℕ) -- x is the number of apples Sarah can buy\n#check x ≤ 15 -- The maximum number of apples Sarah can buy is 15', 'Sarah has 5 apples and she plans to buy x apples from the market. If the total number of apples she will have is less than or equal to 20, what is the maximum number of apples she can buy from the market?', 'Given that Sarah already has 5 apples, the number of apples she can buy will be the total number she can have (which is 20) minus the number of apples she already has. So, x, the number of apples she can buy from the market, is equal to 20 - 5. Therefore, the maximum number of apples she can buy is 15.'), ("variables (x : ℕ) -- Tom's apples\n#check x + 5 -- John's apples", 'John has 5 more apples than Tom. If Tom has x apples, then how many apples does John have?', 'If Tom has x apples, and John has 5 more apples than Tom, we simply add 5 to whatever amount Tom has to find the number of apples John has. Therefore, John has x + 5 apples.'), ('import data.real.basic\n\n-- defining the variables\ndef water := 12\ndef water_to_lemon_juice_ratio := 4\n\n-- defining the function for the amount of lemon juice\ndef lemon_juice (water : ℕ) (ratio : ℕ) : ℕ := water / ratio\n\n-- proving the result\nexample : lemon_juice water water_to_lemon_juice_ratio = 3 :=\nbegin\n  unfold lemon_juice,\n  exact rfl,\nend', 'A recipe for lemonade calls for 4 cups of water for every 1 cup of lemon juice. If you want to make a batch of lemonade using 12 cups of water, how many cups of lemon juice do you need?', 'The ratio of water to lemon juice in the recipe is 4:1. This means that for every 4 cups of water, we need 1 cup of lemon juice. If we want to make a batch of lemonade using 12 cups of water, then we need to find out how many cups of lemon juice we need based on this ratio. Since 12 divided by 4 equals 3, we need 3 cups of lemon juice.'), ("import data.real.basic\n\nopen real\n\n-- making the definitions noncomputable as they depend on 'real.division_ring'\nnoncomputable def mike_money : ℝ := 5.64\nnoncomputable def toy_car_cost : ℝ := 2.49\n\n-- proof that Mike will have 3.15 dollars left after buying the toy car\nexample : mike_money - toy_car_cost = 3.15 :=\nbegin\n  unfold mike_money toy_car_cost,\n  norm_num,\nend", 'If Mike has 5.64 dollars and he spends 2.49 dollars on a toy car, how much money does he have left?', 'We can solve this problem by subtracting the cost of the toy car from the amount of money Mike originally had. So, \n\n5.64 - 2.49 = 3.15\n\nMike will have 3.15 dollars left.'), ('import data.real.basic\n\n-- defining the variables\nvariables (w : ℝ) -- width\n\n-- defining the theorem\ntheorem rectangle_dimensions : \n  (8 * w = 24) → (3 * w = 9) ∧ (w = 3) :=\nbegin\n  intro h1, -- introducing the hypothesis\n  split, -- splitting the goal into two\n  { -- proving the first part\n    have h2 : 8 * w = 24, from h1, -- from the hypothesis\n    have h3 : w = 3, by linarith, -- solving for w\n    rw h3, -- substituting w with 3\n    linarith, -- proving the result\n  },\n  { -- proving the second part\n    linarith, -- proving that w = 3\n  },\nend', 'Given that the length of a rectangle is 3 times its width, and the perimeter of the rectangle is 24 units. What are the dimensions (length and width) of the rectangle?', 'First, we know that the perimeter of a rectangle is calculated by the formula 2(length + width). In this problem, we know that the perimeter is 24 units. \n\nNext, we are told that the length of the rectangle is three times the width of the rectangle. Let\'s denote the width as "w". Then the length is 3w. \n\nNow, we can set up the equation according to the formula of the perimeter. So we have 2(3w + w) = 24. \n\nWe simplify the equation to 8w = 24. \n\nFinally, we solve the equation for w by dividing both sides by 8, yielding w = 3. \n\nSince the length is 3 times the width, the length is 3 * 3 = 9. \n\nTherefore, the dimensions of the rectangle are length = 9 units and width = 3 units.'), ('import data.real.basic\n\nnoncomputable def alice_money := (0.60 : ℝ)\nnoncomputable def sticker_cost := (0.15 : ℝ)\nnoncomputable def dad_gift := (25 : ℝ)\n\n-- prove the number of stickers Alice can buy\nexample : alice_money / sticker_cost = 4 := by norm_num [alice_money, sticker_cost]\n\n-- prove the total amount of money Alice has after receiving the gift\nexample : alice_money + dad_gift = 25.60 := by norm_num [alice_money, dad_gift]', "Alice has $0.60 and she wants to buy some stickers for her friends. Each sticker costs $0.15. How many stickers can Alice buy? After buying the stickers, Alice's dad gives her a two-digit number, $25, as a gift. How much money does Alice have now?", "First, to find out how many stickers Alice can buy, we need to divide the total amount of money she has by the cost of a single sticker. So, $0.60 ÷ $0.15 = 4. Therefore, Alice can buy 4 stickers.\n\nSecond, Alice's dad gives her $25. Now we need to add the $25 Alice's dad gave her to the $0.60 she originally had, which equals $25.60."), ('import data.nat.basic\n\ntheorem mul_one_eq_self (a : ℕ) : a * 1 = a :=\nbegin\n  rw nat.mul_one,\nend', 'Prove that for any natural number a, a * 1 = a.', 'Multiplication by 1 is also known as the identity property of multiplication. In mathematics, the identity property says that the number stays the same. Any number times 1 is the original number. So, for any natural number a, when we multiply it by 1 we will get the same number a. This is based on the definition of multiplication in mathematics.'), ('import data.real.basic\n\n-- Defining the inequalities\ndef ineq1 (x y : ℝ) : Prop := 2*x + 3*y ≥ 6\ndef ineq2 (x y : ℝ) : Prop := 4*x - y ≤ 2\n\n-- Proving the solution\nexample : ineq1 0 2 ∧ ineq2 0 2 :=\nbegin\n  split,\n  -- Proving the first inequality\n  { unfold ineq1,\n    norm_num, },\n  -- Proving the second inequality\n  { unfold ineq2,\n    norm_num, },\nend', 'Given a system of linear inequalities:\n\n1. 2x + 3y ≥ 6\n2. 4x - y ≤ 2\n\nFind a pair of values (x, y) that satisfies both inequalities.', 'To solve this system of inequalities, we can use the method of substitution or addition/subtraction. However, graphical method is the simplest in this case. \n\nFirst, we graph both inequalities on the same set of axes. The feasible region is the area where the regions for both inequalities overlap. \n\nFor the first inequality 2x + 3y ≥ 6, the boundary line is 2x + 3y = 6 and y = (6 - 2x) / 3. All the points above and on this line are the solutions. \n\nFor the second inequality 4x - y ≤ 2, the boundary line is 4x - y = 2 and y = 4x - 2. All the points below and on this line are the solutions. \n\nBy observing the graph, we see that the feasible region is a wedge-shaped area between the two lines. We can pick any point in this area as a solution. For example, the point (0, 2) is in the feasible region. Substituting x = 0 and y = 2 into both inequalities, we see that they are both satisfied. \n\nTherefore, the pair of values (x, y) = (0, 2) satisfies both inequalities.'), ('import data.nat.basic\n\nopen nat\n\n-- Defining the problem\ndef toy_cars := 100\ndef small_boxes := 10\ndef larger_boxes := toy_cars / small_boxes\n\n-- Proving the solution\nexample : larger_boxes = 10 :=\nbegin\n  unfold larger_boxes,\n  exact (nat.div_eq_of_eq_mul_right (dec_trivial) (eq.symm (mul_comm small_boxes 10)))\nend', 'John has 100 toy cars. Each toy car is packed in a box. If he places 10 boxes into a larger box, how many larger boxes would he need to pack all his toy cars?', 'Since John is packing 10 boxes into each larger box, he would need 100 (the total number of toy cars) divided by 10 (the number of boxes he can fit into each larger box), which equals to 10. Therefore, John would need 10 larger boxes to pack all his toy cars.'), ('import data.real.basic\n\nnoncomputable def quarters (money : ℝ) : ℝ := money / 0.25\n\nlemma num_of_quarters (money : ℝ) (h : money = 3.25) : quarters money = 13 :=\nbegin\n  have h1 : money = 3.25, from h,\n  unfold quarters,\n  rw h1,\n  norm_num,\nend', 'John has $3.25 in quarters. How many quarters does he have?', 'A quarter is worth 25 cents, or $0.25. If John has $3.25, we can figure out how many quarters he has by dividing the total amount of money he has ($3.25) by the value of one quarter ($0.25). So, $3.25 divided by $0.25 equals 13. Therefore, John has 13 quarters.'), ('import data.real.basic\n\ntheorem associative_add {a b c : ℝ} : (a + b) + c = a + (b + c) :=\nbegin\n    rw add_assoc,\nend', 'If a, b, and c are any real numbers, prove that the equation `(a+b) + c = a + (b+c)` is always true.', "This is a classic example of the associative property of addition in mathematics. According to the associative property, the way in which numbers are grouped does not change their sum. So, when you have three numbers, it doesn't matter how they are grouped, the sum will always be the same. Therefore, the equation `(a+b) + c = a + (b+c)` holds true for all real numbers a, b, and c."), ("import algebra.module.basic\nimport data.real.basic\n\nvariables (V : Type*) [add_comm_group V] [module ℝ V]\nvariables (v w : V) (c : ℝ)\n\ntheorem eq_or_zero (h : c • v = c • w) : v = w ∨ c = 0 :=\nbegin\n  by_cases hc : c = 0,\n  { right,\n    exact hc },\n  { left,\n    have h' : c⁻¹ • (c • v) = c⁻¹ • (c • w),\n    { rw h },\n    rw [smul_smul, smul_smul, inv_mul_cancel hc, one_smul, one_smul] at h',\n    exact h' }\nend", "Let's suppose we have two vectors v and w in the vector space V over the real numbers ℝ. If we have a scalar, a real number c, and the scalar multiplication of c and v equals the scalar multiplication of c and w (i.e., c*v = c*w), then prove that v = w or c = 0.", 'If c is not equal to zero, we can multiply both sides of the equation c*v = c*w by the inverse of c, which is 1/c. This gives us (1/c)*(c*v) = (1/c)*(c*w). Simplifying, we get v = w.\n\nIf c is equal to zero, then the equation c*v = c*w simplifies to 0 = 0, which is always true, but does not necessarily mean that v = w. So, the only time c*v = c*w when v is not equal to w is when c is equal to zero.'), ('import data.nat.basic\n\nopen nat\n\ndef marbles := 94\ndef received := 6\ndef lost := 37\n\nexample : (marbles + received) - lost = 63 :=\nbegin\n  have h1 : marbles + received = 100, by {simp [marbles, received]},\n  rw h1,\n  have h2 : 100 - lost = 63, by {simp [lost]},\n  rw h2\nend', 'John has 94 marbles, and he receives 6 more from his friend. However, he loses 37 marbles on his way home. How many marbles does John have now?', 'First, we add the 94 marbles that John originally had to the 6 marbles he received from his friend. That gives us a total of 100 marbles. Then, we subtract the 37 marbles that John lost from the 100 marbles. This leaves us with 63 marbles. So, John has 63 marbles now.'), ('def calculate_total_revenue : ℕ :=\nlet small_pizza_price := 10 in\nlet large_pizza_price := 15 in\nlet small_pizzas_sold := 150 + 180 in\nlet large_pizzas_sold := 200 + 220 in\n(small_pizzas_sold * small_pizza_price) + (large_pizzas_sold * large_pizza_price)\n\n#eval calculate_total_revenue  -- output is 9600', 'There is a pizza shop which sells two types of pizzas: small and large. The shop sold 150 small pizzas and 200 large pizzas in January, and 180 small pizzas and 220 large pizzas in February. If each small pizza costs $10 and each large pizza costs $15, calculate the total revenue of the shop for January and February.', 'The total number of small pizzas sold in both months is 150 + 180 = 330. The total number of large pizzas sold in both months is 200 + 220 = 420. The total revenue from small pizzas is 330 * $10 = $3300. The total revenue from large pizzas is 420 * $15 = $6300. Therefore, the total revenue of the shop for January and February is $3300 + $6300 = $9600.'), ('import data.real.basic\n\n-- Define the problem\ndef J := 20\ndef lisa_candies := 2*J\ndef jim_candies_after := J + 10\ndef lisa_candies_after := lisa_candies - 10\n\n-- Prove that the numbers of candies are equal after the exchange\nexample : jim_candies_after = lisa_candies_after :=\nbegin\n  unfold jim_candies_after lisa_candies_after lisa_candies J,\n  exact dec_trivial,\nend\n\n-- Prove that Jim has 20 candies\nexample : J = 20 :=\nbegin\n  unfold J,\nend\n\n-- Prove that Lisa has 40 candies\nexample : lisa_candies = 40 :=\nbegin\n  unfold lisa_candies J,\n  exact dec_trivial,\nend', 'Lisa has twice as many candies as her brother, Jim. If Lisa gives 10 candies to Jim, they will have an equal number of candies. How many candies does each of them have?', "Let's denote the number of candies Jim has as J. According to the problem, Lisa has 2J candies. When Lisa gives 10 candies to Jim, they will have the same number of candies, which means J+10 equals 2J-10. Solving this equation for J, we get J equals 20. Therefore, Jim has 20 candies and Lisa has twice that amount, 40 candies."), ('-- As Lean 3 does not directly support calculus operations, we cannot formalize this proof using Lean 3. \n-- A formal proof for this problem would likely require the use of a computer algebra system or a theorem prover with built-in support for calculus.', 'Given a first-order differential equation dy/dx + 3y = 6, where y(0) = 1, find the solution for y.', 'First, we recognize this as a linear ordinary differential equation. The general solution to this type of equation is y = (1/I)* ∫ (I*f(x)) dx + C, where I is the integrating factor e^(∫p(x) dx), p(x) is the coefficient of y in the differential equation, and f(x) is the function on the right side of the equation.\n\nHere, p(x) is 3 and f(x) is 6. Hence, the integrating factor, I = e^(∫3 dx) = e^(3x).\n\nSubstituting into the general solution, we get y = (1/e^(3x))* ∫ (e^(3x)*6) dx + C.\n\nThis simplifies to y = 2e^(3x) + C/e^(3x). Now, to find the constant C, we use the initial condition y(0) = 1. Substituting, we get 1 = 2 + C, which gives C = -1.\n\nHence, the solution to the differential equation is y = 2e^(3x) - 1/e^(3x).'), ('import data.real.basic\n\n-- defining the variables\ndef length := (10 : ℝ) -- length of the garden in feet\ndef width := (5 : ℝ) -- width of the garden in feet\ndef cost_per_foot := (2 : ℝ) -- cost of the fence per foot in dollars\n\n-- defining the function for the perimeter of a rectangle\ndef perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- defining the function for the cost of the fence\ndef fence_cost (perimeter cost_per_foot : ℝ) : ℝ := perimeter * cost_per_foot\n\n-- calculating the perimeter of the garden\ndef garden_perimeter := perimeter length width\n\n-- calculating the cost of the fence\ndef total_cost := fence_cost garden_perimeter cost_per_foot\n\n-- proving that the total cost of the fence is 60 dollars\nexample : total_cost = 60 :=\nbegin\n  unfold total_cost,\n  unfold fence_cost,\n  unfold garden_perimeter,\n  unfold perimeter,\n  rw [length, width, cost_per_foot],\n  norm_num,\nend', 'Johnny has a rectangular garden that is 10 feet long and 5 feet wide. He wants to build a fence around it. If one foot of fence costs $2, how much will he need to spend on the fence?', 'First, we need to find the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2 * (length + width). Plugging in the given, we get 2 * (10 + 5) = 30 feet. Since each foot of the fence costs $2, the total cost of the fence will be 30 * $2 = $60.'), ('import data.real.basic\n\n-- defining the polynomials P and Q\ndef P (x : ℝ) := 3 * x^3 - 2 * x^2 + x - 5\ndef Q (x : ℝ) := x^2 - 4 * x + 4\n\n-- defining the function R\nnoncomputable def R (x : ℝ) := P(x) / Q(x)\n\n-- checking the values of P(2) and Q(2)\n#eval P 2 -- gives 13\n#eval Q 2 -- gives 0\n\n-- The value of R(2) is undefined because it involves division by zero.', "Let's say we have two polynomial expressions: P(x) = 3x^3 - 2x^2 + x - 5 and Q(x) = x^2 - 4x + 4. Let's define a rational function R(x) = P(x) / Q(x). What is the value of R(2)?", 'The first step is to substitute x = 2 into P(x) and Q(x). \n\nFor P(x), we get P(2) = 3 * 2^3 - 2 * 2^2 + 2 - 5 = 24 - 8 + 2 - 5 = 13. \n\nFor Q(x), we get Q(2) = 2^2 - 4 * 2 + 4 = 4 - 8 + 4 = 0. \n\nGiven that Q(2) = 0, we cannot calculate R(2) because it leads to division by zero which is undefined in standard arithmetic.'), ('import data.real.basic\n\n-- proof\nexample : (2^5 : ℝ) = 32 :=\nbegin\n  norm_num,\nend', 'If the logarithm base 2 of a number x equals 5, what is the number x?', 'The logarithm equation in the problem can be written as log2(x) = 5. When we have an equation of this form, we can rewrite it in exponential form. The base of the logarithm becomes the base of the power, the right side of the equation becomes the exponent, and x is the result of this operation. Therefore, the exponential form of the equation is 2^5 = x. By calculating 2^5, we get 32. So, the number x is 32.'), ('open nat\n\ndef divide (m n : ℕ) : ℕ := m / n\n\ndef apples_for_each_friend : ℕ := divide 24 6\n\n#eval apples_for_each_friend -- output: 4', 'Amy has 24 apples. She wants to divide them equally among her 6 friends. How many apples does each friend get?', 'Amy has 24 apples and she wants to divide them equally among 6 friends. To find out how many apples each friend will get, we can divide the total number of apples by the number of friends. So, we divide 24 by 6. The result is 4. Therefore, each friend will get 4 apples.'), ('theorem add_subtract_same : ∀ (a b : ℕ), (a + b) - b = a :=\nbegin\n  intros a b,\n  exact nat.add_sub_cancel a b,\nend', 'Given two positive integers a and b, prove that the sum of a and b subtracted by b equals a.', "Assume we have two positive integers, a and b. If we sum these two numbers together, we get a + b. If we then subtract b from this sum, we're essentially removing the b we added in the first place, so we're left with the original a. Thus, (a + b) - b = a."), ('import data.real.basic\n\n-- Define the problem\ndef problem (x : ℝ) : Prop := 3*x - 7 = -10\n\n-- Prove the solution\nexample : ∃ x, problem x :=\nbegin\n  use -1,\n  unfold problem,\n  norm_num,\nend', 'If x is a number such that 3x - 7 = -10, what is the value of x?', 'To find the value of x, we need to solve the equation 3x - 7 = -10 for x. First, we add 7 to both sides of the equation to isolate the term with x, which gives us 3x = -3. Then, we divide both sides by 3, and we get x = -1.'), ("import data.real.basic\n\nnoncomputable theory\nopen_locale classical\n\n-- Define the function f(x) = x^3\ndef f (x : ℝ) : ℝ := x^3\n\n-- Define the derivative of the function f(x) = x^3\ndef f' (x : ℝ) : ℝ := 3*x^2\n\n-- Proof that f'(2) = 12\nexample : f' 2 = 12 :=\nbegin\n  unfold f',\n  norm_num,\nend", "Let's consider a function f(x) = x^3. Find the derivative of the function at x = 2 and interpret its meaning in a real-life context where the function signifies the volume of a cube with side length x.", "The derivative of a function at a particular point provides the rate of change of the function at that point. In this example, the function f(x) = x^3 is the volume of a cube with side length x. Its derivative, f'(x) = 3x^2, gives the rate at which the volume of the cube changes with respect to its side length. \n\nTo find the derivative at x = 2, we plug x = 2 into the derivative equation: f'(2) = 3(2)^2 = 12. This means that if we increase the side length of the cube from 2 to 2 + h (where h is a very small amount), the volume of the cube will increase approximately 12h. \n\nIn a real-life context, if we are increasing the side length of the cube by a small amount, the derivative (12) tells us how quickly the volume of the cube is increasing per unit increase in the side length."), ('def distance (speed : ℕ) (time : ℕ) : ℕ := speed * time\n\ndef john_distance : ℕ := distance 5 10\ndef mary_distance : ℕ := distance 3 10\n\ndef john_ahead : ℕ := john_distance - mary_distance\n\n#eval john_ahead  -- returns 20', 'John and Mary are running on a straight track. John runs at a speed of 5 meters per second and Mary runs at a speed of 3 meters per second. They start running at the same time from the same starting point. After 10 seconds, how far ahead is John from Mary?', 'First, we need to calculate how far John and Mary each run in 10 seconds. The distance traveled is given by the formula `distance = speed × time`.\n\nFor John, the distance is `5 meters/second × 10 seconds = 50 meters`.\nFor Mary, the distance is `3 meters/second × 10 seconds = 30 meters`.\n\nThe difference in distances gives us how far ahead John is from Mary, which is `50 meters - 30 meters = 20 meters`.'), ('-- Definitions of length and width\ndef length := 10\ndef width := 6\n\n-- Calculate the area of the rectangle\ndef area := length * width\n\n-- Check the area of the rectangle\n#eval area -- This will output 60', 'In a rectangular room, the length is 10 feet and the width is 6 feet. What is the area of the floor in the room?', 'The area of a rectangle is calculated by multiplying the length by the width. Given that the length is 10 feet and the width is 6 feet, we multiply these together to get the area. Therefore, the area of the floor in the room is 10 feet * 6 feet = 60 square feet.'), ('import data.nat.basic\n\n-- declare variables\ndef books_on_shelf : ℕ := 325\ndef books_to_buy : ℕ := 200\ndef bookshelf_capacity : ℕ := 1000\n\n-- prove the problem\nexample : bookshelf_capacity - (books_on_shelf + books_to_buy) = 475 :=\nbegin\n  -- add the number of books on the shelf and to buy\n  have h₁ : books_on_shelf + books_to_buy = 525, by {simp [books_on_shelf, books_to_buy]}, \n  -- subtract total books from bookshelf capacity\n  rw h₁,\n  -- simplify to get the result\n  refl,\nend', 'Sally has a bookshelf that can hold 1,000 books. She currently has 325 books on the shelf. If she buys 200 more books, how many more books can she put on the shelf before it is full?', "First, we need to add the number of books Sally currently has to the number of books she is planning to buy. So, 325 (current books) + 200 (new books) = 525 books in total. Then, we subtract this total from the bookshelf's capacity to find out how many more books Sally can add. So, 1,000 (capacity) - 525 (total books) = 475 books. Therefore, Sally can add 475 more books to her bookshelf before it is full."), ('import data.real.basic\n\nvariables (p q : real)\n\n-- Define the revenue function R(p, q)\ndef R : real × real → real :=\nλ x, 10*x.1^2*x.2 - 5*x.1*x.2^2 + 3*x.1 + 4*x.2\n\n-- Define the partial derivatives of R with respect to p and q\ndef DpR : real × real → real :=\nλ x, 20*x.1*x.2 - 5*x.2^2 + 3\n\ndef DqR : real × real → real :=\nλ x, 10*x.1^2 - 10*x.1*x.2 + 4\n\n-- Compute the total differential of R\ndef total_differential : real × real → real × real → real :=\nλ x dx, DpR x * dx.1 + DqR x * dx.2', 'Suppose the revenue of a company, R, is a function of the price of a product, p, and the number of units sold, q. The relationship is given by the following polynomial equation: \n\nR(p, q) = 10p^2q - 5pq^2 + 3p + 4q.\n\nThe company wants to know how much the revenue will change if the price is increased by a small amount (dp) and the quantity is also increased by a small amount (dq). What is the total differential of R?', 'To find the total differential of R, we first need to take the partial derivatives of R with respect to p and q.\n\nThe partial derivative of R with respect to p is:\n\n∂R/∂p = 20pq - 5q^2 + 3.\n\nAnd the partial derivative of R with respect to q is:\n\n∂R/∂q = 10p^2 - 10pq + 4.\n\nThe total differential of R (dR) is then given by:\n\ndR = (∂R/∂p) dp + (∂R/∂q) dq.\n\nSubstituting the expressions for the partial derivatives, we get:\n\ndR = (20pq - 5q^2 + 3) dp + (10p^2 - 10pq + 4) dq.'), ('open nat \n\n-- defining the variables\ndef box_of_pencils := 10\ndef boxes := 3\ndef pencils_given := 7\n\n-- calculating the total number of pencils John has\ndef total_pencils := boxes * box_of_pencils \n\n-- calculating the number of pencils left after giving some to his friend\ndef pencils_left := total_pencils - pencils_given\n\n-- proof that John has 23 pencils left\nexample : pencils_left = 23 :=\nbegin\n  unfold pencils_left,  -- unfolds the definition of pencils_left\n  unfold total_pencils, -- unfolds the definition of total_pencils\n  refl,                 -- reflexivity since both sides of the equation are identical\nend', 'John has 3 boxes of pencils. Each box contains 10 pencils. He gave 7 pencils to his friend. How many pencils does John have left?', 'First, we need to calculate the total number of pencils John has. Since each box contains 10 pencils, and he has 3 boxes, John has 3 * 10 = 30 pencils. Then, we subtract the number of pencils he gave to his friend from the total number of pencils he had. So, John has 30 - 7 = 23 pencils left.'), ('import data.real.basic\n\n-- define the function f(x) = 2x^2 + 3x - 5\ndef f (x : ℝ) := 2 * x^2 + 3 * x - 5\n\n-- define the derivative of the function f(x)\ndef df (x : ℝ) := 4 * x + 3\n\n-- proof that the derivative of f at x = 2 is 11\nexample : df 2 = 11 :=\nbegin\n  unfold df, -- unfold the definition of df\n  norm_num, -- simplify the arithmetic\nend', 'Consider a function f(x) = 2x^2 + 3x - 5. Find the derivative of the function at x = 2.', "First, we need to find the derivative of the function f(x) = 2x^2 + 3x - 5. \n\nThe derivative of a function, often written as f'(x) or df/dx, measures how the function changes as the variable changes. \n\nThe derivative of a constant is zero. The derivative of a linear function ax is a. The derivative of ax^n where n ≠ 1 is nax^(n-1). \n\nApplying these rules to the function f(x), we get:\n\nf'(x) = 2*2x^(2-1) + 3*1x^(1-1) - 0 = 4x + 3.\n\nNow, we substitute x = 2 into the derivative function to get the derivative at x = 2.\n\nf'(2) = 4*2 + 3 = 11.\n\nSo, the derivative of the function f(x) = 2x^2 + 3x - 5 at x = 2 is 11."), ('import data.real.basic\n\n-- define the data in the two-way table\ndef total_students := 270\ndef total_visual := 160\ndef total_freshman := 120\ndef freshman_auditory := 45\n\n-- calculate the probabilities\ndef probability_visual := total_visual / total_students\ndef probability_freshman_auditory := freshman_auditory / total_freshman\n\n-- check that the calculated probabilities match the expected values\nexample : probability_visual = 160 / 270 := by refl\nexample : probability_freshman_auditory = 45 / 120 := by refl', 'The statistics department at a high school collected data on the preferred learning style (visual or auditory) of students in the freshman and sophomore classes. The data is represented in the following two-way table:\n\n|           | Visual | Auditory | Total |\n|-----------|--------|----------|-------|\n| Freshman  |   75   |    45    |  120  |\n| Sophomore |   85   |    65    |  150  |\n| Total     |  160   |   110    |  270  |\n\n1. What is the probability that a randomly selected student prefers visual learning?\n2. Given that a student is a freshman, what is the probability that they prefer auditory learning?', '1. The probability that a randomly selected student prefers visual learning can be determined by dividing the total number of students who prefer visual learning by the total number of students. From the table, we can see that the total number of students who prefer visual learning is 160, and the total number of students is 270. So, the probability that a randomly selected student prefers visual learning is 160/270, which simplifies to approximately 0.59 or 59%.\n\n2. Given that a student is a freshman, the probability that they prefer auditory learning can be determined by dividing the total number of freshmen who prefer auditory learning by the total number of freshmen. From the table, we can see that the total number of freshmen who prefer auditory learning is 45, and the total number of freshmen is 120. So, the probability that a freshman prefers auditory learning is 45/120, which simplifies to approximately 0.375 or 37.5%.'), ('open nat\n\n-- define a function for dozens to apples\ndef dozens_to_apples (dozens : ℕ) : ℕ := dozens * 12\n\n-- define a function for bags to apples\ndef bags_to_apples (bags : ℕ) : ℕ := bags * (dozens_to_apples 3)\n\n-- calculate the total number of apples Sally has\n#eval bags_to_apples 4  -- output is 144', 'Sally has 4 bags of apples. Each bag contains 3 dozens of apples. How many apples does Sally have in total?', 'First, we need to understand that 1 dozen equals 12. Therefore, each bag contains 3 dozens, which is 3 * 12 = 36 apples. Since Sally has 4 bags, the total number of apples she has is 4 * 36 = 144 apples.'), ('import data.nat.basic\n\nopen nat\n\ndef numberOfSeeds (apples : ℕ) (seeds : ℕ) : ℕ := apples * seeds\n\nexample : numberOfSeeds 7 8 = 56 := by refl', 'Sally has 7 apples. Each apple has 8 seeds inside. How many apple seeds does Sally have in total?', 'To find out the total number of apple seeds Sally has, we need to multiply the number of apples Sally has by the number of seeds each apple contains. So, we multiply 7 (the number of apples) by 8 (the number of seeds in each apple), which equals 56. Therefore, Sally has 56 apple seeds in total.'), ('import data.real.basic\n\n-- definitions\ndef rectangle_length : ℝ := 10\ndef rectangle_width : ℝ := 5\n\n-- theorem\ntheorem rectangle_area : rectangle_length * rectangle_width = 50 :=\nbegin\n  rw [rectangle_length, rectangle_width],\n  norm_num,\nend', 'If a rectangle has a length of 10 units and a width of 5 units, what is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. So, if the length is 10 units and the width is 5 units, then the area is 10 units * 5 units = 50 square units.'), ('import data.real.basic\n\nopen_locale classical\n\n-- Declare the variables used in the problem\nvariables (a b c : ℝ)\n\n-- State the problem\ntheorem problem : a = 2/3 ∧ b = 3/4 ∧ c = 5/6 → a + b - c = 7/12 :=\nbegin\n  -- Start the proof\n  intros h,\n  -- Destruct the conjunction\n  cases h with h1 h2,\n  cases h2 with h2 h3,\n  -- Simplify the goal using the values of a, b, and c\n  rw h1, rw h2, rw h3,\n  -- Simplify the goal using the values of the fractions\n  norm_num,\nend', 'If we have three fractions 2/3, 3/4, and 5/6, what is the sum of the first two fractions subtracted by the third fraction?', 'First, we calculate the sum of the first two fractions, 2/3 and 3/4. To do this, we need to find a common denominator, which in this case is 12. We then convert both fractions into equivalent fractions with the denominator of 12, getting 8/12 and 9/12. Adding these together gives us 17/12, which is equal to 1 and 5/12.\n\nNext, we subtract the third fraction, 5/6, from our result. To subtract fractions, we also need a common denominator. The common denominator for 5/12 and 5/6 is 12. We convert 5/6 to 10/12. Now we can subtract: 17/12 - 10/12 = 7/12. So the sum of the first two fractions subtracted by the third fraction is 7/12.'), ('import data.real.basic\n\nopen_locale classical\n\n-- defining the problem \nnoncomputable def num_pieces (total_length : ℝ) (piece_length : ℝ) : ℝ := total_length / piece_length \n\n-- proving the solution\nexample : num_pieces 1.5 0.3 = 5 :=\nbegin\n  unfold num_pieces,\n  norm_num,\nend', 'Sophia has 1.5 meters of ribbon and she needs to cut it into pieces, each of which is 0.3 meter long. How many pieces of ribbon can Sophia get?', 'To find out how many 0.3 meter pieces Sophia can get from 1.5 meters of ribbon, we need to divide 1.5 by 0.3. Doing this division gives us the answer of 5. Therefore, Sophia can get 5 pieces of ribbon.'), ('import data.real.basic\n\ndef will_fit (picture_length picture_width frame_length frame_width : ℝ) : Prop :=\n  picture_length ≤ frame_length ∧ picture_width ≤ frame_width\n\n#check will_fit -- will_fit : ℝ → ℝ → ℝ → ℝ → Prop\n\n#eval will_fit 10 8 10.5 8.5 -- true', 'Sarah bought a rectangular picture frame that is 10.5 inches long and 8.5 inches wide. She also bought a rectangular picture that is 10 inches long and 8 inches wide. Will the picture fit the frame perfectly?', 'To check if the picture will fit the frame perfectly, we need to compare the dimensions of the picture and the frame. The length of the picture is 10 inches, which is less than the length of the frame, 10.5 inches. The width of the picture is 8 inches, which is also less than the width of the frame, 8.5 inches. Therefore, the picture will fit the frame perfectly.'), ('theorem mul_comm (x y : ℕ) : x * y = y * x :=\nbegin\n  rw nat.mul_comm,\nend', 'If we have two positive integers, x and y, and we multiply them together, will the product be the same if we reverse the order of multiplication? That is, is x * y = y * x?', 'Yes, the product of two numbers remains the same regardless of the order of multiplication. This is due to the commutative property of multiplication, which states that the order in which numbers are multiplied does not change the result.'), ("import data.real.basic\n\n-- The initial velocity and height are given.\ndef v0 : ℝ := 64\ndef h0 : ℝ := 6\n\n-- The height function is defined.\ndef h (t : ℝ) : ℝ := -16*t^2 + v0*t + h0\n\n-- The derivative of the height function gives the velocity.\ndef h' (t : ℝ) : ℝ := -32*t + v0\n\n-- The maximum height is reached when the velocity is zero, so solve h'(t) = 0.\nnoncomputable def max_height_time : ℝ := -v0 / (2 * -16)\n\n-- Now we prove that the maximum height is reached after 2 seconds.\nexample : max_height_time = 2 :=\nbegin\n  unfold max_height_time,\n  rw v0,\n  norm_num,\nend", 'The height of a ball thrown in the air is modeled by a quadratic equation h(t) = -16t^2 + v0t + h0, where h(t) is the height at time t, v0 is the initial velocity (in feet per second), and h0 is the initial height (in feet). If a ball is thrown upwards with an initial velocity of 64 feet per second from a height of 6 feet, after how many seconds will the ball reach its maximum height?', "The maximum height of a parabolic path (such as the one described by the quadratic equation for the ball's height) is reached at the vertex of the parabola. For a quadratic equation in the form y = ax^2 + bx + c, the x-coordinate of the vertex is given by -b/(2a). \n\nIn this problem, a is -16, b is the initial velocity v0, and c is the initial height h0. \n\nSubstituting the given values, the time t at which the ball reaches its maximum height is -v0/(2*-16) = -64/(2*-16) = 2 seconds."), ('import data.real.basic\n\nopen_locale classical\n\n-- Declare the variables used\nvariables (garden_length garden_width flowerbed_length flowerbed_width : ℝ)\n\n-- The area of a rectangle is length times width\ndef rectangle_area (length width : ℝ) : ℝ := length * width\n\n-- The area not covered by the flower bed is the area of the garden minus the area of the flower bed\ndef uncovered_area (garden_length garden_width flowerbed_length flowerbed_width : ℝ) : ℝ :=\nrectangle_area garden_length garden_width - rectangle_area flowerbed_length flowerbed_width\n\n-- Substituting the given values\ndef problem : ℝ := uncovered_area 10 7 4 3\n\n-- The area of the garden not covered by the flower bed is 58 square meters\nexample : problem = 58 :=\nbegin\n  unfold problem,\n  unfold uncovered_area,\n  unfold rectangle_area,\n  norm_num,\nend', 'A rectangular garden has a length of 10 meters and a width of 7 meters. A rectangular flower bed is located in the center of the garden. The flower bed has a length of 4 meters and a width of 3 meters. What is the area of the garden not covered by the flower bed?', 'To find the area of the garden not covered by the flower bed, we can first find the total area of the garden and then subtract the area of the flower bed. The total area of the garden is found by multiplying the length times the width (10m * 7m), which equals 70 square meters. The area of the flower bed is found by multiplying its length times its width (4m * 3m), which equals 12 square meters. Subtracting the area of the flower bed from the total area of the garden (70 sq m - 12 sq m), we find that the area of the garden not covered by the flower bed is 58 square meters.'), ('import data.real.basic\n\n-- defining the variables\ndef percentage_read : ℝ := 45\ndef total_pages : ℝ := 400\n\n-- defining the function to calculate the number of pages read\nnoncomputable def pages_read (percentage_read total_pages : ℝ) : ℝ := \n  (percentage_read / 100) * total_pages\n\n-- theorem to calculate the number of pages read\ntheorem pages_read_correct : pages_read percentage_read total_pages = 180 :=\nbegin\n  unfold pages_read,\n  rw [percentage_read, total_pages],\n  norm_num,\nend', 'Sarah bought a new book and she has read 45% of the book. If the book has 400 pages, how many pages has Sarah read?', 'To find the number of pages that Sarah has read, we need to calculate 45% of the total pages. We know that the total pages are 400. So, 45% of 400 = 0.45 * 400 = 180. Hence, Sarah has read 180 pages.'), ('def calculate_discount (original_price : ℕ) (discount : ℕ) : ℕ := \n  original_price - (original_price * discount / 100)\n\ndef x := calculate_discount 60 20\n#eval x  -- outputs 48\n\ndef y := calculate_discount 60 25\n#eval y  -- outputs 45', 'Given that a dress originally costs $60. If it is on sale for 20% off, then the final price after discount is $x. On the other hand, if it is on sale for 25% off, then the final price after discount is $y. Find the values of $x and $y.', 'To find the discounted price of the dress, we need to calculate the discount amount and subtract it from the original price. \n\n1. For the 20% discount, we calculate 20% of $60, which is $12. So, the final price after the 20% discount is $60 - $12 = $48. Therefore, $x = $48.\n\n2. For the 25% discount, we calculate 25% of $60, which is $15. So, the final price after the 25% discount is $60 - $15 = $45. Therefore, $y = $45.'), ("import data.real.basic\n\n-- Let's define the length and width of the garden\ndef garden_length : ℝ := 8\ndef garden_width : ℝ := 3\n\n-- Calculate the area\ndef garden_area : ℝ := garden_length * garden_width\n\n-- Prove that the area is 24\nexample : garden_area = 24 :=\nbegin\n    unfold garden_area, -- Expand the definition of garden_area\n    unfold garden_length, -- Expand the definition of garden_length\n    unfold garden_width, -- Expand the definition of garden_width\n    norm_num, -- Do the multiplication\nend", 'John is building a rectangular garden. He knows that the length of the garden is 8 feet and the width is 3 feet. What is the area of the garden?', 'The area of a rectangle is calculated by multiplying the length by the width. So, to find the area of the garden, we need to multiply the length (8 feet) by the width (3 feet). This gives us 8 * 3 = 24 square feet. So, the area of the garden is 24 square feet.'), ('import data.real.basic -- Importing the real numbers\n\nvariables (l w : ℝ) -- length and width of the rectangles\n\ndef rectangle_area (l w : ℝ) : ℝ :=\n  l * w -- The area of a rectangle is length times width\n\ntheorem same_dimensions_same_area :\n  ∀ l w : ℝ, rectangle_area l w = rectangle_area l w :=\nbegin\n  intros, -- Introducing the length and width\n  refl, -- The reflexivity of equality states that any object is equal to itself\nend', 'If two rectangles have the same length and width, do they have the same area?', 'Yes, two rectangles with the same length and width will have the same area. This is because the area of a rectangle is calculated by multiplying the length by the width. If these two values are the same for both rectangles, then the area will be the same.'), ('import data.real.basic\n\ndef scores (x : ℝ) : ℝ := 2*x + 1\n\n#eval scores 60\n-- output: 121', 'A high school teacher collected the test scores of his students in Math and English. He noticed a positive correlation between the two sets of scores. He plotted a scatterplot with Math scores on the x-axis and English scores on the y-axis. The scatterplot shows a line of best fit given by the equation y = 2x + 1. If a student scored 60 in Math, what will be the expected score in English according to the line of best fit?', 'To find the expected score in English, we need to substitute the Math score into the equation of the line of best fit. The equation is y = 2x + 1. If we substitute x = 60 into this equation, we get:\n\ny = 2*(60) + 1\ny = 120 + 1\ny = 121\n\nTherefore, the student who scored 60 in Math is expected to score 121 in English according to the line of best fit.'), ('import data.int.basic\n\nopen int\n\n-- define the initial position\ndef initial_position : ℤ := 0\n\n-- define the moves\ndef move_left : ℤ := -3\ndef move_right : ℤ := 2\n\n-- calculate the position after the first move\ndef position_after_first_move := initial_position + move_left\n\n-- calculate the position after the second move\ndef position_after_second_move := position_after_first_move + move_right\n\n#eval position_after_second_move -- output will be -1', "John and his friends are playing a game in which they are moving pieces on a number line. Initially, all pieces are at position 0. In each turn, a player can either move a piece 2 places to the right or 3 places to the left. After the first turn, John's piece is at position -3. In the second turn, he moves 2 places to the right. What is the position of John's piece after the second turn?", "In the first turn, John moves his piece 3 places to the left, so the position of the piece is at -3. In the second turn, he moves 2 places to the right, which means he adds 2 to his current position. Therefore, the position of John's piece after the second turn is -3 + 2 = -1."), ('import data.real.basic\n\n-- Let the original price of the book be $100\ndef original_price : ℝ := 100\n\n-- Let the discount rate be 15%\nnoncomputable def discount_rate : ℝ := 15/100\n\n-- Calculate the discount\nnoncomputable def discount : ℝ := original_price * discount_rate\n\n-- Calculate the price Jacob has to pay\nnoncomputable def price_to_pay : ℝ := original_price - discount\n\n-- Proof that Jacob has to pay $85\nexample : price_to_pay = 85 := \nbegin\n  unfold price_to_pay, \n  unfold discount, \n  unfold original_price, \n  unfold discount_rate, \n  norm_num, \nend', 'Jacob bought a book at a store. The book was priced at $100. A discount of 15% was given on the book. How much did Jacob have to pay?', 'We know that the book is originally priced at $100 and Jacob got a 15% discount on it. That means Jacob saved 15% of $100 on his purchase. To calculate the discount, we multiply the original price of the book by the discount rate. Therefore, the discount is $100 x 15/100 = $15. Hence, Jacob had to pay the original price of the book minus the discount, which is $100 - $15 = $85.'), ('import data.real.basic\n\n-- define the function for the number of loaves sold\ndef num_loaves (d : ℝ) := 3*d + 10\n\n-- calculate the number of loaves sold each day\ndef loaves_day_one   : ℝ := num_loaves 1\ndef loaves_day_two   : ℝ := num_loaves 2\ndef loaves_day_three : ℝ := num_loaves 3\ndef loaves_day_four  : ℝ := num_loaves 4\ndef loaves_day_five  : ℝ := num_loaves 5\n\n-- calculate the total number of loaves sold\ndef total_loaves : ℝ := loaves_day_one + loaves_day_two + loaves_day_three + loaves_day_four + loaves_day_five\n\n-- calculate the mean number of loaves sold per day\nnoncomputable def mean_loaves : ℝ := total_loaves / 5\n\n-- prove that the mean number of loaves sold per day is 19\nexample : mean_loaves = 19 :=\nbegin\n  unfold mean_loaves,\n  unfold total_loaves,\n  unfold loaves_day_one,\n  unfold loaves_day_two,\n  unfold loaves_day_three,\n  unfold loaves_day_four,\n  unfold loaves_day_five,\n  norm_num [num_loaves],\nend', 'Suppose you are the owner of a bakery and you have observed that the number of loaves of bread sold per day (n) can be modeled by the equation n = 3d + 10, where d is the number of days since a local newspaper featured your bakery in an article. Over a period of 5 days, find the mean number of loaves of bread sold per day.', 'First, we substitute the values of d from 1 to 5 into the equation n = 3d + 10 to find the number of loaves sold each day. \n\nFor d = 1, n = 3(1) + 10 = 13. \nFor d = 2, n = 3(2) + 10 = 16.\nFor d = 3, n = 3(3) + 10 = 19.\nFor d = 4, n = 3(4) + 10 = 22.\nFor d = 5, n = 3(5) + 10 = 25. \n\nSo, the numbers of loaves sold over the 5 days are 13, 16, 19, 22, and 25.\n\nThe mean number of loaves sold per day is the total number of loaves sold divided by the number of days. Adding up the numbers of loaves sold gives 13 + 16 + 19 + 22 + 25 = 95. Since there are 5 days in total, the mean number of loaves sold per day is 95 / 5 = 19.'), ('import data.real.basic\n\n-- defining the derivative\ndef df (x : ℝ) := 3 * x + 2\n\n-- verifying the derivative at the point x = 0\nexample : df 0 = 2 := by simp [df]\n\n-- defining the equation of a line passing through a point (x1, y1) with slope m\ndef line (m x1 y1 x : ℝ) := m * (x - x1) + y1\n\n-- verifying the equation of the tangent line\nexample : ∀ x : ℝ, line (df 0) 0 1 x = 2 * x + 1 :=\nbegin\n  intro x,\n  unfold line,\n  simp [df],\nend', "Let f(x) be a differentiable function such that f'(x) = 3x + 2. Suppose we know that f(0) = 1. What is the equation of the tangent line to the function f(x) at the point (0, 1)?", "The slope of the tangent line to the function at a given point is equal to the derivative of the function at that point. Therefore, the slope of the tangent line at the point (0, 1) is f'(0) = 3*0 + 2 = 2.\n\nThe equation of a line with slope m that passes through a point (x_1, y_1) is given by y - y_1 = m(x - x_1). Substituting the given point (0, 1) and the calculated slope 2, the equation of the tangent line is y - 1 = 2(x - 0), or y = 2x + 1."), ("import data.real.basic\n\n-- Define the transformation function\ndef transformation (p : ℝ × ℝ) : ℝ × ℝ :=\n(-p.2, p.1)\n\n-- Define the points\ndef A : ℝ × ℝ := (0, 0)\ndef B : ℝ × ℝ := (4, 0)\ndef C : ℝ × ℝ := (4, 3)\n\n-- Apply the transformation\ndef A' := transformation A\ndef B' := transformation B\ndef C' := transformation C\n\n-- Verify the results\nexample : A' = (0, 0) := by unfold A' transformation A; simp\nexample : B' = (0, 4) := by unfold B' transformation B; simp\nexample : C' = (-3, 4) := by unfold C' transformation C; simp", "In a plane, point A is at (0, 0), point B is at (4, 0), and point C is at (4, 3). Triangle ABC is rotated 90 degrees counter-clockwise about the origin to form triangle A'B'C'. What are the coordinates of points A', B', and C'?", "When we rotate a point 90 degrees counter-clockwise about the origin, the rule of transformation is (x, y) -> (-y, x). \n\nSo, \n- point A' is the image of point A and its coordinates are (-y, x) = (-0, 0) = (0, 0).\n- point B' is the image of point B and its coordinates are (-y, x) = (-0, 4) = (0, 4).\n- point C' is the image of point C and its coordinates are (-y, x) = (-3, 4) = (4, -3).\n\nTherefore, the coordinates of points A', B', and C' are (0,0), (0,4), and (-3,4) respectively."), ("open nat\n\n-- Peter's savings\ndef Peter_savings : ℕ := 45\n\n-- Maria's savings are twice of Peter's\ndef Maria_savings : ℕ := Peter_savings * 2\n\n-- Total savings is the sum of Peter's and Maria's savings\ndef total_savings : ℕ := Peter_savings + Maria_savings\n\n-- Cost of the video game\ndef video_game_cost : ℕ := 120\n\n-- Money left after buying the video game\ndef money_left : ℕ := total_savings - video_game_cost\n\n-- Proof that they have enough money to buy the video game and will have $15 left.\nexample : money_left = 15 :=\nbegin\n  unfold money_left,\n  unfold total_savings,\n  unfold Maria_savings,\n  unfold Peter_savings,\n  unfold video_game_cost,\n  exact rfl,\nend", 'Peter and Maria decided to buy a new video game which costs $120. They saved their allowances to buy it. Peter has saved $45 and Maria has saved twice as much as Peter. How much more money do they need to buy the video game?', "First, we need to find out how much money Maria has saved. Since Maria has saved twice as much as Peter, and Peter has saved $45, Maria has saved $45 * 2 = $90. Now, we need to add up the money both Peter and Maria have saved. So, $45 (Peter's savings) + $90 (Maria's savings) = $135. This is the total amount of money they have saved. The cost of the video game is $120. To find out how much more money they need, we subtract the cost of the video game from the total amount of money they have saved. So, $135 - $120 = $15. They have enough money to buy the video game and will have $15 left."), ('-- Lean 3 does not directly support computations with place value of digits in a number. \n-- However, we can reason it in a formal way: \n\n-- Given the number 1234, it can be represented as 1000*1 + 100*2 + 10*3 + 1*4. \n-- Therefore, the value of the digit 2 is 100*2 = 200.', 'In the number 1234, what is the value of the digit 2?', 'The digit 2 in the number 1234 is in the hundreds place. Because of this, the value of the digit 2 is not 2, but 200.'), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 8 5 = 40 :=\nbegin\n  unfold rectangle_area,\n  refl,\nend', 'Given that the length of a rectangle is 8 units and the width is 5 units, what is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. In this problem, the length is 8 units and the width is 5 units. Therefore, the area of the rectangle is 8 units * 5 units = 40 square units.'), ('import data.real.basic\n\n-- defining the function to calculate area of rectangle\ndef rect_area (length width : ℝ) : ℝ := length * width\n\n-- proving the problem\nexample : rect_area (9 * 1.40) (6 * 0.80) = 60.48 :=\nbegin\n  unfold rect_area,  -- unfolds the definition of rectangle area\n  norm_num,          -- simplifies the numeric calculation \nend', 'A rectangle has a width of 6 inches and a length of 9 inches. The length of the rectangle is increased by 40% and the width is decreased by 20%. What is the new area of the rectangle?', 'The area of a rectangle is given by the product of its length and width. The original area of the rectangle is 6 inches * 9 inches = 54 square inches. \n\nThe length of the rectangle is increased by 40%, so the new length is 9 inches * 1.40 = 12.6 inches. \n\nThe width of the rectangle is decreased by 20%, so the new width is 6 inches * 0.80 = 4.8 inches.\n\nTherefore, the new area of the rectangle is 12.6 inches * 4.8 inches = 60.48 square inches.'), ('def Science := 120\ndef Arts := 180\ndef Sports := 200\n\n#check Science + Arts + Sports -- output: 500', "In a high school, there are three types of classes: Science, Arts, and Sports. The Science classes have 120 students, the Arts classes have 180 students, and the Sports classes have 200 students. If the school decided to conduct a survey about the students' satisfaction with the school facilities, and each student can only respond once, what is the total number of responses the school can expect?", 'The total number of responses the school can expect is the sum of the number of students in each type of class. So, we add the number of students in the Science classes (120 students), the Arts classes (180 students), and the Sports classes (200 students) together. This gives us a total of 500 responses.'), ("import data.real.basic\n\n-- let's define the functions f and g\ndef f (x : ℝ) := 3 * x + 5\nnoncomputable def g (x : ℝ) := (x - 5) / 3\n\n-- let's prove that g is the inverse of f\nlemma g_inverse_of_f : ∀ x, g (f x) = x :=\nbegin\n  intro x,\n  unfold g f,\n  simp,\n  field_simp,\n  ring\nend\n\n-- To prove the derivative part, we would need to import a library that defines derivatives and provides theorems to work with them. \n-- However, Lean's standard library does not include such a library. \n-- Therefore, we can't provide a formal proof of the derivative part in Lean without using some external library. ", "Given a data set with a linear regression model y = f(x) = ax + b where a is the slope and b is the y-intercept. Now, let's consider the inverse function g(x) = f^(-1)(x). If the slope of the regression line f(x) is 3, what is the slope of the line of the inverse function g(x)?", 'The slope of the line of the inverse function is the reciprocal of the slope of the original function. Therefore, if the slope of the original function f(x) is 3, then the slope of the inverse function g(x) = f^(-1)(x) is 1/3.'), ('variables (side_length : ℕ)\n\ndef square_area (side_length : ℕ) : ℕ := side_length * side_length \nexample : square_area 3 = 9 := rfl', "Let's assume that a square has a side length of 3 units. We are supposed to find the area of this square.", 'The area of a square is calculated by squaring the length of one of its sides. In this case, the side length is 3 units. So, the area of the square would be 3 * 3 = 9 square units.'), ('import data.real.basic\n\n-- define the variables\ndef savings_after_spending : ℝ := 90\ndef money_spent : ℝ := 30\ndef savings_per_week : ℝ := 15\n\n-- calculate the total savings before spending\ndef total_savings_before_spending := savings_after_spending + money_spent\n\n-- calculate the weeks of saving\nnoncomputable def weeks_of_saving := total_savings_before_spending / savings_per_week\n\n-- proof that John had been saving for 8 weeks before he spent the money\nexample : weeks_of_saving = 8 :=\nbegin\n  unfold weeks_of_saving,\n  unfold total_savings_before_spending,\n  unfold savings_after_spending,\n  unfold money_spent,\n  unfold savings_per_week,\n  norm_num,\nend', 'John has been saving $15 every week to buy a new video game. However, due to a recent emergency, he had to spend $30 from his savings. After spending the money, he now has $90 left in his savings. How many weeks had John been saving before he spent the money?', 'Before John spent the money, his savings were $90 (current savings) plus $30 (money spent), which equals $120. Since John saves $15 every week, he must have been saving for $120 ÷ $15 = 8 weeks.'), ('import data.real.basic\n\nopen real\n\n-- defining the lemma for the exponent\nlemma power_three_two : (2^3 = 8) :=\nbegin\n  norm_num,\nend\n\n-- defining the main theorem\ntheorem square_perimeter : ((4 * (2^3)) = 32) :=\nbegin\n  rw power_three_two,\n  norm_num,\nend', 'A square has a side length of 2^3 units. What is the perimeter of the square?', 'The side length of the square is 2^3 units, which equals 8 units. Since a square has four equal sides, the perimeter of the square is 4 * side length, which equals 4 * 8 = 32 units. So, the perimeter of the square is 32 units.'), ('import data.int.basic\n\n-- define the problem in Lean\ndef chores_done := (7:ℤ)\ndef chores_forgotten := (3:ℤ)\ndef money_per_chore := (10:ℤ)\ndef money_lost_per_chore := (5:ℤ)\n\n-- calculate the money earned and lost\ndef money_earned := chores_done * money_per_chore\ndef money_lost := chores_forgotten * money_lost_per_chore\n\n-- calculate the total money\ndef total_money := money_earned - money_lost\n\n-- proof that the total money is $55\nexample : total_money = 55 :=\nbegin\n  unfold total_money money_earned money_lost chores_done chores_forgotten money_per_chore money_lost_per_chore,\n  exact dec_trivial,\nend', 'John has been saving money for a new video game. He gets $10 for each chore he does, but loses $5 for each chore he forgets to do. In a week, he did 7 chores but forgot 3. How much money did John earn for the week?', 'John earns $10 for each chore he does and loses $5 for each chore he forgets. Therefore, we can calculate the total amount of money he earned by multiplying the number of chores he did by the money he gets for each chore, which is 7 * $10 = $70. Similarly, we can calculate the total amount of money he lost by multiplying the number of chores he forgot by the money he loses for each forgotten chore, which is 3 * $5 = $15. Therefore, the total amount of money John earned for the week is the money he earned minus the money he lost, which is $70 - $15 = $55.'), ('import data.real.basic\n\n-- defining the main function\nnoncomputable def geometric_series (a r : ℝ) (n : ℕ) : ℝ := a * (1 - r^n) / (1 - r)\n\n-- proof\nexample : geometric_series 5 2 10 = 5115 :=\nbegin\n  -- compute the geometric_series\n  rw geometric_series,\n  -- simplify\n  norm_num,\nend', 'In a geometric series, the first term is 5 and the common ratio is 2. What is the sum of the first 10 terms?', 'In a geometric series, the sum S of the first n terms can be calculated using the formula S = a * (1 - r^n) / (1 - r), where a is the first term, r is the common ratio, and n is the number of terms. \n\nGiven a = 5, r = 2, and n = 10, we can substitute these values into the formula to get: \n\nS = 5 * (1 - 2^10) / (1 - 2) \n= 5 * (1 - 1024) / -1 \n= 5 * 1023 \n= 5115\n\nTherefore, the sum of the first 10 terms of the geometric series is 5115.'), ('import data.real.basic\n\n-- Define the polynomial p(x) = x^2 + 3x - 10\ndef p (x : ℝ) := x^2 + 3*x - 10\n\n-- Prove that p(-2) = -12\nexample : p (-2) = -12 :=\nbegin\n  -- Compute p(-2)\n  unfold p,\n  -- Simplify the right-hand side\n  norm_num,\nend', 'Suppose x is a negative number where x = -2. Consider the quadratic polynomial p(x) = x^2 + 3x - 10. What is the value of p(x)?', 'First, substitute x = -2 into the polynomial. The polynomial becomes (-2)^2 + 3*(-2) - 10. \n\nThis simplifies to 4 - 6 - 10. \n\nThen, combining these terms results in -12. \n\nSo, p(-2) = -12.'), ('open nat\n\ndef total_students : ℕ := 7 + 8\ndef total_books : ℕ := 21 + 24\ndef average_books_per_student : ℕ := total_books / total_students\n\nexample : average_books_per_student = 3 :=\nbegin\n  unfold average_books_per_student,\n  unfold total_books,\n  unfold total_students,\n  exact dec_trivial,\nend', "In Ms. Smith's third grade class, there are 7 boys and 8 girls. The boys have a total of 21 books and the girls have a total of 24 books. What is the average number of books per student in the class?", 'First, we need to find the total number of students in the class. We add the number of boys (7) and the number of girls (8), which gives us 15. Then, we add the total number of books the boys have (21) and the total number of books the girls have (24), giving us 45 books in total.\n\nThe average number of books per student is found by dividing the total number of books by the total number of students. So, 45 books divided by 15 students equals 3. Therefore, the average number of books per student in the class is 3.'), ('import data.real.basic\n\ntheorem add_subtract (a b c : ℝ) : a + b = c → a = c - b :=\nbegin\n  intro h,\n  rw ← h,\n  rw add_sub_cancel,\nend', 'If a, b, and c are real numbers, and (a+b) = c, then a = c - b. Prove this is true.', 'Given that a, b, and c are real numbers and (a+b) = c. We can subtract b from both sides of the equation to maintain equality. So, a + b - b = c - b. This simplifies to a = c - b. Therefore, if (a+b) = c, then a = c - b.'), ('import data.real.basic\n\n-- definition of the system of equations\ndef sys_eqns (x y : ℝ) : Prop := 3*x + 2*y = 10 ∧ x - y = 1\n\n-- proof that (12/5, 7/5) is a solution to the system of equations\nexample : sys_eqns (12/5) (7/5) :=\nbegin\n  -- unpack the definition of the system of equations\n  unfold sys_eqns,\n  -- split the goal into two: one for each equation in the system\n  split,\n  -- solve the first equation\n  { norm_num, },\n  -- solve the second equation\n  { norm_num, },\nend', 'Consider the system of equations:\n\n1. 3x + 2y = 10\n2. x - y = 1\n\nSolve this system of equations to find the values of x and y.', 'We can solve this system of equations using substitution or elimination. Here, we will use substitution.\n\nFirst, from the second equation, we get x = 1 + y.\n\nSubstitute x = 1 + y into the first equation, we get 3(1 + y) + 2y = 10, which simplifies to 3 + 3y + 2y = 10 and then to 5y = 7. So, y = 7/5.\n\nSubstitute y = 7/5 back into the equation x = 1 + y, we get x = 1 + 7/5 = 12/5.\n\nSo, the solution to the system of equations is x = 12/5, y = 7/5.'), ('def value_of_abc (a b c : ℕ) : ℕ := 100*a + 10*b + c', 'If we have a three-digit number represented as "abc", where "a", "b", and "c" are different digits, and "a" is a nonzero digit, what is the value of "abc" in terms of "a", "b", and "c"?', 'In the place value system, each digit represents a multiple of a power of 10. The rightmost digit represents the ones place, the digit to the left of it represents the tens place, and the digit to the left of that represents the hundreds place. \n\nHere, "c" is in the ones place, "b" is in the tens place, and "a" is in the hundreds place. So the value of "abc" would be 100*a + 10*b + c.'), ('import data.real.basic\n\n-- Definitions\nnoncomputable def john_pizza := (2 : ℝ) / 5\nnoncomputable def mary_pizza := (3 : ℝ) / 4\nnoncomputable def party_pizza := (1 : ℝ) / 4\n\n-- Total pizza they had\nnoncomputable def total_pizza := john_pizza + mary_pizza\n\n-- Pizza consumed\nnoncomputable def consumed_pizza := total_pizza - party_pizza\n\n-- Proof\nexample : consumed_pizza = 0.9 :=\nbegin\n  unfold consumed_pizza total_pizza john_pizza mary_pizza party_pizza,\n  norm_num,\nend', 'John has 2/5 of a pizza left and his friend Mary has 3/4 of a pizza left. They decide to put their pizza leftovers together for a party. After the party, they find out they only have 1/4 of a pizza left. How much pizza did they consume at the party?', 'First, we add together the fractions of pizza that John and Mary originally had. John has 2/5 of a pizza and Mary has 3/4 of a pizza. After finding a common denominator, we know that 2/5 is equivalent to 8/20 and 3/4 is equivalent to 15/20. So, together they had 8/20 + 15/20 = 23/20 pizzas, which is 1.15 pizzas.\n\nThen, we subtract the fraction of pizza left after the party from the total amount of pizza they originally had. They had 1.15 pizzas and consumed 1/4 (or 0.25) of a pizza, so they consumed 1.15 - 0.25 = 0.9 pizzas at the party.'), ('import data.int.basic\n\nopen int\n\n-- define the two-digit number\ndef n : ℤ := 34\n\n-- define the digits\ndef tens_digit : ℤ := n / 10\ndef ones_digit : ℤ := n % 10\n\n-- prove the theorem\ntheorem tens_is_not_four_times_ones : tens_digit ≠ 4 * ones_digit :=\nbegin\n  rw [tens_digit, ones_digit], -- use the definitions of tens_digit and ones_digit\n  exact dec_trivial, -- use the dec_trivial tactic to handle simple inequalities\nend', 'Given a two-digit number, 34. Is the digit in the tens place four times the digit in the ones place?', 'We have the two-digit number 34. The digit in the tens place is 3, and the digit in the ones place is 4. According to the problem, we need to check if 3 is four times 4. Multiplying 4 by 4 gives us 16, not 3. Therefore, the digit in the tens place is not four times the digit in the ones place.'), ('import data.int.basic\n\nopen int\n\n-- define the problem\ndef john_debt : ℤ := -50\ndef weekly_payment : ℤ := 10\n\n-- proof that it will take John 5 weeks to pay off his debt\nexample : john_debt / weekly_payment = -5 :=\nbegin\n  refl,\nend', 'John has a debt of $50. He plans to decrease his debt by $10 every week. How many weeks does John need to pay off his debt?', "John plans to decrease his debt by $10 each week, so we can view this as adding $10 to John's debt each week. Since John's debt is $50, we can represent this as -50. Each week John adds 10 to his debt, so we can represent this as +10. We divide -50 by 10 to find how many weeks John needs to pay off his debt. -50 divided by 10 is -5, so it takes John 5 weeks to pay off his debt."), ('import data.real.basic\n\ndef f (x : ℝ) : ℝ := 2*x + 3\n\ntheorem function_property (a : ℝ) : f(a) = 2*a + 3 :=\nbegin\n  unfold f,\nend', "Let f(x) = 2x + 3 be a function. Prove that for any real number 'a', f(a) = 2a + 3.", "This problem is straightforward given the definition of the function f(x). By definition, f(x) = 2x + 3 for any real number x. So, if we replace x with 'a', we get f(a) = 2a + 3."), ('import data.real.basic\n\n-- declare the variable\nvariable x : ℝ\n\n-- state the problem as an equation\ntheorem johns_apples : 5*x = 3 → x = 3/5 :=\nassume h : 5*x = 3,\nshow x = 3/5, from by linarith', 'John has 3 apples. He eats x apples each day for 5 days. At the end of the fifth day, he has no apples left. Find the value of x.', 'To solve for x, we start by setting up an equation based on the problem. The total number of apples John has is 3. He eats x apples each day for five days. This can be written as 5x. According to the problem, after five days, he has no apples left, which means that the total number of apples he ate equals the total number of apples he had. So we can set up the equation as 3 = 5x. To find the value of x, we divide both sides of the equation by 5. So x = 3/5. Therefore, John eats 3/5 of an apple each day.'), ('import data.real.basic\n\nexample : (5.5 - 2.3) + (3.2 - 1.4) = 5 :=\nbegin\n  norm_num,\nend', 'John has 5.5 kilograms of apples and 3.2 kilograms of oranges. He decided to give 2.3 kilograms of apples and 1.4 kilograms of oranges to his friend. Calculate how many kilograms of fruits John has now.', 'First, we need to subtract the weight of the apples John gave away from the total weight of the apples he had. So, 5.5 kilograms - 2.3 kilograms = 3.2 kilograms of apples left.\nNext, we subtract the weight of the oranges John gave away from the total weight of the oranges he had. So, 3.2 kilograms - 1.4 kilograms = 1.8 kilograms of oranges left.\nFinally, we add the weight of the apples and oranges John has left to get the total weight of the fruits he has now. So, 3.2 kilograms + 1.8 kilograms = 5 kilograms. Therefore, John has 5 kilograms of fruits now.'), ('import data.real.basic\n\n-- defining the function for the area of a rectangle\ndef rect_area (length width : ℝ) : ℝ := length * width\n\n-- defining the current size of the garden\ndef garden_size := rect_area 10 1\n\n-- stating and proving the problem\ntheorem garden_expansion : garden_size * 100 = 1000 :=\nbegin\n  unfold garden_size, -- expands the definition of garden_size\n  unfold rect_area, -- expands the definition of rect_area\n  norm_num, -- simplifies the numerical calculation\nend', 'John has a rectangle garden that is 10 meters long and 1 meter wide. He wants to increase the size of his garden by a factor of 100. How many square meters will his garden be after the expansion?', "First, we need to find out the current size of John's garden. The area of a rectangle is calculated by multiplying the length by the width. So, the current size of his garden is 10 meters * 1 meter = 10 square meters.\n\nJohn wants to increase the size of his garden by a factor of 100. This means he wants his garden to be 100 times larger than it currently is. So, we simply multiply the current size of his garden by 100.\n\nSo, 10 square meters * 100 = 1000 square meters. \n\nTherefore, after the expansion, John's garden will be 1000 square meters."), ('-- Lean 3\nimport data.real.basic\n\n-- define variables\nnoncomputable def x : ℝ := 3 / 4\nnoncomputable def y : ℝ := 1 / 2\n\n-- prove the theorem\ntheorem result : 2 * x + y - 1 = 1 :=\nbegin\n  unfold x y, -- substitute x and y\n  norm_num, -- perform the arithmetic\nend', 'If x represents 3/4 and y represents 1/2, what is the result of the expression 2x + y - 1?', 'First, we substitute x with 3/4 and y with 1/2 in the expression. So, the expression becomes 2 * 3/4 + 1/2 - 1. \n\nNext, we perform the multiplication: 2 * 3/4 equals 6/4, which simplifies to 1.5. \n\nSo, the expression now is 1.5 + 1/2 - 1. \n\nAdding 1.5 and 1/2 gives 2, and subtracting 1 from 2 gives 1. \n\nSo, the result of the expression is 1.'), ('import data.real.basic\n\n-- Defining the profit function P(x, y)\ndef P (x y : ℝ) : ℝ := 5*x + 3*y\n\n-- Proving the average monthly profit is $1100\nexample : P 100 200 = 1100 :=\nbegin\n  -- Calculation\n  unfold P,\n  norm_num,\nend', 'A company produces two types of products: A and B. The profit function of this company is given by P(x, y) = 5x + 3y, where x and y represent the quantities of Product A and B produced respectively. The company collected data over the past year and found that they produced x = 100 units of Product A and y = 200 units of Product B each month on average. Calculate the average monthly profit of the company over the past year.', 'To find the average monthly profit of the company over the past year, we need to plug the average production quantities of Product A and Product B into the profit function P(x, y). \n\nThen we get P(100, 200) = 5*100 + 3*200 = 500 + 600 = 1100. \n\nSo, the average monthly profit of the company over the past year is $1100.'), ('open nat\n\ndef boxes := 3\ndef bags_per_box := 4\ndef oranges_per_bag := 2\n\ndef total_oranges := boxes * bags_per_box * oranges_per_bag\n\nexample : total_oranges = 24 :=\nbegin\n  unfold total_oranges,\n  unfold boxes,\n  unfold bags_per_box,\n  unfold oranges_per_bag,\n  refl,\nend', 'John has 3 boxes of oranges. Each box contains 4 bags and each bag has 2 oranges in it. How many oranges does John have in total?', 'First, we need to multiply the number of bags per box by the number of oranges per bag, which is 4 bags * 2 oranges/bag = 8 oranges/box. Then we multiply the number of boxes by the number of oranges per box, which is 3 boxes * 8 oranges/box = 24 oranges. So John has 24 oranges in total.'), ('import data.real.basic\n\nnoncomputable def mean (data : list ℕ) : ℝ :=\n  (list.foldr (+) 0 (list.map coe data)) / (list.length data)\n\ntheorem mean_eq_sum_div_length (data : list ℕ) : \n  mean data = (list.foldr (+) 0 (list.map coe data) / list.length data) :=\nbegin\n  unfold mean,\nend', 'Given a set of data, {5, 10, 15, 20, 25}, prove that the mean (average) of the data is equal to the sum of all the values divided by the number of values.', 'The mean (average) of a set of data is calculated by adding up all the values in the set and then dividing by the number of values in the set. For the given set of data, {5, 10, 15, 20, 25}, the sum of all the values is 5 + 10 + 15 + 20 + 25 = 75. The number of values in the set is 5. Therefore, the mean of the set is 75 / 5 = 15, which proves that the mean of a set of data is equal to the sum of all the values divided by the number of values.'), ('import data.real.basic\n\n-- Given data\ndef l : ℝ := 4 -- length in meters\ndef w : ℝ := 2 -- width in meters\nnoncomputable def h : ℝ := 2.5 -- height in meters\ndef removed_sand : ℝ := 3 -- removed sand in cubic meters\n\n-- Calculation\nnoncomputable def box_volume := l * w * h -- volume of the box in cubic meters\nnoncomputable def remaining_sand := box_volume - removed_sand -- remaining sand in the box\n\n-- Proof\nexample : remaining_sand = 17 :=\nbegin\n  unfold remaining_sand,\n  unfold box_volume,\n  unfold l,\n  unfold w,\n  unfold h,\n  unfold removed_sand,\n  norm_num,\nend', 'John has a rectangular solid box that has a length of 4 meters, a width of 2 meters, and a height of 2.5 meters. The box is currently filled with sand. John then removes 3 cubic meters of sand from it. What is the volume of the sand remains in the box?', 'First, we calculate the volume of the box by multiplying the length, width, and height, which gives us 4 * 2 * 2.5 = 20 cubic meters. Then we subtract the volume of the sand John removed from the total volume of the box, which is 20 - 3 = 17 cubic meters. So the volume of the sand remains in the box is 17 cubic meters.'), ("import data.real.basic\n\n-- The quadratic function\ndef f (x : ℝ) : ℝ := x^2 - 6*x + 13\n\n-- The derivative of the function\ndef f' (x : ℝ) : ℝ := 2*x - 6\n\n-- Proof that the derivative is zero at x = 3\nlemma deriv_zero_at_three : f' 3 = 0 :=\nbegin\n  unfold f',\n  norm_num,\nend\n\n-- Proof that the expected value is 3\ndef expected_value : ℝ :=\nbegin\n  have h : ∃ x, f' x = 0, from exists.intro 3 deriv_zero_at_three, -- the derivative is zero at x = 3\n  exact 3, -- the expected value is the x where the derivative is zero\nend", 'Suppose we have a quadratic function defined by f(x) = ax^2 + bx + c (a ≠ 0). This function is used to model a certain probability distribution. If a = 1, b = -6, and c = 13, find the expected value of this distribution.', 'To find the expected value (mean) of the distribution, we will need to find the vertex of the parabola defined by our quadratic function, as this will be the value which has the highest probability in our distribution.\n\nThe formula for the x-value of the vertex of a parabola defined by y = ax^2 + bx + c is -b/2a. In this case, a = 1 and b = -6, so the x-value of the vertex is -(-6)/(2*1) = 3.\n\nTherefore, the expected value of this distribution is 3.'), ('import data.real.basic\n\n-- defining the initial side length and the percentage increase\ndef s1 := (4 : ℝ)\nnoncomputable def percent_increase := (50 : ℝ) / 100\n\n-- calculating the new side length after the increase\nnoncomputable def s2 := s1 * (1 + percent_increase)\n\n-- defining the volume of a cube\ndef volume (s : ℝ) := s^3\n\n-- calculating the initial and new volumes\ndef V1 := volume s1\nnoncomputable def V2 := volume s2\n\n-- proving that the increase in volume is 152 cm^3\nexample : V2 - V1 = 152 :=\nbegin\n  -- simplifying the definitions\n  unfold V1 V2 volume s2 s1 percent_increase,\n  -- proving the goal\n  norm_num,\nend', 'You have a cube with a side length of 4 cm. If you increase the side length of the cube by 50%, what is the increase in volume?', 'The volume of a cube is given by the formula V = s^3, where s is the side length of the cube. \n\nThe initial volume of the cube is V1 = 4^3 = 64 cm^3.\n\nAfter increasing the side length by 50%, the new side length is s2 = 4 * 1.5 = 6 cm.\n\nThe new volume of the cube is V2 = 6^3 = 216 cm^3.\n\nThe increase in volume is V2 - V1 = 216 cm^3 - 64 cm^3 = 152 cm^3.'), ('import data.real.basic\n\n-- definition of the roots of a quadratic function\ndef roots (a b c x : ℝ) : Prop := a*x*x + b*x + c = 0\n\n-- verification of the roots of the function 2x^2 - 3x + 1\nexample : roots 2 (-3) 1 1 ∧ roots 2 (-3) 1 0.5 :=\nbegin\n  split,\n  { unfold roots, norm_num, },\n  { unfold roots, norm_num, }\nend', 'Consider the quadratic function f(x) = 2x^2 - 3x + 1. What are the roots of this function?', 'To find the roots of the function, we set the function equal to zero and solve for x. That is, we solve the equation 2x^2 - 3x + 1 = 0. \n\nWe can use the quadratic formula, x = [-b ± sqrt(b^2 - 4ac)] / (2a), where a = 2, b = -3, and c = 1. \n\nSubstituting these values into the formula, we get x = [3 ± sqrt((-3)^2 - 4*2*1)] / (2*2) = [3 ± sqrt(9 - 8)] / 4 = [3 ± sqrt(1)] / 4. \n\nSo, the roots of the function are x = (3 + 1) / 4 = 1 and x = (3 - 1) / 4 = 0.5.'), ('open nat\n\n-- define the number of students and books\ndef students := 120\ndef books_per_student := 5\n\n-- total books is students * books_per_student\ndef total_books := students * books_per_student\nexample : total_books = 600 :=\nbegin\n  unfold total_books, \n  unfold students,\n  unfold books_per_student,\n  refl,\nend', 'In a class, there are 120 students. Each student has 5 books. How many books are there in total in the class?', 'To solve this, we multiply the number of students by the number of books each student has. So, we do 120 * 5, which equals 600. Therefore, there are 600 books in total in the class.'), ('import data.real.basic\n\n-- define the initial amounts of chocolate\nnoncomputable def alice_chocolate : ℝ := 2/3\nnoncomputable def bob_chocolate : ℝ := 1/4\n\n-- define the amount of chocolate alice gives to bob\nnoncomputable def alice_gives : ℝ := 1/3\n\n-- calculate the amount of chocolate bob has after alice gives him some\nnoncomputable def bob_chocolate_after := bob_chocolate + alice_gives\n\n-- proof that Bob has 7/12 of a chocolate bar after Alice gives him 1/3 of a chocolate bar\nexample : bob_chocolate_after = 7/12 :=\nbegin\n  unfold bob_chocolate_after bob_chocolate alice_gives,\n  norm_num,\nend', 'Alice has 2/3 of a chocolate bar and Bob has 1/4 of a chocolate bar. If Alice gives 1/3 of a chocolate bar to Bob, how much chocolate does Bob have?', 'Bob starts with 1/4 of a chocolate bar. Alice gives Bob 1/3 of a chocolate bar, so we add these two fractions together to find out how much chocolate Bob has now. \n\nThe common denominator for 1/3 and 1/4 is 12. \n\nSo, we convert 1/4 to 3/12 and 1/3 to 4/12. \n\nWe then add these two fractions together: \n\n3/12 + 4/12 = 7/12\n\nSo, Bob has 7/12 of a chocolate bar.'), ('def weeks_needed (cost_of_bicycle : ℕ) (saved_money : ℕ) (weekly_saving : ℕ) : ℕ :=\n(cost_of_bicycle - saved_money) / weekly_saving\n\n#eval weeks_needed 150 30 10  -- output: 12', 'Suppose you are saving up to buy a new bicycle that costs $150. Every week you save $10 from your allowance. If you have already saved $30, how many more weeks do you need to save in order to have enough money to buy the bicycle?', 'First, we need to determine how much more money we need to save. That would be the cost of the bicycle minus the amount we have already saved, which is $150 - $30 = $120.\nTo find out how many weeks we need to save, we can divide the amount we still need to save by the amount we save each week. So, the number of weeks needed would be $120 ÷ $10 = 12 weeks.'), ('import data.real.basic\n\n-- define the transformation of moving 3 units to the left and 4 units down\ndef left_down_transformation (x y : ℝ) : ℝ × ℝ := (x - 3, y - 4) \n\n-- define the transformation of rotating 180 degrees around the origin\ndef rotation_transformation (x y : ℝ) : ℝ × ℝ := (-x, -y) \n\n-- proof\nexample : rotation_transformation (left_down_transformation 2 3).1 (left_down_transformation 2 3).2 = (1, 1) :=\nbegin\n  unfold left_down_transformation,\n  unfold rotation_transformation,\n  simp,\n  split;\n  norm_num,\nend', 'In a coordinate plane, point A is located at (2,3). Tom moves point A 3 units to the left and 4 units down, reaching point B. Then, he rotates point B 180 degrees around the origin to reach point C. What are the coordinates of point C?', 'Firstly, when Tom moves point A 3 units to the left and 4 units down, the coordinates of point B will be (2-3, 3-4) = (-1,-1). \n\nSecondly, when point B is rotated 180 degrees around the origin, the coordinates of point B are multiplied by -1 (since a 180 degree rotation is the same as multiplying the coordinates by -1). Thus, the coordinates of point C will be -1*(-1,-1) = (1,1).'), ('import data.real.basic\n\n-- defining the total number of students\ndef total_students : ℝ := 30\n-- defining the number of students who like football\ndef football_lovers : ℝ := 10\n-- defining the number of students who like basketball\ndef basketball_lovers : ℝ := 15\n\n-- defining the function for probability\nnoncomputable def probability (favorable_outcomes : ℝ) (total_outcomes : ℝ) : ℝ :=\n  favorable_outcomes / total_outcomes\n\n-- proving the problem\nexample : probability (football_lovers + basketball_lovers) total_students = 5/6 :=\nbegin\n  unfold probability,\n  unfold football_lovers,\n  unfold basketball_lovers,\n  unfold total_students,\n  norm_num,\nend', 'A survey was conducted in a class of 30 students to find out their favorite sport. It was found that 10 students like Football, 15 students like Basketball, and 5 students like Baseball. If a student is chosen at random, what is the probability that the student likes Football or Basketball?', 'The probability of an event can be calculated by dividing the number of favorable outcomes by the total number of outcomes. From the survey, we know that 10 students like Football and 15 students like Basketball. Therefore, the number of favorable outcomes (students who like Football or Basketball) is 10 + 15 = 25. The total number of outcomes (total students in the class) is 30. Therefore, the probability that a student likes Football or Basketball is 25/30 or 5/6.'), ('import data.int.basic\n\nopen int\n\ntheorem five_is_factor_of_435 : 435 % 5 = 0 :=\nbegin\n  exact rfl,\nend', "Let's say we have a 3-digit number 435 and we want to find out if 5 is a factor of this number. Is 5 a factor of 435?", 'In order to find out if 5 is a factor of 435, we need to divide 435 by 5. If the result is a whole number, then 5 is a factor. The division of 435 by 5 gives us 87 which is a whole number. Therefore, we can conclude that 5 is a factor of 435.'), ('def container_mass := 2\ndef water_mass_per_liter := 1\ndef water_volume_to_fill := 5\n\n-- calculate and prove\nexample : container_mass + water_mass_per_liter * water_volume_to_fill = 7 :=\nbegin\n  rw [container_mass, water_mass_per_liter, water_volume_to_fill],\n  exact dec_trivial,\nend', 'Bob has a container that can hold 8 liters of water and weighs 2 kilograms. If water has a mass of 1 kilogram per liter, how much would the container weigh when it is filled with 5 liters of water?', 'First, we need to calculate the mass of the water that will be added to the container. As water has a mass of 1 kilogram per liter, 5 liters of water would have a mass of 5 kilograms. \n\nSecond, we add the mass of the water to the mass of the container. The container weighs 2 kilograms, so when we add 5 kilograms of water, the total weight of the container filled with water would be 2 kilograms + 5 kilograms = 7 kilograms.'), ('import data.nat.basic\n\nopen nat\n\n-- define the initial number of marbles\ndef john_marbles : ℕ := 650\ndef jane_marbles : ℕ := 200\n\n-- Jane gives John 100 marbles\ndef john_marbles_after_jane_gives := john_marbles + 100\ndef jane_marbles_after_jane_gives := jane_marbles - 100\n\n-- John gives Jane 50 marbles\ndef john_final_marbles := john_marbles_after_jane_gives - 50\ndef jane_final_marbles := jane_marbles_after_jane_gives + 50\n\nexample : john_final_marbles = 700 := by refl\nexample : jane_final_marbles = 150 := by refl', 'John has 650 marbles and Jane has 200 marbles. Jane gave John 100 marbles and John gave Jane 50 marbles. How many marbles does each have now?', 'Initially, John has 650 marbles and Jane has 200 marbles. After Jane gave John 100 marbles, John has 650 + 100 = 750 marbles and Jane has 200 - 100 = 100 marbles. Then John gave Jane 50 marbles. So, John now has 750 - 50 = 700 marbles and Jane now has 100 + 50 = 150 marbles.'), ("import data.real.basic \n\nnoncomputable def abs' (x : ℝ) : ℝ := if x < 0 then -x else x\n\ntheorem abs_eq_abs' (x : ℝ) : abs x = abs' x :=\nbegin\n  unfold abs',\n  by_cases h : x < 0,\n  { rw abs_of_neg h,\n    rw if_pos h, },\n  { rw abs_of_nonneg (not_lt.mp h),\n    rw if_neg h, },\nend", 'Prove that for any real number x, the absolute value of x, denoted |x|, can be defined as a piecewise function as follows: |x| = x if x >= 0, and |x| = -x if x < 0.', "We know that the absolute value of a number is its distance from zero on the number line, regardless of direction. Therefore, the absolute value of a number is always non-negative. \nLet's consider two scenarios. \nFirst, if x is a positive number or zero, it means x is on the right side of zero or at the zero on the number line. Its distance from zero is exactly x itself. So, |x| = x for any x >= 0.\nSecond, if x is a negative number, it means x is on the left side of the zero on the number line. In this case, the distance from zero is the opposite of x, or -x. So, |x| = -x for any x < 0.\nSo we can define the absolute value as a piecewise function: |x| = x if x >= 0, and |x| = -x if x < 0. This definition covers all possible real values of x, and is consistent with the concept of absolute value."), ('import data.int.basic\n\ntheorem add_greater : ∀ (A B C : ℕ), A > B → A + C > B + C :=\nbegin\n  intros A B C h,\n  apply nat.add_lt_add_right h C,\nend', 'If we have two numbers A and B, and A is greater than B, prove that if we add a same number C to both A and B, the sum of A + C will still be greater than the sum of B + C.', "Let's say A and B are two whole numbers such that A > B. We have another whole number C. We add C to both A and B to get A + C and B + C. Since A > B, adding the same number C to both sides will not change the inequality. Thus, A + C > B + C."), ('def f (x : ℕ) : ℕ := 10 * x\n\nexample : f 5 = 50 :=\nbegin\n  unfold f,\n  -- 10 * 5 = 50\n  exact dec_trivial,\nend', 'The price of a movie ticket is $10. A group of friends want to go to the movies and they are trying to figure out how much they will have to pay in total. Let\'s denote the number of friends by "x". Write a function that represents the total price for the movie tickets in terms of the number of friends. Then, calculate the total price if the number of friends is 5.', 'The function can be written as f(x) = 10x, where x is the number of friends. This is a direct application of the concept of linear equations. The total cost increases linearly with the number of friends.\n\nTo find the total cost for 5 friends, we substitute x = 5 into the function. So, f(5) = 10 * 5 = $50. Therefore, the total price for the movie tickets for 5 friends is $50.'), ('def volume (length : ℕ) (width : ℕ) (height : ℕ) : ℕ := length * width * height\n\n#eval volume 2 3 4   -- returns 24', "John has a rectangle box that is 2 feet long, 3 feet wide, and 4 feet high. What is the volume of John's box?", "The volume of a rectangular box can be found by multiplying its length, width, and height. In this case, John's box is 2 feet long, 3 feet wide, and 4 feet high. Multiplying these measurements together gives a volume of 2 feet * 3 feet * 4 feet = 24 cubic feet."), ('import data.real.basic\n\n-- defining the function for the nth term of an arithmetic sequence\ndef nth_term (a_1 : ℝ) (d : ℝ) (n : ℕ) : ℝ := a_1 + (n - 1) * d\n\n-- proving the problem\nexample : nth_term 5 3 100 = 302 :=\nbegin\n  -- simplifying the expression\n  simp [nth_term],\n  norm_num,\nend', "Let's consider an arithmetic sequence where the first term is 5 and the common difference is 3. What is the 100th term of this sequence?", 'In an arithmetic sequence, the nth term can be found using the formula: a_n = a_1 + (n-1)*d, where a_1 is the first term, d is the common difference, and n is the term number. In this case, a_1 = 5, d = 3 and n = 100. Substituting these values into the formula, we get:\n\na_100 = 5 + (100 - 1) * 3 = 5 + 297 = 302.\n\nSo, the 100th term of the sequence is 302.'), ('def stickers := 200 - 45 + 60\ndef estimate := if stickers % 100 < 50 then stickers / 100 * 100 else stickers / 100 * 100 + 100\n#eval stickers  -- output: 215\n#eval estimate  -- output: 200', 'Jane has 200 stickers. She gives away 45 stickers to her friend, and then receives another 60 stickers from another friend. Estimate to the nearest hundred how many stickers she has now.', "First, let's calculate how many stickers Jane has after giving away and receiving stickers. She starts with 200 stickers, gives away 45, and then receives 60. So she has 200 - 45 + 60 = 215 stickers. Now, we need to estimate this to the nearest hundred. 215 is closer to 200 than to 300, so the estimate to the nearest hundred is 200 stickers."), ('import data.real.basic\n\n-- defining the variables\nvariables (w : ℝ)\n\n-- defining the volume function\ndef V (w : ℝ) : ℝ := 6 * w^3\n\ntheorem volume_of_box : ∀ w : ℝ, V w = 6 * w^3 :=\nbegin\n  intro w,\n  unfold V, \nend', 'Consider a rectangular box with length "l", width "w" and height "h". If l = 2w and h = 3w, find the volume of the box in terms of "w".', 'The volume of a rectangular box is calculated by multiplying the length, width, and height. In this case, we know that l = 2w and h = 3w. By substituting these values into the volume formula, we get:\n\nVolume = l * w * h \n       = (2w) * w * (3w) \n       = 6w^3\n\nSo, the volume of the box is 6w^3.'), ('import data.nat.basic\n\ndef double_each_day (n : ℕ) : ℕ := (2^n)\n\n#eval double_each_day 7  -- returns 128', 'Johnny has a magic cube that doubles in size every day. If the cube was one cubic inch on the first day, how big will the cube be after a week?', 'Every day, the size of the cube is multiplied by 2. So after 7 days, the size of the cube will be 2^7 = 128 cubic inches.'), ('import data.real.basic\n\n-- Defining the sides of the rectangle\ndef side_1 : ℝ := 4\ndef side_2 : ℝ := 6\n\n-- Calculating the area\ndef rectangle_area := side_1 * side_2 \n\n#eval rectangle_area ', "Let's consider a rectangle ABCD where AB = BC = 4 units and AD = DC = 6 units. What is the area of the rectangle?", "The area of a rectangle is calculated by multiplying the lengths of its sides. In this case, the rectangle's sides are 4 units and 6 units long. By multiplying these numbers, we find that the area of the rectangle is 24 square units."), ('import data.real.basic\n\ndef equals (x y : ℝ) := abs (x - y) < 0.00001\n\nexample: equals ((1:ℝ)/2) ((3:ℝ)/6) := \nbegin\n  unfold equals,\n  norm_num,\nend\n\nexample: equals ((1:ℝ)/2) ((0.5:ℝ)) := \nbegin\n  unfold equals,\n  norm_num,\nend', "Alice and Bob are comparing the sizes of their pieces of cake. Alice has 1/2 of a cake, while Bob has 3/6 of a cake. Additionally, Bob found a coin that is worth 0.5 dollars. Who has the larger piece of cake and does the value of Bob's coin equal to the size of his cake?", "First, we need to compare the fractions 1/2 and 3/6. Since these fractions are equivalent (3/6 simplifies to 1/2), Alice and Bob have the same size pieces of cake. \n\nNext, we compare the value of Bob's coin to the size of his cake. 0.5 is the decimal equivalent of the fraction 1/2, so the value of Bob's coin does indeed equal the size of his cake."), ('import data.real.basic\n\n-- declare variables\nvariables (r h : ℝ)\n\n-- state the volume formulas for a cone and a cylinder\nnoncomputable def cone_volume (r h : ℝ) : ℝ := 1/3 * 3.141592653589793 * r^2 * h\nnoncomputable def cylinder_volume (r h : ℝ) : ℝ := 3.141592653589793 * r^2 * h\n\n-- state the problem in formal terms\ntheorem volume_ratio (r h : ℝ) (hr : r > 0) (hh : h > 0) : \n  cone_volume r h = 1/3 * cylinder_volume r h :=\nbegin\n  unfold cone_volume cylinder_volume,   -- unpack the definitions\n  simp, -- simplify the expression\n  ring, -- use ring algebra to finish the proof\nend', 'A cone and a cylinder have the same base radius and height. What is the ratio of their volumes?', "The formula for the volume of a cone is V = 1/3πr²h, and the formula for the volume of a cylinder is V = πr²h. If a cone and a cylinder have the same base radius (r) and height (h), their volumes will be in the ratio of 1/3 to 1, or 1:3. This is because the 1/3 in the formula for the cone's volume represents the fact that a cone is basically one third of a cylinder if they have the same base and height."), ("import data.real.basic\n\n-- Let's denote the number of marbles Peter has as `x` \n-- and the number of marbles John has as `2x`\nvariables (x : ℝ)\n\n-- The total number of marbles is 30, so we have the equation `x + 2x = 30`\ndef marble_eqn := x + 2*x\n\n-- Solving the equation gives `x = 10`\nexample : marble_eqn 10 = 30 :=\nbegin\n  unfold marble_eqn,\n  norm_num,\nend\n\n-- So, Peter has 10 marbles and John has 20 marbles\nexample : (2 * 10) = 20 :=\nbegin\n  norm_num,\nend", 'John has twice as many marbles as Peter. If the total number of marbles they have is 30, how many marbles does each of them have?', 'Let the number of marbles Peter has be x. Therefore, the number of marbles John has is 2x. Given that the total number of marbles is 30, we can set up the equation x + 2x = 30. Solving this equation gives us x = 10. So, Peter has 10 marbles and John has 20 marbles.'), ('import data.real.basic\n\n-- defining the cost function\ndef C (x : ℝ) := 500 + 20*x\n\n-- calculating the cost for 50 units\n#eval C 50 -- returns 1500', 'A company manufactures a certain product. The cost of manufacturing x units of the product is given by the equation C = 500 + 20x where C is the cost in dollars. If the company wants to manufacture 50 units of the product, what will be the total cost?', "The cost function is C = 500 + 20x. We're asked to find the cost when x = 50 units. Simply plug 50 in place of x in the equation and calculate the value. So, C = 500 + 20*50 = 500 + 1000 = 1500. Therefore, the total cost for manufacturing 50 units will be $1500."), ('import data.real.basic\n\n-- Proof\nexample : ∃ x : ℝ, x^2 = 4 ∧ (x + 2)^2 = 16 :=\nbegin\n  use 2,\n  split,\n  { norm_num, },\n  { norm_num, },\nend', "Let's consider a square with side length x. If the length of the side of the square is increased by 2 units, the area of the square increases by 12 square units. Find the length of the side of the original square.", 'The area of the original square is x^2. When the side length is increased by 2 units, the new side length becomes (x+2), and the new area becomes (x+2)^2. According to the problem, the increase in area is 12 square units, so (x+2)^2 - x^2 = 12. \n\nExpanding (x+2)^2 gives x^2 + 4x + 4, so the equation becomes x^2 + 4x + 4 - x^2 = 12. Simplifying, 4x + 4 = 12, or 4x = 8. Therefore, x = 8/4 = 2. Thus, the side length of the original square is 2 units.'), ('open nat\n\n-- total number of students\ndef total_students := 1200\n\n-- percentage of students to be surveyed\ndef percentage_surveyed := 5\n\n-- number of students to be surveyed\ndef students_surveyed := total_students * percentage_surveyed / 100\n\n#eval students_surveyed -- output will be 60', "In a high school, a survey is conducted to study the correlation between students' daily screen time and their GPA. There are 1200 students in total, and the school decides to perform the survey on a simple random sample of students. The school decided to select 5% of the population. How many students will be surveyed?", 'To find out how many students will be surveyed, we have to calculate the 5% of the total students. So, to find the number of students to be surveyed, we multiply the total number of students by the percentage of the population to be surveyed (in decimal form). \n\nSo, the calculation is 1200 (total students) x 0.05 (5% in decimal form) = 60. \n\nSo, 60 students will be surveyed.'), ('variables (x y : ℕ) -- declare x and y as natural numbers\n\n-- given values\ndef johns_apples := 5\ndef mikes_apples := 8\ndef johns_final_apples := 10\n\n-- total apples after Mike gave to John\ndef total_apples := johns_apples + mikes_apples \n-- total apples John gave to his sister\ndef john_gave := total_apples - johns_final_apples\n\n-- proof that John gave his sister 3 apples\nexample : john_gave = 3 :=\nbegin\n  unfold john_gave total_apples,\n  rw johns_apples,\n  rw mikes_apples,\n  rw johns_final_apples,\n  -- remove refl,\nend', 'John has 5 apples and his friend, Mike, gave him x apples as a gift. Then John realized that he had too many apples, so he gave y apples to his sister. In the end, John found that he had exactly 10 apples left. If Mike gave John 8 apples, how many apples did John give to his sister?', "First, let's add the number of apples John originally had (5 apples) to the number of apples Mike gave to John (8 apples), we get 5 + 8 = 13 apples. Then, since John had 10 apples left after giving some to his sister, we subtract this from the total number of apples we calculated earlier to find out how many apples John gave to his sister. So, 13 - 10 = 3 apples. Therefore, John gave his sister 3 apples."), ('-- defining variables\ndef total_beads := 60\ndef boxes := 3\ndef beads_per_box := total_beads / boxes\n\n-- proof\nexample : beads_per_box = 20 :=\nbegin\n  -- calculation\n  exact dec_trivial,\nend', 'Jane wants to make a necklace using beads. She has 3 boxes of beads. Each box contains the same amount of beads. After using 10 beads, she still has 50 beads left. How many beads were in each box?', 'Given that Jane has 3 boxes of beads and after using 10 beads she has 50 left, this means she originally had 60 beads in total (50 + 10). Since each box contains the same amount of beads, we can find the number of beads in each box by dividing the total number of beads by the number of boxes. Hence, Jane had 60 / 3 = 20 beads in each box.'), ('variables (x : ℕ) -- x is the number of books Peter has\n\n-- The number of books John has is 3 times the number of books Peter has\ndef John_books : ℕ := 3 * x\n\n-- Proving that if Peter has 10 books, then John has 30 books.\nexample : (John_books 10 = 30) :=\nbegin\n  unfold John_books, -- expands the definition of John_books\n  exact dec_trivial, -- finishes the proof\nend', 'John has 3 times as many books as Peter. If we let x be the number of books Peter has, write an expression for the number of books John has. Also, if Peter has 10 books, how many books does John have?', 'We can write the number of books John has as 3x, where x is the number of books Peter has. If Peter has 10 books, we can substitute x with 10 in the expression 3x. So, the number of books John has is 3 * 10, which equals 30 books.'), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def price_per_flower := (0.75 : ℝ)\ndef number_of_flowers := (68 : ℕ)\n\n-- defining the function that calculates the total money made\ndef total_money_made (price_per_flower : ℝ) (number_of_flowers : ℕ) : ℝ :=\nprice_per_flower * (number_of_flowers : ℝ)\n\n-- proof that John made $51\nexample : total_money_made price_per_flower number_of_flowers = 51 :=\nbegin\n  unfold total_money_made,\n  rw [price_per_flower, number_of_flowers],\n  norm_num,\nend', 'John has a garden where he grows flowers. He sells each flower for $0.75. One day, he sold 68 flowers. How much money did John make that day?', 'To find out how much money John made, we need to multiply the number of flowers he sold (68) by the price of each flower ($0.75). By doing so, we get:\n\n68 * $0.75 = $51\n\nSo, John made $51 that day.'), ("import data.real.basic\n\n-- Let's define our variables\nnoncomputable def C (x : ℝ) := 10 + 0.5*x  -- total cost\ndef R (x : ℝ) := x  -- total revenue\n\n-- We want to find x such that C x = R x\nexample : ∃ x : ℝ, C x = R x ∧ x = 20 :=\nbegin\n  use 20,  -- We claim that x = 20 is a solution\n  split,  -- We have to prove two things\n  -- First, we prove that C 20 = R 20\n  { unfold C R, norm_num, },\n  -- Then, we prove that this x is indeed 20\n  { refl, },\nend", 'John and Mary are planning to start a lemonade stand. They calculate their cost to be $10 for the lemonade ingredients plus $0.50 for each cup they sell. If they plan to sell each cup of lemonade for $1, how many cups do they need to sell to break even?', 'This problem can be solved using basic algebraic equations. The total cost is represented by the equation C = 10 + 0.5x, where x is the number of cups they sell, and the total revenue is represented by the equation R = 1x. To break even, the total cost must equal the total revenue, so we can set the two equations equal to each other and solve for x:\n\n10 + 0.5x = 1x\nSubtract 0.5x from both sides to get:\n10 = 0.5x\nThen divide both sides by 0.5 to solve for x:\nx = 20\n\nSo, John and Mary need to sell 20 cups of lemonade to break even.'), ('-- Formal proof in Lean 3 is not applicable as Lean 3 is a theorem prover for logic and mathematics, \n-- and does not directly handle real-world problems and the related computations.', 'A company discovered that the rate at which people are subscribing to their new service is decreasing. They determined that the number of new subscriptions can be modeled by the function N(t) = -2t^2 + 40t + 1000, where t is the time in weeks since the service was launched and N(t) is the number of new subscriptions at time t. \n\nAt what time is the number of new subscriptions at its maximum and what is the maximum number of new subscriptions?', "To find the maximum number of new subscriptions, we need to find the maximum value of the function N(t), which can be found by taking the derivative of N(t) and setting it equal to zero. \n\nThe derivative of N(t) is N'(t) = -4t + 40. \n\nSetting N'(t) equal to zero and solving for t gives us t = 10 weeks. \n\nSubstituting t = 10 into the original function N(t) gives us N(10) = -2*(10)^2 + 40*10 + 1000 = 1200. \n\nTherefore, the maximum number of new subscriptions is 1200 and it occurs at t = 10 weeks."), ('import data.real.basic\n\nopen_locale classical\n\n-- defining the problem\nnoncomputable def tom_pizza := (2 : ℝ) / 3\nnoncomputable def jerry_pizza := (1 : ℝ) / 2\n\n-- defining the solution\nnoncomputable def total_pizza := tom_pizza + jerry_pizza\n\n-- proving the solution\ntheorem solution : total_pizza = 7 / 6 :=\nbegin\n  unfold total_pizza tom_pizza jerry_pizza,\n  norm_num,\nend', 'Tom has 2/3 of a pizza and Jerry has 1/2 of a pizza. They combine their pizzas. How much pizza do they have in total?', 'To solve the problem, we need to add the fractions 2/3 and 1/2. To add fractions, we need to find a common denominator, which is a number that both 3 and 2 can divide into. The smallest such number is 6. Therefore, we rewrite 2/3 as 4/6 and 1/2 as 3/6. Then, we add the two fractions to get 7/6. So, Tom and Jerry have 7/6 of a pizza which is equal to 1 1/6 pizzas.'), ("import data.real.basic\n\n-- Let's represent the problem as a system of equations\n-- We'll use x to represent the distance traveled south to the waterfall\n-- We have the equation 5 - x = 0\n\ndef distance_south_to_waterfall (x : ℝ) : Prop := 5 - x = 0\n\n-- Proof that the distance traveled south to waterfall is 5 miles\nexample : exists x : ℝ, distance_south_to_waterfall x :=\nbegin\n  use 5,\n  unfold distance_south_to_waterfall,\n  norm_num,\nend", 'A hiker starts at a campsite and travels 5 miles north and 12 miles east to reach a scenic overlook. He then travels x miles south and 13 miles west to reach a waterfall. If the hiker is no further north or south from the starting point after reaching the waterfall, how far did he travel south to reach the waterfall?', "We can set up a system of equations based on the hiker's north-south and east-west movements. We know that the hiker starts and ends at the same latitude, so his northward and southward movements must cancel out. This gives us the equation 5 - x = 0, meaning he travelled 5 miles south to reach the waterfall."), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 5 3 = 15 :=\nbegin\n  unfold rectangle_area,\n  rw nat.mul_comm,\n  exact dec_trivial,\nend', 'Given that the area of a rectangle is derived from the formula length times width. If the length of a rectangle is 5 units and the width is 3 units, what is the area of the rectangle?', 'The area of a rectangle can be calculated by multiplying the length by the width. Since we know that the length is 5 units and the width is 3 units, we can multiply these two numbers together to get the area. Therefore, the area of the rectangle is 5 units times 3 units equals 15 square units.'), ('import data.real.basic\n\n-- defining the variables\ndef total_students := 1000\ndef music_students := 400\ndef sports_students := 350\ndef both_students := 150\n\n-- defining the function for students who participate in at least one activity\ndef at_least_one_activity := music_students + sports_students - both_students\n\n-- defining the function for the probability calculation\nnoncomputable def probability (total_students at_least_one_activity : ℕ) : ℝ := at_least_one_activity / total_students\n\n-- proving the theorem\ntheorem prob_at_least_one_activity : probability total_students at_least_one_activity = 0.6 :=\nbegin\n  unfold probability at_least_one_activity,\n  unfold total_students music_students sports_students both_students,\n  norm_num,\nend', 'In a high school of 1000 students, we have two types of extracurricular classes: music and sports. Students can choose either one or both. The school conducted a survey and found that 400 students took music classes, 350 students took sports classes, and 150 students took both. If a student is chosen at random, what is the probability that they participate in at least one of the activities?', "The total number of students who participate in at least one of the activities is the sum of the number of students who took the music class and the number of students who took the sports class, minus the number of students who took both (since they're counted twice). \n\nSo, the total number of students who participate in at least one of the activities is 400 (music) + 350 (sports) - 150 (both) = 600.\n\nTherefore, the probability that a randomly chosen student participates in at least one of the activities is the number of students who participate in at least one of the activities divided by the total number of students, i.e., 600/1000 = 0.6."), ('open nat\n\n-- declare variables\nvariables (w l a : ℕ)\n\n-- hypothesis that the width is 4 units\ndef width := 4\n\n-- hypothesis that the length is 5 times the width\ndef length := 5 * width\n\n-- calculation of area\ndef area := length * width\n\n-- proof that the area is 80\nexample : area = 80 :=\nbegin\n  unfold area,\n  unfold length,\n  unfold width,\n  exact dec_trivial,\nend', 'In a rectangle, the length is 5 times the width. If the width of the rectangle is 4 units, what is the area of the rectangle?', 'To find the area of a rectangle, we multiply its length by its width. Given that the width is 4 units, and the length is 5 times the width, the length of the rectangle is therefore 5 * 4 = 20 units. So, the area of the rectangle is 20 * 4 = 80 square units.'), ('import data.real.basic\n\n-- Define the two equations\ndef eq1 (x y : ℝ) : Prop := 3*x + 2*y = 20\ndef eq2 (x y : ℝ) : Prop := 4*x - y = 11\n\n-- Prove that the system of equations has a solution\nexample : ∃ x y : ℝ, eq1 x y ∧ eq2 x y :=\nbegin\n  use 42/11, use (20 - 3*(42/11))/2,\n  split,\n  { -- Prove that x and y satisfy eq1\n    unfold eq1,\n    norm_num, },\n  { -- Prove that x and y satisfy eq2\n    unfold eq2,\n    norm_num, }\nend', 'Solve the following system of equations:\n\n1. 3x + 2y = 20\n2. 4x - y = 11', 'First, we can multiply the second equation by 2 to make the coefficient of y in the second equation the same as that in the first equation, which gives us 8x - 2y = 22. \n\nThen, we can add the first equation and the modified second equation together, which gives us 11x = 42. \n\nBy dividing both sides by 11, we can solve for x, which gives us x = 42/11 = 3.81818182 approx. \n\nThen, we can substitute x = 3.81818182 into the first equation, which gives us 3*3.81818182 + 2y = 20. By simplifying this equation, we get y = (20 - 3*3.81818182)/2 = 2.09090909 approx. \n\nSo, the solution to this system of equations is x = 3.81818182 and y = 2.09090909.'), ('import data.int.basic\n\nopen int\n\n-- Define the initial amount of money John has, the cost of apples and oranges, and the quantities he bought.\ndef john_initial_money : ℤ := 10\ndef apple_cost : ℤ := 2\ndef orange_cost : ℤ := 3\ndef apples_bought : ℤ := 2\ndef oranges_bought : ℤ := 1\n\n-- Calculate the total cost of apples and oranges.\ndef total_cost : ℤ := (apple_cost * apples_bought) + (orange_cost * oranges_bought)\n\n-- Calculate the amount of money John has left after buying the fruits.\ndef john_remaining_money : ℤ := john_initial_money - total_cost\n\n-- Prove that John has $3 left after buying the fruits.\nexample : john_remaining_money = 3 :=\nbegin\n  unfold john_remaining_money total_cost,\n  unfold john_initial_money apple_cost orange_cost apples_bought oranges_bought,\n  simp,\n  refl,\nend', 'John has $10. He goes to a market where apples cost $2 each and oranges cost $3 each. If he buys 2 apples and 1 orange, how much money does he have left?', 'First, we need to determine how much money John spent. He bought 2 apples at $2 each, costing him a total of $4. He also bought 1 orange at a cost of $3. So, he spent $4 on apples and $3 on oranges, for a total of $7. \n\nJohn started with $10, so after spending $7, he has $10 - $7 = $3 left.'), ("import data.real.basic\n\n-- let's define the radii and diameters of the circles\ndef r1 := 5\ndef r2 := 3\ndef d1 := 2 * r1\ndef d2 := 2 * r2\n\n-- now we can prove that the length of CD (d2) is 6 units\nexample : d2 = 6 :=\nbegin\n  unfold d2,\n  unfold r2,\n  norm_num,\nend", "Let's consider a circle with a center at point O and a radius of 5 units. A line passing through the center O intersects the circle at points A and B. The line segment AB is the diameter of the circle. Another circle with the same center O and a radius of 3 units is inside the larger circle. The line passing through O intersects the smaller circle at points C and D such that OC = OD = 3 units. The line segments AB and CD are parallel to each other. What is the length of the line segment CD?", 'Since the line segments AB and CD are diameters of their respective circles and they are parallel to each other, it means they have the same direction but different lengths. The length of line segment AB is twice the radius of the larger circle, which is 2*5 = 10 units. The length of line segment CD is twice the radius of the smaller circle, which is 2*3 = 6 units. Therefore, the length of the line segment CD is 6 units.'), ('import data.nat.basic\n\nopen nat\n\n#eval nat.gcd 27 18', 'John has 27 apples and 18 oranges. He wants to give each of his friends an equal number of fruits without mixing the types of fruits. What is the maximum number of friends that John can give fruits to?', "To find the maximum number of friends John can give fruits to, we need to find the greatest common divisor (GCD) of the number of apples (27) and the number of oranges (18).\n\nFirst, let's find the factors of 27: 1, 3, 9, 27.\nThen, we find the factors of 18: 1, 2, 3, 6, 9, 18.\n\nThe common factors are 1, 3 and 9. The highest number is 9.\n\nTherefore, the maximum number of friends that John can give fruits to is 9."), ('open nat\n\n-- defining the initial number of candies\ndef john_initial_candies := 10\ndef candies_given_to_mary := 3\ndef candies_from_mom := 15\n\n-- calculating the number of candies after giving to Mary\ndef john_candies_after_giving := john_initial_candies - candies_given_to_mary\n\n-- calculating the final number of candies after receiving from mom\ndef john_final_candies := john_candies_after_giving + candies_from_mom\n\n-- proving that John has 22 candies at the end\nexample : john_final_candies = 22 :=\nbegin\n  unfold john_final_candies, -- replace `john_final_candies` with its definition\n  unfold john_candies_after_giving, -- replace `john_candies_after_giving` with its definition\n  refl, -- the goal is now `22 = 22`\nend', 'John has 10 candies. He gave 3 candies to his friend, Mary. Then, his mother gave him another 15 candies. How many candies does John have now?', 'John had 10 candies initially. After giving 3 candies to Mary, he was left with 10 - 3 = 7 candies. When his mother gave him another 15 candies, his total number of candies became 7 + 15 = 22. Therefore, John has 22 candies now.'), ('-- Part 1: Confidence interval calculation is not supported in Lean.\n\n-- Part 2: Triangle congruence\nimport data.real.basic\n\ndef is_congruent (a b c d e f: ℝ) : Prop :=\na = d ∧ b = e ∧ c = f\n\ntheorem not_congruent :\n  ¬is_congruent 3 4 5 6 8 10 :=\nbegin\n  unfold is_congruent,\n  intro h,\n  cases h with h1 h2,\n  cases h2 with h2 h3,\n  linarith,\nend', 'In a high school, a survey was conducted to estimate the average score on a math test. The sample size was 100 students and the average score was 75. The standard deviation was 10. A 95% confidence interval for the average score was calculated using this data. \n\nIn the same school, another test was conducted for a geometry course. Two triangles were given to the students. Triangle ABC has sides of lengths 3, 4, and 5. Triangle DEF has sides of lengths 6, 8, and 10. \n\nPart 1: Calculate the 95% confidence interval for the average math test score.\nPart 2: Determine if triangles ABC and DEF are congruent.', 'Part 1: The 95% confidence interval for the mean can be calculated using the formula: X ± Z * (σ/√n), where X is the sample mean, Z is the z-value (for a 95% confidence interval, Z=1.96), σ is the standard deviation, and n is the sample size. Plugging the values into the formula, we get:\n\n75 ± 1.96 * (10/√100) = 75 ± 1.96 * 1 = 75 ± 1.96. So the 95% confidence interval for the average math test score is (73.04, 76.96).\n\nPart 2: Triangles ABC and DEF are similar because they have the same set of side lengths (3,4,5) and (6,8,10) respectively. However, they are not congruent because the lengths of the corresponding sides are not equal. For two triangles to be congruent, their corresponding sides and angles must be equal and in this case, the sides of triangle DEF are twice as long as the sides of triangle ABC. Therefore, triangles ABC and DEF are not congruent.'), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 8 5 = 40 := \nbegin \n  unfold rectangle_area, \n  rw nat.mul_comm, \n  exact dec_trivial, \nend', 'Suppose we have a rectangle with a length of 8 units and a width of 5 units. What is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying its length by its width. In this case, the length of the rectangle is 8 units and the width is 5 units. By multiplying these two measurements together, we get 40 square units. Therefore, the area of the rectangle is 40 square units.'), ('import data.real.basic\n\nexample : (3 / 4 : ℝ) - (1 / 2 : ℝ) = 1 / 4 :=\nbegin\n  norm_num,\nend', 'Given that the fractions 3/4 and 1/2, prove that subtracting 1/2 from 3/4 equals to 1/4.', 'To subtract fractions, they need to have the same denominator. Here, the denominators are 4 and 2. The least common denominator is 4. So we leave 3/4 as it is and convert 1/2 to 2/4. Now we can subtract the fractions. This results in 3/4 - 2/4 = 1/4. Hence, we have proved that subtracting 1/2 from 3/4 equals to 1/4.'), ('import data.real.basic\n\ndef volume_of_box (length : ℝ) (width : ℝ) (height : ℝ) : ℝ :=\nlength * width * height\n\n#eval volume_of_box 3 4 5   -- The output will be 60', 'A rectangular box has dimensions 3m, 4m, and 5m. If we draw a line from one corner of the box to the opposite corner, what is the volume of the box if each unit of the drawn line represents 1 cubic meter?', 'The volume of a rectangular box (also known as a rectangular prism) is given by the product of its length, width, and height. In this case, the length is 3m, the width is 4m, and the height is 5m. Therefore, the volume of the box is 3m * 4m * 5m = 60 cubic meters.'), ("import data.real.basic\n\n-- Declare the variables\nvariables (money_start : ℝ) (weeks : ℕ)\n\n-- Define the function for Jennifer's saving\ndef saving (money_start : ℝ) (weeks : ℕ) : ℝ := money_start * (2 ^ weeks)\n\n-- Prove the question\nexample : saving 10 4 = 160 :=\nbegin\n  unfold saving, -- Apply the definition of saving\n  norm_num, -- Simplify the numerical calculation\nend", 'Jennifer has been saving money for a trip. She started with $10 and each week she doubles the amount of money she has saved. How much money will Jennifer have saved after 4 weeks?', 'To solve this problem, we need to use the concept of exponents. Jennifer is doubling her money every week, so we can write this as 2^n, where n is the number of weeks. At the end of the 4th week, we have to calculate 2^4, which equals 16. So, Jennifer will have 16 times the amount she started with. Since she started with $10, Jennifer will have 16 * $10 = $160 at the end of the 4th week.'), ('import data.real.basic\n\n-- The definition of area of rectangle\ndef rectangle_area (length : ℝ) (width : ℝ) : ℝ := length * width\n\n-- Prove the area of the rectangle is 12\nexample : rectangle_area 4 3 = 12 :=\nbegin\n    unfold rectangle_area, -- apply the definition of rectangle area\n    norm_num, -- simplify the multiplication\nend', 'If we have a rectangle with a length of 4 units and a width of 3 units, what is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. In this case, we multiply the length, which is 4 units, by the width, which is 3 units. So, 4 units times 3 units equals 12 square units. Therefore, the area of the rectangle is 12 square units.'), ('import data.real.basic\n\ndef area_of_rectangle (length breadth : ℝ) : ℝ :=\nlength * breadth\n\nexample : area_of_rectangle 15 10 = 150 :=\nbegin\n  unfold area_of_rectangle,\n  norm_num,\nend', 'In a rectangle ABCD, AB is 5 units longer than BC. If the length of BC is 10 units, what is the area of the rectangle ABCD?', 'Firstly, recall that the area of a rectangle is calculated by multiplying its length by its breadth. In the given rectangle ABCD, AB is the length and BC is the breadth. According to the problem, BC is 10 units and AB is 5 units longer than BC which makes it 15 units. Therefore, the area of the rectangle ABCD is 15 units * 10 units = 150 square units.'), ("import data.real.basic\n\n-- Let's define the area of the field as a function of x\ndef A (x : ℝ) : ℝ := 2 * x^2\n\n-- Prove that the maximum possible area is 20000 square meters\nexample : A 100 = 20000 :=\nbegin\n  unfold A, -- expand the definition of A\n  norm_num, -- simplify the arithmetic expression\nend", 'A farmer is planning to build a new rectangular field. The length of the field will be twice its width. The farmer has 600 meters of fencing available. What is the maximum possible area that the field can have?', "First, let's denote the width of the rectangular field as x. Given that the length is twice the width, it is 2x. The perimeter of the field is 2*width + 2*length, which equals 2x + 4x = 6x. The farmer has 600 meters of fencing, so 6x = 600, which gives x = 100. \n\nThe area of the rectangle is the length multiplied by the width, i.e., A = x * 2x = 2x^2. Substituting x = 100, A = 2*(100)^2 = 20000 square meters. Therefore, the maximum possible area that the field can have is 20000 square meters."), ('import data.real.basic   -- import library for real numbers\n\nnoncomputable def average_speed (distance : ℝ) (time : ℝ) : ℝ :=\n    distance / time\n   \nexample : average_speed 300 5 = 60 :=\n    begin\n        unfold average_speed,   -- expand the definition of average_speed\n        norm_num                -- perform numerical simplification\n    end', "If a car travels 300 miles in 5 hours, what is the car's average speed in miles per hour?", 'The average speed of the car is calculated by dividing the total distance traveled by the total time taken. In this case, the car has traveled 300 miles in 5 hours. Thus, the average speed is 300 miles divided by 5 hours, which equals 60 miles per hour.'), ('import data.real.basic\n\nnoncomputable theory\n\nopen real\n\ndef f (x : ℝ) : ℝ :=\nif (0 ≤ x ∧ x ≤ 1) then 3 * x ^ 2 else 0\n\ndef expected_value (a b : ℝ) (f : ℝ → ℝ) : ℝ :=\n(b^4 / 4 - a^4 / 4) * 3\n\nlemma expected_value_f :\nexpected_value 0 1 f = 3 / 4 :=\nbegin\n  unfold expected_value,\n  norm_num,\nend', 'Let X be a random variable with a probability density function (PDF) given by `f(x) = 3x^2` for `0 ≤ x ≤ 1` and `f(x) = 0` otherwise. Calculate the expected value (mean) of X.', 'The expected value (mean) of a continuous random variable X is given by the integral of `x*f(x)` over all possible values of X. In this case, as `f(x) = 3x^2` for `0 ≤ x ≤ 1` and `f(x) = 0` otherwise, the expected value is the integral from 0 to 1 of `x*3x^2 dx` which simplifies to `3 ∫x^3 dx` from 0 to 1. The antiderivative of `x^3` is `1/4 * x^4`, so the expected value is `3 * [1/4 * (1)^4 - 1/4 * (0)^4] = 3/4`.'), ('import data.real.basic\n\nvariables (u v : ℝ)\n\ndef f (x y : ℝ) : ℝ := x^2 + y^2\ndef T (u v : ℝ) : ℝ × ℝ := (u + v, u - v)\ndef g (u v : ℝ) : ℝ := f (T u v).1 (T u v).2\n\ntheorem transformation_of_function :\n  g u v = (u + v)^2 + (u - v)^2 :=\nbegin\n  unfold g,\n  unfold f,\n  unfold T,\nend', 'Suppose we have a function `f(x, y) = x^2 + y^2` and we apply the transformation `T(u, v) = (u + v, u - v)`. What is the new function `g(u, v)` after the transformation?', 'To find the new function `g(u, v)` after applying the transformation `T(u, v) = (u + v, u - v)`, we substitute `x = u + v` and `y = u - v` into the original function `f(x, y) = x^2 + y^2`. So, we get `g(u, v) = (u + v)^2 + (u - v)^2`.'), ('import data.real.basic\n\ndef ate_candies (total_candies : ℕ) (percent : ℕ) : ℕ := \n  total_candies * percent / 100\n\nexample : ate_candies 100 25 = 25 :=\nbegin\n  unfold ate_candies,\n  norm_num,\nend', 'John has a bag of 100 pieces of candy. He ate 25% of the candies in the bag. How many candies did John eat?', 'To solve this problem, we need to find 25% of the total candies John has, which is 100. The word "percent" means "out of 100", so 25% can be written as 25/100. Therefore, we can multiply the total candies by 25/100 to get the number of candies John ate. So, 100 * 25/100 = 25. Therefore, John ate 25 candies.'), ('import data.nat.basic\n\nopen nat\n\ntheorem add_ten_to_253 : 253 + 10 = 263 :=\nbegin\n  exact rfl,\nend', 'If we have the number 253 and we add 10 to it, is the sum equal to 263?', "Yes, the sum is equal to 263. In the place value system, the number 253 is made up of 200 (2 hundreds), 50 (5 tens), and 3 (3 ones). When we add 10 to it, we're effectively increasing the tens place by 1 (from 5 to 6). So, the new number is now 200 (2 hundreds), 60 (6 tens), and 3 (3 ones), which is 263."), ('open nat\n\ndef billys_apples : ℕ := 45\ndef maria_takes : ℕ := 30\ndef maria_gives : ℕ := 15\n\nexample : (billys_apples - maria_takes) + maria_gives = 30 :=\nbegin\n  have h: billys_apples - maria_takes = 15,\n  exact dec_trivial,\n  rw h,\n  have h1: 15 + maria_gives = 30,\n  exact dec_trivial,\n  rw h1,\nend', 'If Billy has 45 apples and Maria takes away 30 apples, how many apples does Billy have now? If Maria then gives Billy 15 more apples, how many apples does Billy have in total?', 'Billy starts with 45 apples. When Maria takes away 30 apples, Billy has 45 - 30 = 15 apples left. Then, when Maria gives Billy 15 more apples, Billy ends up with 15 + 15 = 30 apples. So, in total, Billy has 30 apples.'), ("open nat\n\n-- let's define the variables\ndef johns_money := 100\ndef video_game_price := 150\ndef weekly_allowance := 10\n\n-- define the amount John needs more to buy the video game\ndef money_needed := video_game_price - johns_money\n\n-- define the number of weeks he needs to save his allowance\ndef weeks_needed := money_needed / weekly_allowance\n\n-- now we can prove that John needs 5 weeks to save enough money\nexample : weeks_needed = 5 :=\nbegin\n  unfold weeks_needed,\n  unfold money_needed,\n  rw video_game_price,\n  rw johns_money,\n  rw weekly_allowance,\n  exact rfl,\nend", 'John has $100 in his bank account. He wants to save up for a new video game that costs $150. His parents give him an allowance of $10 every week. If he saves all his allowance money, how many weeks will it take for John to have enough money to buy the video game?', 'John needs $150 for the video game, and he already has $100. So, he needs $150 - $100 = $50 more to buy the video game. He gets $10 every week from his parents. Therefore, he needs $50 ÷ $10 = 5 weeks to save enough money to buy the video game.'), ("import data.real.basic\n\n-- define the lengths\ndef AB : ℝ := 8\ndef BC : ℝ := 5\ndef A'B' : ℝ := 4\ndef B'C' : ℝ := 10\n\n-- state the theorem\ntheorem transformation : A'B' / AB = 0.5 ∧ B'C' / BC = 2 :=\nbegin\n  -- split the proof into two parts\n  split,\n  -- prove the first part\n  { unfold AB A'B',\n    norm_num, },\n  -- prove the second part\n  { unfold BC B'C',\n    norm_num, },\nend", "Consider a rectangle ABCD with AB = 8 units and BC = 5 units. A transformation T maps rectangle ABCD to rectangle A'B'C'D'. If the length of A'B' is 4 units and the length of B'C' is 10 units, prove that T is a combination of a reduction by a scale factor of 0.5 and a stretch by a scale factor of 2.", "The transformation T maps rectangle ABCD to rectangle A'B'C'D'. The length AB becomes the length A'B' and the length BC becomes the length B'C'. \n\nGiven that AB = 8 units and A'B' = 4 units, the ratio of the lengths is A'B'/AB = 4/8 = 0.5. This shows that the transformation includes a reduction by a scale factor of 0.5 along the direction parallel to AB.\n\nSimilarly, given that BC = 5 units and B'C' = 10 units, the ratio of the lengths is B'C'/BC = 10/5 = 2. This shows that the transformation includes a stretch by a scale factor of 2 along the direction parallel to BC.\n\nHence, the transformation T is a combination of a reduction by a scale factor of 0.5 and a stretch by a scale factor of 2."), ('import data.real.basic\n\n-- defining the variables\ndef l := (8 : ℝ) -- length of the garden in meters\ndef w := (5 : ℝ) -- width of the garden in meters\n\n-- defining the function for the perimeter of a rectangle\ndef perimeter_of_rectangle (l w : ℝ) := 2*(l + w)\n\n-- calculating the perimeter\n#eval perimeter_of_rectangle l w \n-- output: 26', 'Billy has a rectangular garden. The length of the garden is 8 meters and the width is 5 meters. Billy wants to build a fence around the garden to keep animals out. Can you help Billy calculate how many meters of fencing he needs to build the fence?', 'To find out how many meters of fencing Billy needs, we need to calculate the perimeter of the rectangular garden. The formula to calculate the perimeter of a rectangle is 2*(length + width). So, we just need to substitute the given values into the formula. That is 2*(8 meters + 5 meters) = 2*13 meters = 26 meters. Therefore, Billy needs 26 meters of fencing to build the fence around his garden.'), ('def pattern (n : ℕ) : ℕ := 3 + 4*(n-1)\n#eval pattern 10 -- Returns 39', 'In a pattern that follows the rule "add 4" each time, if the first term is 3, what will be the 10th term?', 'To find the 10th term in a pattern that follows the rule "add 4" each time, we start with the first term and add 4 nine times (since there are 9 intervals from the first to the tenth term). The first term is 3, so we calculate 3 + 4*9 = 39. Thus, the 10th term of the pattern is 39.'), ('open nat\n\ndef pieces_eaten (total_pieces : ℕ) (fraction_eaten : ℕ) : ℕ :=\n  (fraction_eaten * total_pieces) / 4\n\nexample : pieces_eaten 8 3 = 6 :=\nbegin\n  unfold pieces_eaten,\n  exact dec_trivial,\nend', 'Alice has a chocolate bar that is divided into 8 equal pieces. She eats 3/4 of the bar. How many pieces of the bar does Alice eat?', 'Alice eats 3/4 of the chocolate bar. Since the chocolate bar is divided into 8 pieces, to find how many pieces Alice eats, we need to multiply 3/4 by 8. This gives us 6 pieces. Therefore, Alice eats 6 pieces of the chocolate bar.'), ('def calculate_perimeter (length : ℕ) (width : ℕ) : ℕ := 2 * (length + width)\n\ndef convert_to_yards (feet : ℕ) : ℕ := feet / 3\n\ndef round_up (num : ℕ) : ℕ := if num % 3 = 0 then num else num + 1\n\ndef calculate_fence_needed (length : ℕ) (width : ℕ) : ℕ :=\n  let perimeter := calculate_perimeter length width in\n  let yards := convert_to_yards perimeter in\n  round_up yards\n\n#eval calculate_fence_needed 18 14  -- returns 22 ', 'Susie has a garden that is 18 feet long and 14 feet wide. She wants to build a fence around her garden, but the store only sells fencing by the yard. How many yards of fence should Susie buy?', "To find out how much fence Susie should buy, we first need to calculate the perimeter of her garden. The perimeter of a rectangle can be calculated with the formula 2*(length + width). Thus, the perimeter of Susie's garden in feet is 2*(18 + 14) = 64 feet. \nSince 1 yard equals 3 feet, we need to convert the perimeter from feet to yards by dividing the total number of feet by 3. So, 64 feet is equal to 64/3 = 21.33 yards. Since Susie can't buy a fraction of a yard of fencing, she will need to buy 22 yards of fencing to ensure she has enough."), ('open nat\n\ndef a : ℕ := 7\ndef b : ℕ := 8\ndef c : ℕ := 15\n\nexample : a + b = c := \nbegin\n  rw [a, b, c],\nend', "Let's consider three numbers: a = 7, b = 8, and c = 15. Prove that a + b = c.", 'To prove the equation a + b = c, we can simply perform the addition operation on a and b. The number 7 (a) plus the number 8 (b) equals 15, which is the number represented by c. Thus, a + b = c is proven.'), ('open nat\n\ndef total_apples (baskets : ℕ) (apples_per_basket : ℕ) (apples_removed : ℕ) : ℕ := \nbaskets * apples_per_basket - apples_removed\n\nexample : total_apples 3 5 4 = 11 :=\nbegin\nrw total_apples,\nexact dec_trivial,\nend', 'If I have 3 full baskets of apples, each containing 5 apples, and I remove 4 apples from one of the baskets, how many apples do I have in total?', 'Initially, we have 3 baskets, each with 5 apples. So, the total number of apples is 3 times 5, which equals 15. Then, we remove 4 apples from one of the baskets, the total number of apples becomes 15 minus 4, which equals 11. So, the total number of apples we have is 11.'), ('import data.int.basic\n\ndef move_picture : ℤ × ℤ → ℤ × ℤ := \nλ ⟨x, y⟩, ⟨-x, -y⟩\n\ndef picture := (0, 0)\ndef picture_after_move1 := ((-5 : ℤ), (-3 : ℤ))\n\nexample : move_picture picture_after_move1 = (5, 3) := \nbegin\n  unfold move_picture,\n  refl,\nend', 'John is trying to move a picture in a digital design software. The picture is initially at the point (0,0). He moves the picture 5 units to the left and then 3 units down. Afterwards, he decides to move the picture to its mirror image with respect to the origin. What are the final coordinates of the picture?', 'First, when John moves the picture 5 units to the left, the x-coordinate of the picture changes from 0 to -5. Then, when he moves the picture 3 units down, the y-coordinate changes from 0 to -3. So, the new coordinates of the picture are (-5,-3).\n\nNext, when John decides to move the picture to its mirror image with respect to the origin, he is actually performing a reflection transformation across the origin. For any point (x, y), its mirror image with respect to the origin is the point (-x, -y). Therefore, the final coordinates of the picture would be -(-5) and -(-3), which are 5 and 3.\n\nSo, the final coordinates of the picture are (5, 3).'), ('def box : ℕ := 4*5\ndef total_chocolates : ℕ := 2*box\ndef friends : ℕ := 6\n\n#eval total_chocolates -- calculating total chocolates\n#eval total_chocolates / friends -- calculating chocolates per friend\n#eval total_chocolates % friends -- calculating remaining chocolates', 'John has 2 boxes of chocolates. Each box contains 4 layers of chocolates and each layer has 5 pieces of chocolate. How many total pieces of chocolate does John have? In addition, he has a list of 6 friends to whom he wants to give the chocolates equally. How many pieces will each friend get?', "First, we calculate the total number of chocolates John has. Since each box has 4 layers and each layer has 5 chocolates, a box contains 4*5=20 chocolates.  \nAs John has 2 boxes, he has 2*20=40 chocolates in total. \n\nSecond, we distribute the chocolates equally among his friends. He has 6 friends. If he gives each friend the same amount, each friend will get 40/6=6.67. \n\nHowever, as we can't split the chocolates, we have to round the number down. So, each friend will get 6 pieces of chocolate and there will be 4 pieces left."), ('import data.real.basic\n\n-- defining the exponential function as a constant (placeholder)\ndef exp (r : ℝ) : ℝ := r \n\n-- defining the population function\ndef P (P0 r t : ℝ) : ℝ := P0 * exp (r*t)\n\n-- proving the substitution\ntheorem fish_population : \n  ∀ P0 r t : ℝ, P P0 r t = P0 * exp (r*t) :=\nbegin\n  intros,\n  refl,\nend', "The population of a species of fish in a lake is modeled by the exponential growth function P(t) = P0 * e^(rt), where P0 represents the initial population, r is the growth rate, t is the time in years, and e is Euler's number. Given that the initial population P0 is 5000 fish, the growth rate r is 0.02, and t is 10 years, calculate the population of the fish at the end of 10 years.", 'The given exponential growth function is P(t) = P0 * e^(rt). We know that the initial population P0 is 5000 fish, the growth rate r is 0.02, and t is 10 years.\n\nSubstituting these values into the given function, we get:\n\nP(10) = 5000 * e^(0.02*10)\n\nTherefore, the population of the fish at the end of 10 years is P(10) = 5000 * e^(0.2), which can be calculated using a calculator.'), ('import data.int.basic\n\nopen int\n\n-- define the problem in Lean\ndef johns_candies : ℤ := 50\ndef johns_remaining_candies : ℤ := 20\ndef candies_given_away (c : ℤ) : Prop := johns_candies - c = johns_remaining_candies\n\n-- prove the solution\nexample : ∃ c, candies_given_away c ∧ c = johns_candies - johns_remaining_candies :=\nbegin\n  use [johns_candies - johns_remaining_candies],\n  split,\n  { unfold candies_given_away, \n    rw sub_sub_self, },\n  { refl, },\nend', 'John had a total of 50 candies. He gave some candies to his friends. After giving away, he had 20 candies left. How many candies did John give to his friends? \n\nIf you define the number of candies John gave away as "c", please set up an equation to solve this problem and find the value of "c".', 'Let\'s denote the number of candies John gave away as "c". According to the problem, John originally had 50 candies and after giving some candies away, he had 20 candies left. So, we can set up the following equation to represent this situation: \n\n50 - c = 20\n\nTo find the value of "c", we can solve the equation by adding "c" to both sides to get:\n\n50 = c + 20\n\nThen, we subtract 20 from both sides to isolate "c" on one side of the equation:\n\nc = 50 - 20 \n\nSo, "c" equals 30, which means John gave away 30 candies to his friends.'), ('import data.real.basic\n\n-- Axiom definition for division\nnoncomputable def divide (a b : ℝ) : ℝ := a / b\n\n-- Declare variables\nvariables (yards_of_fabric : ℝ) (yards_per_dress : ℝ)\n\n-- State the problem\nexample (h1 : yards_of_fabric = 4.5) (h2 : yards_per_dress = 0.5) : \n  divide yards_of_fabric yards_per_dress = 9 :=\nbegin\n  rw [h1, h2, divide],\n  norm_num,\nend', 'If we have 4.5 yards of fabric and each dress requires 0.5 yards, how many dresses can we make?', 'In order to figure out how many dresses can be made, we need to divide the total yards of fabric by the yards required for each dress. So, if we have 4.5 yards and each dress requires 0.5 yards, we would divide 4.5 by 0.5. Doing this gives us the result of 9. Therefore, we can make 9 dresses from 4.5 yards of fabric.'), ('import data.real.basic\n\n-- Given data\nnoncomputable def mary_colored_portion := (1 : ℝ) / 2\nnoncomputable def john_colored_portion := (3 : ℝ) / 6\n\n-- Proof that Mary and John colored the same portion of their square papers\nexample : mary_colored_portion = john_colored_portion :=\nbegin\n  unfold mary_colored_portion john_colored_portion,\n  norm_num,\nend', 'Mary and John are working on a craft project. They each have a same-sized square piece of paper. Mary colored 1/2 of her square paper and John colored 3/6 of his square paper. Who colored more of their square paper?', '1/2 and 3/6 are equivalent fractions. This means that they represent the same quantity. So, Mary and John colored the same portion of their square papers. Therefore, neither Mary nor John colored more of their square paper than the other.'), ('open nat\n\ndef bucket_capacity : ℕ := 2\ndef number_of_buckets : ℕ := 3\ndef total_water : ℕ := bucket_capacity * number_of_buckets\n\nexample : total_water = 6 :=\nbegin\n  unfold total_water,\n  unfold bucket_capacity,\n  unfold number_of_buckets,\n  refl,\nend', 'John has 3 buckets. Each bucket can hold 2 liters of water. If John fills all the buckets to their maximum capacity, how many liters of water will he have in total?', 'We know that each bucket can hold 2 liters of water. So, if John has 3 buckets and he fills them all up, he will have 3 * 2 = 6 liters of water.'), ('import data.real.basic\n\nopen real\n\n-- The problem is asking for the result of 0.6 * 0.5\ndef problem := 0.6 * 0.5\n\n-- We expect the result to be 0.3\ndef expected_answer := 0.3\n\n-- The proof is simply showing that the problem equals the expected answer.\nexample : problem = expected_answer :=\nbegin\n  unfold problem expected_answer,\n  norm_num,\nend', "Let's say you have 0.6 of a pizza and you want to divide it between 2 friends equally. How much pizza will each friend get?", 'To solve this problem, you need to multiply 0.6 by 0.5 (which is the decimal equivalent of dividing by 2). When you multiply these two numbers together, you get 0.3. Therefore, each friend will get 0.3 of the pizza.'), ('import data.complex.basic\n\nopen complex\n\ndef P := 3 + 4 * I\n\ndef rotate_by_i (z : ℂ) : ℂ := z * I\n\n#eval rotate_by_i P \n--output will be -4 + 3 * I', 'Let´s consider a point P on the complex plane which has coordinates (3,4). This point is rotated 90 degrees counterclockwise around the origin. What is the complex number representation of the new point?', 'To solve this problem, we have to know that a rotation of 90 degrees counterclockwise in the complex plane corresponds to a multiplication by the complex number i. \nGiven the point P(3, 4), its complex number representation is 3 + 4i. When we multiply this number by i, we get 3i + 4i^2. As i^2 = -1, the result is 3i - 4, or -4 + 3i, which corresponds to the point with coordinates (-4, 3). This is the coordinate of the point after 90 degrees rotation.'), ('import data.real.basic\n\nopen_locale classical\n\nvariable (x :ℝ)\nvariable (y :ℝ)\nvariable (z :ℝ)\n\n#check 2*x - 3*y + 4*z\n\ndef expr_value (x y z: ℝ) : ℝ := 2*x - 3*y + 4*z\n\n#eval expr_value 5 3 7', 'Let x, y, and z be real numbers such that x = 5, y = 3, and z = 7. Find the value of the expression 2x - 3y + 4z.', 'Substitute the given values of x, y, and z into the expression. This gives:\n\n2*5 - 3*3 + 4*7 = 10 - 9 + 28 = 29.\n\nSo, the value of the expression 2x - 3y + 4z is 29.'), ('import data.rat.basic\n\ndef calculate_sum (list : list ℕ) : ℕ := \nlist.foldl (+) 0\n\ndef calculate_ratio (numerator denominator : ℕ) : ℚ := \nrat.mk numerator denominator\n\ndef group_x := [10, 15]\ndef total_group := [10, 15, 20, 5]\n\n#eval calculate_ratio (calculate_sum group_x) (calculate_sum total_group)\n-- output: 1/2', 'Given a two-way table as follows:\n\n|        |  A  |  B  |\n|--------|-----|-----|\n|   X    |  10 |  15 |\n|   Y    |  20 |  5  |\n\nWhat is the ratio of the numbers in Group X to the total?', 'To find the ratio of the numbers in Group X to the total, we first need to find the sum of the numbers in Group X, which is 10 + 15 = 25. Then, we find the total sum of all groups, which is 10 + 15 + 20 + 5 = 50. The ratio of the numbers in Group X to the total is therefore 25/50 = 1/2.'), ('import data.real.basic\n\n-- define the fractions\nnoncomputable def a := (1 : ℝ) / 2\nnoncomputable def b := (1 : ℝ) / 4\nnoncomputable def c := (1 : ℝ) / 8\n\n-- prove the theorem\nexample : a + b - c = 5 / 8 :=\nbegin\n  unfold a b c, -- replace a, b, and c with their definitions\n  norm_num, -- simplify the calculation\nend', 'Given two fractions, 1/2 and 1/4, what is the result when you add them together and then subtract 1/8 from the result?', 'First, add the given fractions together. The common denominator of 1/2 and 1/4 is 4, so we rewrite 1/2 as 2/4. Adding 2/4 and 1/4 gives us 3/4.\n\nThen, subtract 1/8 from the result. To do this, we need to rewrite 3/4 with a common denominator of 8, which gives us 6/8. Subtracting 1/8 from 6/8 leaves us with 5/8.\n\nTherefore, the result of adding 1/2 and 1/4 together and then subtracting 1/8 is 5/8.'), ('import data.real.basic\n\n-- define the equation\ndef eqn (x : ℝ) := 2*x + 3\n\n-- solve the equation\ndef sol (x : ℝ) := eqn x = 8\n\ntheorem solve_eqn : ∃ x, sol x :=\nbegin\n  use 2.5,\n  dsimp [sol, eqn],\n  norm_num,\nend', 'Given an equation 2x + 3 = 8. Solve for x.', 'To solve for x, we need to isolate x on one side of the equation. \n\nFirst, we subtract 3 from both sides of the equation. This gives us:\n\n2x + 3 - 3 = 8 - 3\n\nWhich simplifies to:\n\n2x = 5\n\nThen, we divide both sides by 2 to solve for x:\n\n2x / 2 = 5 / 2\n\nThis gives us the solution:\n\nx = 2.5'), ('import data.real.basic\n\n-- define the function f(x) = x^2\ndef f (x : ℝ) := x^2\n\n-- define the antiderivative F(x) = (1/3)x^3\nnoncomputable def F (x : ℝ) := (1/3)*x^3\n\n-- state the problem\nlemma definite_integral_f_from_0_to_4 : ((F 4) - (F 0)) = 64/3 :=\nbegin\n  -- compute the definite integral ∫[0, 4]f(x) dx\n  calc (F 4) - (F 0) = (1/3)*4^3 - (1/3)*0^3 : by refl\n  ... = 64/3 - 0 : by norm_num\n  ... = 64/3 : by norm_num\nend', 'Let function f(x) = x^2 be defined on the interval [0, 4]. Compute the definite integral of f(x) from 0 to 4.', 'To solve this problem, we need to apply the formula for the definite integral of a function which is ∫[a, b]f(x) dx = F(b) - F(a), where F(x) is the antiderivative of f(x).\n\nFirst, we find the antiderivative of f(x) = x^2. Using the power rule for integration, the antiderivative F(x) is (1/3)x^3.\n\nNext, we substitute the limits of integration into F(x): \n\nF(4) = (1/3)*4^3 = 64/3\nF(0) = (1/3)*0^3 = 0\n\nFinally, we subtract F(0) from F(4) to get the definite integral: \n\n∫[0, 4]x^2 dx = F(4) - F(0) = 64/3 - 0 = 64/3'), ('import data.real.basic\n\nopen_locale classical\n\nnoncomputable def x : ℝ := 8 / 11\nnoncomputable def y : ℝ := -21 / 11\n\ntheorem problem : 3*x - 2*y = 6 ∧ 4*x + y = 1 :=\nbegin\n  split,\n  { -- prove 3*x - 2*y = 6\n    have h₁ : (3:ℝ)*x - 2*y = 6,\n    calc (3:ℝ)*x - 2*y = 3*(8 / 11) - 2*(-21 / 11) : by rw [x, y]\n                       ... = 24 / 11 + 42 / 11 : by norm_num\n                       ... = 66 / 11 : by norm_num\n                       ... = 6 : by norm_num,\n    exact h₁ },\n  { -- prove 4*x + y = 1\n    have h₂ : (4:ℝ)*x + y = 1,\n    calc (4:ℝ)*x + y = 4*(8 / 11) + (-21 / 11) : by rw [x, y]\n                       ... = 32 / 11 - 21 / 11 : by norm_num\n                       ... = 11 / 11 : by norm_num\n                       ... = 1 : by norm_num,\n    exact h₂ }\nend', 'Given that 3x - 2y = 6 and 4x + y = 1, solve for x and y.', 'First, multiply the second equation by 2 to match the coefficient of y in the first equation. We get 8x + 2y = 2. Then, add this new equation to the first equation, we get (3x - 2y) + (8x + 2y) = 6 + 2, which simplifies to 11x = 8. So x = 8/11. Substitute x = 8/11 back into the second equation, we get 4*(8/11) + y = 1, which simplifies to y = 1 - 32/11 = -21/11.'), ('import data.real.basic\n\n-- Defining the function f(t) = 5t\ndef f (t : ℝ) := 5 * t\n\n-- Proving that the amount of water in the tank at 12:15 PM is 75 liters\nexample : f 15 = 75 :=\nbegin\n  unfold f, -- expands the definition of f\n  norm_num, -- simplifies the numerical calculation\nend', 'A tank is being filled with water at a rate of 5 liters per minute. If the process starts at 12:00 PM and stops at 12:30 PM, how much water will be in the tank by 12:15 PM?', 'The rate at which the tank is being filled is constant, so the amount of water in the tank is a function of time. We can model this situation with the function f(t) = 5t, where t is the time in minutes since 12:00 PM. To find the amount of water in the tank at 12:15 PM, we need to evaluate the function at t = 15. Hence, the amount of water in the tank at 12:15 PM is f(15) = 5*15 = 75 liters.'), ('def garden_length := 5\ndef garden_width := 3\ndef fence_segment_length := 1\n\ndef garden_perimeter := 2 * (garden_length + garden_width)\n\ndef fence_segments_needed := garden_perimeter / fence_segment_length\n\n#eval fence_segments_needed', 'John has a garden that is 5 meters long and 3 meters wide. He wants to build a small fence around it. Each fence segment is 1 meter long. How many segments does he need to surround his garden?', "To find out how many fence segments John needs, we need to calculate the perimeter of the garden. The perimeter of a rectangle (which is the shape of John's garden) is calculated by the formula 2*(length+width). So, the perimeter of John's garden is 2*(5 meters + 3 meters) = 2*8 meters = 16 meters. Since each fence segment is 1 meter long, John needs 16 fence segments to surround his garden."), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\ndef rectangle_area_doubled (length : ℕ) (width : ℕ) : ℕ := 2 * length * width\n\n#check rectangle_area 12 5     -- returns 60\n#check rectangle_area_doubled 12 5  -- returns 120', 'A rectangle has a length of 12 units and a width of 5 units. An identical rectangle is placed next to it, doubling the length and maintaining the same width. What is the new area of the complete shape?', 'The area of a rectangle is given by the formula length times width. The original rectangle has an area of 12 units * 5 units = 60 square units. When the second rectangle is added, the length doubles to 24 units, but the width remains the same at 5 units. Thus, the area of the new shape is 24 units * 5 units = 120 square units.'), ('import data.real.basic\n\ndef perimeter_of_rectangle (length width : ℝ) : ℝ := 2 * (length + width)\n\nexample : perimeter_of_rectangle 45.6 32.4 = 156 :=\nbegin\n  unfold perimeter_of_rectangle,\n  norm_num,\nend', 'In a rectangular playground, the length is 45.6 meters and the width is 32.4 meters. John wants to run around the perimeter of the playground. How many meters does he run?', 'The perimeter of a rectangle is calculated by adding the lengths of all four sides. Since a rectangle has two equal length sides and two equal width sides, we can calculate the perimeter by adding the length and width, then multiplying the result by 2. So, in this case, we add 45.6 meters (length) and 32.4 meters (width), which equals 78 meters. Then we multiply 78 meters by 2, which equals 156 meters. Therefore, John needs to run 156 meters.'), ('import data.nat.basic\n\nopen nat\n\ndef candies_in_boxes : ℕ := 34\ndef candies_in_each_box : ℕ := 21\ndef total_candies : ℕ := candies_in_boxes * candies_in_each_box\n\nexample : total_candies = 714 := \nbegin\n  have h1 : candies_in_boxes = 34, from rfl,\n  have h2 : candies_in_each_box = 21, from rfl,\n  have h3 : total_candies = candies_in_boxes * candies_in_each_box, from rfl,\n  rw [h3],\n  rw [h1, h2],\n  exact rfl,\nend', 'Sally has 34 boxes of candies. Each box contains 21 candies. How many candies does Sally have in total?', 'To find out the total number of candies Sally has, we can multiply the number of boxes she has by the number of candies in each box. So, we multiply 34 by 21 which gives us 714. Therefore, Sally has 714 candies in total.'), ('import data.real.basic\n\n-- Given that the distance is 5 and the x-coordinate of A is 2\ndef distance := 5\ndef x_A := 2\n\n-- Define the absolute function\nnoncomputable def abs (x : ℝ) := if x < 0 then -x else x\n\n-- The equation for the x-coordinate of B\ndef x_B := x_A + distance\n\n-- Proof that the x-coordinate of B is 7\nexample : x_B = 7 :=\nbegin\n  unfold x_B,\n  have h : x_A + distance = 2 + 5, by refl,\n  rw h,\nend', 'In a coordinate plane, point A is located at (2,3) and point B is at (x,3). If the distance between point A and point B is 5 units, what is the value of x?', 'The distance between two points on a horizontal line in a coordinate plane is the absolute difference of their x-coordinates. Since point A and B are both on the line y=3, we can calculate the distance by subtracting the x-coordinate of point A from the x-coordinate of point B. We know this distance is 5 units. Therefore, we have the equation |x - 2| = 5. \n\nSolving this equation gives us two solutions: x = 7 and x = -3. However, since x is to the right of 2 on the coordinate plane (as the distance is measured to the right), the x-coordinate of point B is 7.'), ('import data.real.basic\n\nexample : (1 / 2) * (1 / 3) = (2 / 3) * (1 / 4) :=\nbegin\n  norm_num,\nend', 'If the product of 1/2 and 1/3 equals to the product of 2/3 and 1/4, prove that the equation is correct.', 'Firstly, we calculate the product of 1/2 and 1/3, which is 1/6. Then, we calculate the product of 2/3 and 1/4, which is 1/6. Since both products equal to 1/6, it means that the original equation is correct.'), ('import data.real.basic\n\n-- defining the length and width of the rectangle\ndef length : ℝ := 15\ndef width : ℝ := 10\n\n-- calculating the area\ndef area : ℝ := length * width\n\n-- checking if the area of the rectangle is 150 square feet\n#eval area  -- output should be 150', 'Emily has a rectangular garden. The length of the garden is 15 feet and the width is 10 feet. What is the area of the garden?', 'The area of a rectangle is calculated by multiplying the length and the width of the rectangle. In this case, the length of the garden is 15 feet and the width is 10 feet. Therefore, the area of the garden is 15 feet times 10 feet, which equals 150 square feet.'), ('import data.real.basic\n\nopen_locale classical\n\n-- defining variables\ndef john := λ(t : ℝ), 5 * t\ndef mary := λ(t : ℝ), 7 * t\ndef pool := λ(t : ℝ), john t + mary t\n\n-- defining theorem\ntheorem pool_holds_360_gallons : pool 30 = 360 :=\nbegin\n  unfold pool john mary, -- expand the definitions\n  norm_num, -- simplifies the numerical calculations\nend', "John and Mary are filling a swimming pool. John's hose fills the pool at a rate of 5 gallons per minute, and Mary's hose fills the pool at a rate of 7 gallons per minute. They start filling the pool at the same time. If it takes 30 minutes for the pool to be completely filled, how many gallons does the pool hold?", 'The total amount of gallons the pool holds is the sum of the amount of gallons both John and Mary have filled in the pool. To find the amount each person has filled, we multiply the rate at which they fill the pool by the amount of time they spent filling it. \n\nSo, for John, this would be 5 gallons per minute * 30 minutes = 150 gallons.\n\nAnd for Mary, this would be 7 gallons per minute * 30 minutes = 210 gallons.\n\nAdding these two together gives us 150 gallons + 210 gallons = 360 gallons. \n\nTherefore, the pool holds 360 gallons.'), ('import data.int.basic\n\nopen int\n\n-- Declare the variables\ndef Johns_marbles : ℤ := 3475\ndef Jack_marbles : ℤ := 1259\n\n-- The number of marbles that John has left\ndef remaining_marbles := Johns_marbles - Jack_marbles\n\n-- Proof that John has 2216 marbles left\nexample : remaining_marbles = 2216 :=\nbegin\n  unfold remaining_marbles,\n  unfold Johns_marbles,\n  unfold Jack_marbles,\n  exact dec_trivial,\nend', 'John has a bag of marbles. He has 3,475 marbles in the bag. He decided to give 1,259 marbles to his best friend, Jack. How many marbles does John have left now?', 'To solve this problem, we have to subtract the number of marbles that John gave to Jack from the total number of marbles that John originally had. So, 3,475 (the total number of marbles that John had) minus 1,259 (the number of marbles John gave to Jack) equals 2,216. Therefore, John has 2,216 marbles left.'), ('def rectangle_perimeter (L W : ℕ) : ℕ := 2*(L + W)\ndef number_of_trees (P D : ℕ) : ℕ := P / D\n\ndef garden_problem : Prop := \nlet L := 40, W := 30, D := 10 in\nlet P := rectangle_perimeter L W in\nlet T := number_of_trees P D in\nT = 14\n\nexample : garden_problem := \nbegin\n  unfold garden_problem,\n  exact rfl,\nend', 'John has a rectangular garden that measures 30 feet by 40 feet. He plans to plant a tree every 10 feet along the perimeter of his garden. How many trees will he need?', 'First, we need to understand the perimeter of a rectangle, which is the sum of all its sides. In this case, the length of the garden is 40 feet and the width is 30 feet. So, the total perimeter of the garden is 2*(40+30)=140 feet. \nSince John plants a tree every 10 feet, the number of trees he will need is the total perimeter divided by the distance between each tree. So, he will need 140/10 = 14 trees.'), ('import data.int.basic\n\nopen int\n\n-- Defining the function f(x) = x^2 which represents the relationship\ndef f (x : ℤ) : ℤ := x^2\n\n-- Proving that if 10 magic stones are put into the box, 100 magic stars will be obtained\nexample : f 10 = 100 :=\nbegin\n  -- Simplifying the left hand side by applying the definition of f\n  rw f,\n  -- Simplifying 10^2 to 100\n  refl,\nend', 'Johnny has a magic box. He noticed that the number of magic stars he gets from the box is always the square of the number of magic stones he puts into the box. One day, he put 5 magic stones into the box and got 25 magic stars. The next day, he put 7 magic stones and got 49 magic stars. Can you help Johnny figure out how many magic stars he will get if he puts 10 magic stones into the box?', 'Since the number of magic stars Johnny gets from the box is the square of the number of magic stones he puts into the box, we can use this relationship to find out how many magic stars he will get with 10 magic stones. So, we simply square the number 10, which results in 100. Therefore, Johnny will get 100 magic stars if he puts 10 magic stones into the box.'), ('import data.real.basic\n\n-- define a, b, c and x\ndef a := (2 : ℝ)\ndef b := (3 : ℕ) -- define b as natural number\ndef c := (4 : ℝ)\ndef x := a^b - c -- power operation is now between real and natural number\n\n-- prove x = 4\nexample : x = 4 :=\nbegin\n  unfold x, -- unfold the definition of x\n  unfold a, -- unfold the definition of a\n  unfold b, -- unfold the definition of b\n  unfold c, -- unfold the definition of c\n  norm_num, -- simplifies the expression to 4\nend', 'If a = 2, b = 3, and c = 4, solve for x in the equation: x = a^b - c.', 'Given that a = 2, b = 3, and c = 4, we can substitute these values into the equation x = a^b - c. This gives us x = 2^3 - 4. According to the rules of exponents, 2^3 equals 8. Therefore, our equation becomes x = 8 - 4. Subtracting 4 from 8 gives us 4. Therefore, x = 4.'), ("-- Assume John's original number of comic books\ndef John_initial := 5\n-- Assume the number of comic books John's older brother gives him\ndef brother_gives := 8\n-- Calculate the total number of comic books John has after his brother gives him some\ndef John_after_brother := John_initial + brother_gives\n-- Assume the number of comic books John gives to his friend\ndef gives_friend := 3\n-- Calculate the final number of comic books John has after giving some to his friend\ndef John_final := John_after_brother - gives_friend\n\n-- Prove that John has 10 comic books\nexample : John_final = 10 :=\nbegin\n  -- Compute the expressions\n  unfold John_final, -- unfolds the definition of John_final\n  unfold John_after_brother, -- unfolds the definition of John_after_brother\n  simp [John_initial, brother_gives, gives_friend], -- simplify the expression\nend", 'John has 5 comic books and his older brother gives him 8 more comic books. After reading them, John decides to give 3 of those comic books to his friend. How many comic books does John have now?', "First, we find out how many comic books John has after his older brother gives him some. We add John's original amount of 5 comic books to the 8 comic books his older brother gives him, which equals 13 comic books. Then, we subtract the 3 comic books that John gives to his friend from the 13 comic books. So, John has 10 comic books now."), ("import data.real.basic\n\n-- Let's first declare our variables\nvariables (AB DE BC EF AC DF k : ℝ)\nvariables (h₁ : AB = k * DE)\nvariables (h₂ : BC = k * EF)\nvariables (h₃ : AC = k * DF)\n\n-- We assume that the areas of the triangles are positive\nvariable (h₄ : DE * EF * DF > 0)\n\ninclude h₁ h₂ h₃ h₄\n\n-- We prove the theorem\ntheorem area_ratio : (1/2) * AB * BC = k^2 * (1/2) * DE * EF :=\nbegin\n  rw [h₁, h₂],\n  ring,\nend", 'Given two similar triangles ABC and DEF with AB/DE = BC/EF = AC/DF = k. Prove that the ratio between the areas of triangle ABC and triangle DEF is k².', 'Since the triangles are similar, the ratio of their corresponding sides is k. The area of a triangle is 1/2 * base * height. If we substitute the sides of triangle ABC with k times the sides of triangle DEF, we get that the area of triangle ABC is k² times the area of triangle DEF. This is because both the base and the height are multiplied by k, and (1/2 * base * height) becomes (1/2 * k * base * k * height) = k² * (1/2 * base * height). So, the ratio between the areas of the triangles is k².'), ('import data.real.basic\n\ndef E (x : ℝ) := 25*x + 10\n#eval E 15 ', 'Jack has decided to start a car washing business. He charges $25 per car wash and also takes $10 as a fixed cost for the cleaning materials. Write an equation that represents Jack’s total earnings (E) from washing x number of cars. If Jack washes 15 cars, how much will he earn?', "The problem involves the concept of linear equations where the earnings depend on the number of cars washed. The fixed cost is a constant, while the cost per car wash is a variable that depends on the number of cars washed.\n\nSo, the equation representing Jack's earnings would be E = 25x + 10. \n\nSubstituting x = 15 into the equation, we get E = 25*15 + 10 = 385. \n\nTherefore, Jack will earn $385 when he washes 15 cars."), ('import data.real.basic\n\n-- defining the number of balls\ndef num_of_red_balls : ℝ := 3\ndef num_of_green_balls : ℝ := 2\ndef num_of_blue_balls : ℝ := 5\ndef total_balls : ℝ := num_of_red_balls + num_of_green_balls + num_of_blue_balls\n\n-- defining the probability functions\nnoncomputable def prob (event total : ℝ) : ℝ := event / total\nnoncomputable def prob_or (event1 event2 total : ℝ) : ℝ := prob event1 total + prob event2 total\n\n-- proving the theorem\ntheorem prob_red_or_blue : prob_or num_of_red_balls num_of_blue_balls total_balls = 0.8 :=\nbegin\n  unfold prob_or,\n  unfold prob,\n  unfold total_balls,\n  unfold num_of_red_balls,\n  unfold num_of_blue_balls,\n  unfold num_of_green_balls,\n  norm_num,\nend', 'A ball is chosen at random from a box containing 3 red balls, 2 green balls, and 5 blue balls. What is the probability that the ball drawn is red or blue?', 'The total number of balls in the box is 3 (red) + 2 (green) + 5 (blue) = 10 balls.\n\nThe probability of drawing a red ball is the ratio of the number of red balls to the total number of balls, which is 3/10.\n\nSimilarly, the probability of drawing a blue ball is the number of blue balls to the total number of balls, which is 5/10.\n\nThe probability of drawing either a red or a blue ball would be the sum of the individual probabilities since these are mutually exclusive events, which is (3/10) + (5/10) = 8/10 = 0.8.'), ('variables (length : ℕ) (width : ℕ)\ndef rectangle_perimeter (length width : ℕ) : ℕ := 2 * (length + width)\ndef rectangle_area (length width : ℕ) : ℕ := length * width\n\nexample : rectangle_perimeter 12 9 = 42 := rfl\nexample : rectangle_area 12 9 = 108 := rfl', 'John has a rectangular garden with a length of 12 feet and a width of 9 feet. He wants to build a fence around the garden. Also, he wants to cover the entire garden with topsoil. The fence will be built along the perimeter of the garden, and the topsoil will cover the area of the garden. What is the length of the fence John needs to build and how much topsoil does he need to cover the garden?', 'The length of the fence that John needs to build is equal to the perimeter of the garden. The perimeter of a rectangle can be calculated by the formula 2 * (length + width). In this case, it would be 2 * (12 feet + 9 feet) = 2 * 21 feet = 42 feet. \n\nThe amount of topsoil John needs is equal to the area of the garden. The area of a rectangle can be calculated by the formula length * width. In this case, it would be 12 feet * 9 feet = 108 square feet. \n\nTherefore, John needs 42 feet of fence and 108 square feet of topsoil.'), ('import data.real.basic\n\n-- Definitions\nnoncomputable def alice_water_per_lemon := (5 : ℝ) / 2\nnoncomputable def bob_water_per_lemon := (7 : ℝ) / 3\n\n-- Proof\nexample : alice_water_per_lemon > bob_water_per_lemon := \nbegin\n  unfold alice_water_per_lemon bob_water_per_lemon,\n  norm_num,\nend', "Alice and Bob are making lemonade. Alice's recipe calls for 2 parts of lemon juice and 5 parts of water, while Bob's recipe requires 3 parts of lemon juice and 7 parts of water. If they both use the same amount of lemon juice, who uses more water?", "Since they both use the same amount of lemon juice, we can just compare the ratios of water to lemon juice in both recipes. Alice's recipe uses 5 parts of water for 2 parts of lemon juice, which simplifies to 2.5 parts of water for 1 part of lemon juice. Bob's recipe uses 7 parts of water for 3 parts of lemon juice, which simplifies to about 2.33 parts of water for 1 part of lemon juice. Therefore, Alice uses more water in her recipe."), ('import data.real.basic\n\nopen real\n\n-- defining the length and width\ndef length : ℝ := 5\ndef width : ℝ := 3\n\n-- defining the area and perimeter\ndef area (length width : ℝ) : ℝ := length * width\ndef perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- proving the area\nexample : area length width = 15 :=\nbegin\n  unfold area,\n  unfold length,\n  unfold width,\n  norm_num,\nend\n\n-- proving the perimeter\nexample : perimeter length width = 16 :=\nbegin\n  unfold perimeter,\n  unfold length,\n  unfold width,\n  norm_num,\nend', 'If a rectangle has a length of 5 units and a width of 3 units, what is the area and perimeter of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. So, in this case, the area is 5 units * 3 units = 15 square units. \n\nThe perimeter of a rectangle is calculated by adding up all the sides. So, in this case, the perimeter is 2 * (5 units + 3 units) = 16 units.'), ('import data.real.basic\n\n-- defining the variables\ndef l := (12 : ℝ) -- length of the rectangle\ndef w := (7 : ℝ) -- width of the rectangle\n\n-- defining the functions for area and perimeter\ndef area (l w : ℝ) := l * w\ndef perimeter (l w : ℝ) := 2 * (l + w)\n\n-- calculating the area and perimeter\n#eval area l w -- outputs 84\n#eval perimeter l w -- outputs 38', 'John has a rectangular garden that is 12 feet long and 7 feet wide. He wants to build a fence around the garden. What is the total length of the fence that John will need? Additionally, what is the area of the garden?', 'To find the total length of the fence, we need to find the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2(length + width). So, the perimeter is 2(12 + 7) = 38 feet. \n\nTo find the area of the garden, we need to multiply the length by the width. So, the area is 12 * 7 = 84 square feet.'), ('-- Lean does not currently support formal reasoning about geometry in a direct way. \n-- Proofs about geometric figures, like the one in this problem, are typically done using informal reasoning, \n-- as in the Informal Proof section. A formal proof in Lean would require developing a significant amount of \n-- geometric theory, which is beyond the scope of this example. ', "Consider a rectangle ABCD where AB = BC = 5 units and AD = 10 units. Point E is the midpoint of AB and point F is the midpoint of BC. Let's take a transformation that reflects rectangle ABCD over line EF. Let's denote the image of the rectangle after the reflection as A'B'C'D'. Prove that A'B'C'D' is congruent to ABCD.", "Firstly, we know that a rectangle is a parallelogram with all angles equal to 90 degrees. This means that all properties of parallelograms apply to rectangles as well, including the property that opposite sides are equal in length. \n\nNow, let's consider the reflection over line EF. In a reflection, each point of the original figure has an image point in the reflected figure that is the same distance from the line of reflection, but on the opposite side. \n\nThis means that the distances from A to E, and from E to A' are equal, and similarly the distances from B to F and from F to B' are equal. \nThis implies that AA' = BB' = 2 times the length of AE (or BF), which is 2*2.5 = 5 units (since E and F are midpoints). \n\nSimilarly, we can argue that CC' and DD' are also 5 units long. \n\nNow, since the line of reflection EF is the line joining the midpoints of AB and BC, it is parallel to both AD and DC, and is half their length. After the reflection, EF will become the line joining the midpoints of A'B' and B'C', which is parallel to both A'D' and D'C', and is half their length. This implies that A'D' = DC = 10 units and D'C' = AD = 10 units.\n\nHence, we have shown that A'B' = AB, B'C' = BC, C'D' = CD and D'A' = DA, and all angles in A'B'C'D' are 90 degrees (since they are image angles of the 90-degree angles in ABCD after the reflection). \n\nTherefore, rectangle A'B'C'D' is congruent to rectangle ABCD by the definition of congruence (all corresponding sides and angles are equal)."), ('-- defining the variables\ndef length := 7\ndef width := 5\n\n-- defining the perimeter formula\ndef perimeter (length width : ℕ) : ℕ := 2 * (length + width)\n\n-- applying the formula\n#eval perimeter length width  -- output: 24', 'John and Emma are building a fence around their rectangular garden. The garden measures 5 feet in width and 7 feet in length. How many feet of fence do they need?', 'To find out how many feet of fence they need, we have to calculate the perimeter of the garden. The formula for the perimeter of a rectangle is 2*(length + width). So, we substitute the given values into the formula: 2*(5 feet + 7 feet) = 2*12 feet = 24 feet. Therefore, John and Emma need 24 feet of fence to build around their garden.'), ('open nat\ndef stickers := 4 * 7\n#eval stickers  -- Returns 28', 'John has 4 packs of stickers, and each pack contains 7 stickers. How many stickers does John have in total?', 'To find out the total number of stickers John has, we need to multiply the number of packs by the number of stickers in each pack. So we multiply 4 (packs) by 7 (stickers in each pack) and get 28. So, John has 28 stickers in total.'), ('import data.real.basic\n\n-- defining the variables\ndef length : ℝ := 5\ndef width : ℝ := 4\ndef height : ℝ := 3\n\n-- defining the area function for rectangle\ndef area (l w : ℝ) : ℝ := l * w\n\n-- proof that the total area of the four walls is 54 square meters\nexample : 2 * area length height + 2 * area width height = 54 :=\nbegin\n  unfold area,\n  simp [length, width, height],\n  norm_num,\nend', 'Given a rectangular room with length 5 meters, width 4 meters and height 3 meters, what is the total area of the four walls of the room?', 'The area of a rectangle is the product of its length and width. Each wall of the room is a rectangle, and the four walls have two pairs of identical dimensions: two walls have dimensions 5 meters by 3 meters, while the other two walls have dimensions 4 meters by 3 meters. \n\nTo find the total area of the four walls, we sum the areas of these four rectangles. The total area is therefore 2*(5*3) + 2*(4*3) = 30 + 24 = 54 square meters.'), ('import data.nat.basic\n\nopen nat\n\ndef bob_apples : ℕ := 15\ndef alice_apples : ℕ := 20\ndef alice_to_bob : ℕ := 5\ndef mom_to_bob : ℕ := 500\n\ndef bob_after_alice : ℕ := bob_apples + alice_to_bob\ndef bob_after_mom : ℕ := bob_after_alice + mom_to_bob\n\nexample : bob_after_mom = 520 := by refl', "Alice has 20 apples and Bob has 15 apples. Alice gave 5 apples to Bob. After that, Bob's mother gave him another 500 apples. How many apples does Bob have now?", "Bob initially has 15 apples. After Alice gave him 5 apples, Bob has 15 + 5 = 20 apples. Then, Bob's mother gives him another 500 apples. So, Bob now has 20 + 500 = 520 apples."), ("import data.real.basic\n\n-- Let's declare a variable w for the number of weeks\nvariable (w : ℝ)\n\n-- Let's declare our inequality\ndef jerry_more_stamps (w : ℝ) : Prop := 30 + 9 * w > 45 + 6 * w\n\n-- Let's prove the inequality\ntheorem jerry_wins : ∀ w, w > 5 → jerry_more_stamps w :=\nbegin\n  intros,\n  unfold jerry_more_stamps,\n  linarith,\nend", "Tom and Jerry are having a competition to collect the most stamps. Tom already has 45 stamps, and every week he adds 6 more to his collection. Jerry started with just 30 stamps, but he's adding 9 every week. After how many weeks will Jerry have more stamps than Tom?", 'First, we set up an inequality to represent the situation. Let "w" represent the number of weeks. For Tom, the number of stamps he has is 45 + 6w. For Jerry, the number of stamps he has is 30 + 9w. We want to know when Jerry will have more stamps, so we set up the inequality 30 + 9w > 45 + 6w.\n\nNext, we solve the inequality. By subtracting 30 from both sides, we get 9w > 15 + 6w. By subtracting 6w from both sides, we get 3w > 15. By dividing both sides by 3, we get w > 5. \n\nTherefore, after 5 weeks, Jerry will have more stamps than Tom.'), ('import data.real.basic\n\ndef P (x : ℝ) : ℝ := 3*x^2 + 2*x - 5\n\nexample : P 10 = 315 :=\nbegin\n  unfold P,\n  norm_num,\nend', 'In a survey conducted at a college, it was found that the number of students taking Algebra and Statistics varies according to the polynomial P(x) = 3x^2 + 2x - 5, where x represents the number of semesters since 2010. \n\nIf x = 10 (representing the year 2020), what is the total number of students in these two classes?', 'Substitute x = 10 into the polynomial P(x) = 3x^2 + 2x - 5. \n\nP(10) = 3*(10)^2 + 2*10 - 5 = 300 + 20 - 5 = 315. \n\nSo, the total number of students who are taking Algebra and Statistics in 2020 is 315.'), ('import data.real.basic\n\ntheorem mul_six_div_two_eq_mul_three (n : ℝ) : (n * 6) / 2 = n * 3 :=\nbegin\n  rw mul_div_assoc,  -- rewrite the left hand side as (n * 6) / 2 = n * (6 / 2)\n  norm_num,          -- simplifies numeric calculations\nend', 'If we have a number `n` that we multiply by 6 and then divide by 2, is this operation equivalent to multiplying `n` by 3? Prove your answer.', "Yes, it is equivalent. Let's take a number `n`. When we multiply `n` by 6, we get `6n`. Now, when we divide `6n` by 2, we get `3n`. This is the same as multiplying `n` by 3. Therefore, multiplying `n` by 6 and then dividing by 2 is equivalent to multiplying `n` by 3."), ("-- We first define the length and width of Alice's and Bob's gardens\ndef alice_length := 10\ndef alice_width := 5\ndef bob_length := 8\ndef bob_width := 6\n\n-- We then calculate the areas and perimeters\ndef alice_area := alice_length * alice_width -- 50 square meters\ndef bob_area := bob_length * bob_width -- 48 square meters\ndef alice_perimeter := 2 * (alice_length + alice_width) -- 30 meters\ndef bob_perimeter := 2 * (bob_length + bob_width) -- 28 meters\n\n-- We now prove that Alice's garden has a larger area\nexample : alice_area > bob_area :=\nbegin\n  exact dec_trivial,\nend\n\n-- We now prove that Alice's garden has a longer perimeter\nexample : alice_perimeter > bob_perimeter :=\nbegin\n  exact dec_trivial,\nend", 'Alice and Bob are working on a garden project. Alice wants to build a rectangular garden with a length of 10 meters and a width of 5 meters. Bob wants to build a rectangular garden with a length of 8 meters and a width of 6 meters. Which garden has a larger area? And which garden has a longer perimeter?', "To find out the area of a rectangle, we multiply the length and the width. For Alice's garden, the area is 10 meters * 5 meters = 50 square meters. For Bob's garden, the area is 8 meters * 6 meters = 48 square meters. Therefore, Alice's garden has a larger area. \n\nTo find out the perimeter of a rectangle, we add up all the sides. For Alice's garden, the perimeter is 2*(10 meters + 5 meters) = 30 meters. For Bob's garden, the perimeter is 2*(8 meters + 6 meters) = 28 meters. Therefore, Alice's garden also has a longer perimeter."), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 5 3 = 15 :=\nbegin\n  unfold rectangle_area, -- The area of a rectangle is calculated by multiplying its length by its width\n  exact dec_trivial, -- Conclude that 5 * 3 is indeed 15\nend', 'If we have a rectangle with a length of 5 units and a width of 3 units, what is its area?', 'The area of a rectangle is calculated by multiplying its length by its width. So, in this case, we multiply 5 units (the length) by 3 units (the width) to get an area of 15 square units.'), ('-- We start by importing the necessary libraries in Lean\nimport data.real.basic\n\n-- We create a namespace to avoid name clashes\nnamespace lemonade_stand\n\n-- We declare the variables we will be working with\nvariables (J S : ℝ)  -- The number of glasses John and Sarah sold\n\n-- The two equations are represented as hypotheses\n-- The first equation represents the total number of glasses sold\n-- The second equation represents the total money made\nvariables (h1 : J + S = 100) \n           (h2 : 5 * J + 3 * S = 410)\n\n-- We can now express the solution\ninclude h1 h2\n\n-- Multiply the first equation by 3\nlemma eq1 : 3 * (J + S) = 3 * 100 := by linarith\n-- Simplify to get 3J + 3S = 300\nlemma eq2 : 3 * J + 3 * S = 300 := by linarith\n\n-- Subtract eq2 from h2 to get 2J = 110\nlemma eq3 : 2 * J = 110 := by linarith\n\n-- Divide both sides of eq3 by 2 to get J = 55\nlemma eq4 : J = 55 := by linarith\n\n-- Substitute J = 55 into the first equation to get S = 45\nlemma eq5 : S = 45 := by linarith\n\n-- This completes the proof\n#check eq4\n#check eq5\n\nend lemonade_stand', 'John and Sarah are selling lemonade. John sells his lemonade for $5 per glass. Sarah sells her lemonade for $3 per glass. On one particular day, they sold a total of 100 glasses of lemonade and made a total of $410. How many glasses of lemonade did each person sell?', 'We can solve this problem by setting up two equations based on the information given: \n\n1. The total number of glasses sold is 100. If we denote the number of glasses John sold as J and the number of glasses Sarah sold as S, we get the equation: J + S = 100.\n\n2. The total amount of money made is $410. Since John sells his lemonade for $5 per glass and Sarah sells hers for $3 per glass, we get the equation: 5J + 3S = 410.\n\nWe can solve this system of equations by first multiplying the first equation by 3: 3J + 3S = 300. Then we subtract this equation from the second equation, which gives us: 2J = 110. Dividing both sides by 2, we find that J = 55. Substituting J = 55 into the first equation, we get: 55 + S = 100, so S = 45. \n\nSo, John sold 55 glasses of lemonade and Sarah sold 45 glasses of lemonade.'), ('import data.nat.basic\n\nopen nat\n\ndef boxes_of_pencils : ℕ := 9\ndef pencils_per_box : ℕ := 100\ndef total_pencils : ℕ := boxes_of_pencils * pencils_per_box\n\nexample : total_pencils = 900 :=\nbegin\n  unfold total_pencils,\n  unfold boxes_of_pencils,\n  unfold pencils_per_box,\n  rw mul_comm,\n  exact rfl,\nend', 'John has 9 boxes of pencils. Each box contains 100 pencils. How many pencils does John have in total?', 'To find the total number of pencils John has, we multiply the number of boxes he has by the number of pencils in each box. So 9 boxes times 100 pencils gives us 900 pencils. Therefore, John has 900 pencils in total.'), ('open nat\n\ndef mult (m n : ℕ) : ℕ := m * n\n\nexample : mult 3 7 = 21 :=\nbegin\n  rw mult,\n  exact rfl,\nend', "Let's say that there are 3 boxes of apples and each box contains 7 apples. How many apples are there in total?", 'To find the total number of apples, we can multiply the number of boxes by the number of apples in each box. Thus, 3 boxes times 7 apples equals 21 apples.'), ('import data.real.basic\n\n-- First we define x as a real number\nvariables (x : ℝ)\n\n-- Then we state our problem as an equation\ndef lemonade_problem := 1.50*x = 2.00*x - 15.00\n\n-- Now we prove that x = 30 is a solution to the equation\nexample : (lemonade_problem 30) = true :=\nbegin\n  unfold lemonade_problem, -- This expands the definition of lemonade_problem\n  -- Now we simplify the left and right side of the equation\n  simp,\n  -- Now we prove that 1.50*30 = 2.00*30 - 15.00\n  norm_num, -- This solves the equation\nend', 'John and Mary are selling lemonade. John sells his lemonade for $1.50 per cup and Mary sells hers for $2.00 per cup. They both sold the same number of cups of lemonade. At the end of the day, John has made $15.00 more than Mary. How many cups of lemonade did each of them sell?', 'Let\'s denote the number of cups that each of them sold as "x". Since they both sold the same number of cups, we can write the following two equations based on the problem:\n\n1.50x = 2.00x - 15.00\n\nSolving this equation for x gives us:\n\n-0.50x = -15.00\n\nDividing both sides by -0.50, we find that x = 30, which means that each of them sold 30 cups of lemonade.'), ('open nat\n\n-- defining the variables\ndef pencils_per_box : ℕ := 7\ndef total_boxes : ℕ := 6\n\n-- defining the function to calculate total pencils\ndef total_pencils (pencils_per_box total_boxes : ℕ) : ℕ := pencils_per_box * total_boxes \n\n-- proving the result\nexample : total_pencils pencils_per_box total_boxes = 42 :=\nbegin\n  unfold total_pencils,\n  exact rfl,\nend', 'John has 6 boxes of pencils. Each box contains 7 pencils. How many pencils does John have in total?', 'Since each box contains 7 pencils, and John has 6 boxes, we can find the total number of pencils by multiplying the number of pencils in one box by the total number of boxes. So, 7 pencils per box times 6 boxes equals 42 pencils. Therefore, John has 42 pencils in total.'), ('import data.real.basic\n\nopen_locale classical\n\nnoncomputable def calc_expression : ℝ := (2^3 * 3^2) / (6^2 - 12)\n\nexample : calc_expression = 3 :=\nbegin\n  unfold calc_expression,\n  norm_num,\nend', 'Calculate the following expression:\n\n(2^3 * 3^2) / (6^2 - 12)', 'First, calculate the exponents. 2^3 equals 8 and 3^2 equals 9. The expression then becomes (8 * 9) / (6^2 - 12). \n\nNext, calculate the value within the parentheses in the denominator. 6^2 equals 36, so the expression becomes (8 * 9) / (36 - 12).\n\nThen, subtract 12 from 36 to get 24. The expression becomes (8 * 9) / 24.\n\nNext, multiply 8 by 9 to get 72. The expression becomes 72 / 24.\n\nFinally, divide 72 by 24 to get 3. So, the result of the expression (2^3 * 3^2) / (6^2 - 12) is 3.'), ('import data.real.basic\n\nopen real\n\nlemma multiply_by_ten (x : ℝ) (h : x = 0.7) : 10 * x = 7 :=\nbegin\n  rw h,\n  norm_num,\nend', 'If we have a decimal number 0.7, when we multiply it by 10, the result should be 7. Is this statement true?', 'Yes, this statement is true. According to the rules of place value, when we multiply a decimal number by 10, the decimal point moves one place to the right. So, if we multiply 0.7 by 10, the decimal point moves one place to the right, and the result is 7.'), ('import data.real.basic\n\n-- Define the equation\ndef eqn (x : ℝ) := 2*x + 5 = 15\n\n-- Prove that the solution to the equation is x = 5\ntheorem solution : ∀ x : ℝ, eqn x ↔ x = 5 :=\nbegin\n  intro x,\n  -- Define the equation\n  unfold eqn,\n  -- Split the bi-conditional into two implications\n  split,\n  { -- Forward direction\n    intro h,\n    -- Subtract 5 from both sides\n    have h1 : 2*x = 10 := by linarith,\n    -- Divide by 2\n    have h2 : x = 5 := by linarith,\n    -- Our result\n    exact h2,\n  },\n  { -- Reverse direction\n    intro h,\n    -- Substitute x = 5 into the equation\n    rw h,\n    -- Simplify\n    linarith,\n  },\nend', 'Solve the following algebraic equation: \n\n2x + 5 = 15', 'First, we subtract 5 from both sides of the equation. The left side simplifies to 2x and the right side simplifies to 10. The equation is now:\n\n2x = 10\n\nNext, we divide both sides of the equation by 2. The left side simplifies to x and the right side simplifies to 5. The equation is now:\n\nx = 5'), ('import data.real.basic\n\n-- proof\nexample : (1 : ℝ) - 2/5 = 3/5 :=\nbegin\n  norm_num,\nend', 'Amy has a chocolate bar which she divides into 5 equal parts. She eats 2 parts of the chocolate bar. How much of the chocolate bar is left?', 'Initially, Amy had a whole chocolate bar which can be represented as 1. She ate 2 out of 5 parts of the chocolate, which can be represented as 2/5. To find out how much of the chocolate bar is left, we subtract the part she ate from the whole chocolate bar. Mathematically, this is represented as 1 - 2/5 = 3/5. Therefore, 3/5 of the chocolate bar is left.'), ("import data.real.basic\n\n-- define the number of times '3' was rolled and the total number of students\ndef times_three_rolled : ℝ := 7\ndef total_students : ℝ := 35\n\n-- calculate the experimental probability\nnoncomputable def experimental_probability : ℝ := times_three_rolled / total_students\n\n-- proof that the experimental probability is 0.2\nexample : experimental_probability = 0.2 :=\nbegin\n  unfold experimental_probability,\n  norm_num [times_three_rolled, total_students],\nend", "In the 7th-grade class, there are 35 students. The teacher asked each student to roll a six-sided die once. After counting, the teacher found that the number '3' was rolled 7 times. What is the experimental probability that a student will roll a '3'?", "The experimental probability of an event is calculated by dividing the number of times the event occurred by the total number of trials. In this case, the event is rolling a '3', which occurred 7 times. The total number of trials is the total number of students who rolled the die, which is 35. So, the experimental probability is 7 / 35 = 0.2 or 20%."), ('import data.real.basic\n\nnoncomputable theory\n\ndef f (x : ℝ) := 2 * x^2 + 3 * x + 1\n\n-- Lemma or theorem representing the integral might be stated here if Lean supported symbolic computation, but it currently does not.', 'Given a function f(x) = 2x^2 + 3x + 1 in the interval [0, 2], calculate the area under the curve using the definite integral.', 'We can calculate the area under the curve of a function by using the definite integral. The definite integral of a function from a to b is a number that represents the net area between the function and the x-axis from a to b.\n\nIn our case, we want to calculate the definite integral of f(x) = 2x^2 + 3x + 1 from 0 to 2. We first find the antiderivative F(x) of f(x), which is (2/3)x^3 + (3/2)x^2 + x. Then, we use the Fundamental Theorem of Calculus, which states that the definite integral of f from a to b is F(b) - F(a).\n\nSo, the area under the curve of f from 0 to 2 is F(2) - F(0) = (2/3)(2^3) + (3/2)(2^2) + 2 - [(2/3)(0^3) + (3/2)(0^2) + 0] = 10.6667.'), ('import data.nat.basic\n\ndef find_lcm_and_percentage (a b c : ℕ) : ℕ × ℕ :=\n    let lcm_ab := nat.lcm a b in\n    (lcm_ab, lcm_ab * 100 / c)\n\n#eval find_lcm_and_percentage 80 100 1000 -- returns (400, 40)', 'Alice and Bob are playing a game with a number. Alice chooses the number 80, and Bob chooses the number 100. They both want to find a number which is a multiple of both 80 and 100. What is that number? And what is it as a percentage of 1000?', 'The number that is a multiple of both 80 and 100 is the least common multiple (LCM) of the two numbers. The LCM of 80 and 100 is 400. To express this as a percentage of 1000, we divide 400 by 1000 and multiply the result by 100, which gives us 40%.'), ('variables (x : ℕ) -- x is the number of apples John has\n\ndef apples_Mary (x : ℕ) : ℕ := 5*x -- number of apples Mary has\n\nexample : apples_Mary 2 = 10 :=\nbegin\n  unfold apples_Mary, -- apply the definition of apples_Mary\n  exact dec_trivial, -- finish the proof\nend', 'John has 2 apples and Mary has 5 times as many apples as John. If we let x represent the number of apples John has, express the number of apples Mary has in terms of x and find out how many apples Mary has.', 'Since Mary has 5 times as many apples as John, we can express the number of apples Mary has as 5x. Given that x is 2, we substitute 2 into the expression 5x to get 5*2 which equals 10. Therefore, Mary has 10 apples.'), ('import data.real.basic\n\n-- define the problem\ndef problem (x : ℝ) := 2 * x + 3 = 7\n\n-- proof the problem\nlemma solution : ∃ x, problem x :=\nbegin\n  use 2,\n  unfold problem,\n  norm_num,\nend', 'Solve the equation for x: 2x + 3 = 7.', 'First, we subtract 3 from both sides of the equation to isolate the term with x on one side. This gives us 2x = 7 - 3, or 2x = 4. Then, we divide both sides by 2 to solve for x. This gives us x = 4 / 2, or x = 2. So, the solution to the equation is x = 2.'), ("import data.real.basic\n\nopen real\n\n-- Define the production function P(t) = 2t^3\ndef P (t : ℝ) := 2 * t^3\n\n-- Compute the derivative of the production function\ndef P_deriv (t : ℝ) := 6 * t^2\n\n-- Show that the derivative of P(t) = 2t^3 is P'(t) = 6t^2\nlemma derivative_of_P : ∀ t: ℝ, P_deriv t = 6 * t^2 :=\nbegin\n  intro t,\n  unfold P_deriv,\nend\n\n-- Compute the rate of change of production at t = 5 hours\ndef rate_of_change_at_t_5 := P_deriv 5\n\n-- Show that the rate of change of production at t = 5 hours is 150 widgets per hour\ntheorem rate_of_change_at_t_5_is_150 : rate_of_change_at_t_5 = 150 :=\nbegin\n  unfold rate_of_change_at_t_5,\n  unfold P_deriv,\n  norm_num,\nend", 'The number of widgets produced by a factory (P) is a function of the number of hours the factory operates (t). This relationship is represented by the function P(t) = 2t^3. We are interested in knowing how fast the production is changing at any given hour. Specifically, what is the rate of change of widget production when the factory has been operating for 5 hours?', "To find the rate of change of widget production, we need to find the derivative of the production function P(t) = 2t^3. The derivative of a function gives the rate of change of the function at any given point. \n\nThe derivative of P(t) = 2t^3 using the power rule (which states that the derivative of t^n is n*t^(n-1)) is P'(t) = 6t^2. \n\nTo find the rate of change at t = 5 hours, we substitute t = 5 into the derivative function P'(t) = 6t^2 to get P'(5) = 6*5^2 = 150. \n\nTherefore, the rate of change of widget production when the factory has been operating for 5 hours is 150 widgets per hour."), ('import data.real.basic\n\nopen_locale classical\n\n-- defining the functions f and g\ndef f (x : ℝ) : ℝ := 3*x + 2\ndef g (x : ℝ) : ℝ := 2*x + 5\n\n-- stating the theorem\ntheorem f_eq_g : ∃ x : ℝ, f(x) = g(x) :=\nbegin\n  use 3, -- provide the solution\n  unfold f g, -- expand the definitions of f and g\n  norm_num, -- perform simple arithmetic\nend', 'Given two linear functions f(x) = 3x + 2 and g(x) = 2x + 5, find the solution for the equation f(x) = g(x).', 'To find the solution for the equation f(x) = g(x), we need to set the two functions equal to each other and solve for x. \n\nSo we have 3x + 2 = 2x + 5. \n\nFirst, we subtract 2x from both sides of the equation to isolate x on one side. This gives us 3x - 2x = 5 - 2, which simplifies to x = 3. \n\nSo, the solution for the equation f(x) = g(x) is x = 3.'), ('import data.real.basic\n\n-- Defining the variables\nvariables (s p : ℝ)\n\n-- Setting up the system of equations\ndef eq1 := 2*s + 3*p = 120\ndef eq2 := 3*s + 2*p = 130\n\n-- Verifying the solution\nexample : ∃ (s p : ℝ), (2*s + 3*p = 120) ∧ (3*s + 2*p = 130) :=\nbegin\n  use [30, 20], -- We claim that s = 30 and p = 20 are solutions to the system.\n  split, -- We must show that both equations are satisfied.\n  { norm_num, }, -- This verifies the first equation.\n  { norm_num, }, -- This verifies the second equation.\nend', 'John and Mary went to the store. John bought 2 shirts and 3 pants for $120. Mary bought 3 shirts and 2 pants for $130. If the price of each shirt is the same and the price of each pant is the same, what is the price of each shirt and each pant?', "This problem can be solved by setting up a system of equations. Let's represent the price of a shirt as 's' and the price of a pant as 'p'. From John's purchase, we get the equation 2s + 3p = 120. From Mary's purchase, we get the equation 3s + 2p = 130. \n\nWe can solve this system of equations by substitution or elimination. Let's choose elimination. We'll multiply the first equation by 2 and the second by 3 so that the coefficients of 's' cancel out when we subtract the equations:\n\n4s + 6p = 240\n9s + 6p = 390\n\nSubtracting the second equation from the first, we get -5s = -150. Solving for 's', we find that s = 30. \n\nSubstituting s = 30 into the first equation, we get 2(30) + 3p = 120, which simplifies to 60 + 3p = 120. Solving for 'p', we find that p = 20. \n\nSo, each shirt costs $30 and each pant costs $20."), ('import data.real.basic\n\n-- define the lengths of the sides\ndef side1 : ℝ := 7\ndef side2 : ℝ := 4\ndef side3 : ℝ := side1 * side2 - 3\n\n-- show that the length of the third side is 25\nexample : side3 = 25 :=\nbegin\n  unfold side3,\n  unfold side1,\n  unfold side2,\n  norm_num\nend', 'In a triangle, the length of one side is 7 units, and the length of the second side is 4 units. If the length of the third side is 3 units less than the product of the lengths of the first two sides, what is the length of the third side?', 'To find the length of the third side, we first need to find the product of the lengths of the first two sides. The product of 7 units and 4 units is 28 units. Since the length of the third side is 3 units less than this, we subtract 3 units from 28 units to get 25 units. Therefore, the length of the third side is 25 units.'), ('def f (x : ℕ) : ℕ := x * 20 + 100\n\nexample : f 7 = 240 :=\nbegin\n  unfold f,\n  rw nat.mul_comm,\n  refl,\nend', "Let's say a function f models the amount of money in a bank account over time. If f(0) = 100, and after each day the amount of money increases by 20, then what will be the amount of money after 7 days?", 'The function f is a linear function, with the initial amount of money (f(0)) being 100, and the rate of change (or the slope of the function) being 20 per day. This means that for each day, the amount of money increases by 20. So, after 7 days, the amount of money would have increased by 7 * 20 = 140. Adding this to the initial amount of 100, we get 100 + 140 = 240. Therefore, the amount of money after 7 days is $240.'), ('import data.nat.basic\n\nopen nat\n\ndef total_pencils (students : ℕ) (pencils_per_student : ℕ) : ℕ := students * pencils_per_student\ndef total_cost (pencils : ℕ) (cost_per_pencil : ℕ) : ℕ := pencils * cost_per_pencil\n\nexample : total_cost (total_pencils 24 9) 3 = 648 :=\nbegin\n  have h1 : total_pencils 24 9 = 216, by refl,\n  have h2 : total_cost 216 3 = 648, by refl,\n  rw h1,\n  exact h2,\nend', "Let's assume there are 24 students in a classroom. Each student has 9 pencils and each pencil costs 3 dollars. What is the total cost of all the pencils in the classroom?", 'Firstly, we find out the total number of pencils in the classroom. As each student has 9 pencils, and there are 24 students, therefore, the total number of pencils is 24 * 9 = 216.\n\nSecondly, we find out the total cost of all the pencils by multiplying the total number of pencils by the cost of each pencil. As each pencil costs 3 dollars and there are 216 pencils, therefore, the total cost is 216 * 3 = 648 dollars.\n\nTherefore, the total cost of all the pencils in the classroom is 648 dollars.'), ("import data.real.basic\n\n-- Let's define the triangle's angles\ndef α := (30 : ℝ)\ndef β := (180 : ℝ) - (90 : ℝ) - α\n\ntheorem angle_β : β = 60 :=\nbegin\n  have h : β = (180 : ℝ) - (90 : ℝ) - α, from rfl,\n  rw [h],\n  have h1 : α = 30, from rfl,\n  rw [h1],\n  norm_num,\nend", 'In a right triangle, the angles are α, β, and 90°. Given that α is 30°, calculate the angle β.', 'In any triangle, the sum of the angles is 180°. Therefore, if we subtract the known angles (30° and 90°) from the total sum of the angles (180°), we can find the value of β. \n\nSo, β = 180° - 90° - 30° = 60°'), ("import data.real.basic\n\n-- Let's define the length and width of the rectangle\ndef rect_length := (5 : ℝ)\ndef rect_width := (2 : ℝ)\n\n-- Let's calculate the area\ndef rect_area := rect_length * rect_width\n\n-- Now we prove that the area is 10 square cm\nexample : rect_area = 10 := \nbegin\n  unfold rect_area,\n  unfold rect_length,\n  unfold rect_width,\n  norm_num,\nend", 'A rectangle has a length of 5 cm and a width of 2 cm. How many square centimeters is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying its length by its width. So, for a rectangle with a length of 5 cm and a width of 2 cm, the area would be 5 cm times 2 cm, which equals 10 square centimeters.'), ('import analysis.calculus.local_extr\n\nopen set real\n\nlemma deriv_mul_modified (f g : ℝ → ℝ) (x : ℝ) \n    (hf : differentiable_within_at ℝ f (univ : set ℝ) x) \n    (hg : differentiable_within_at ℝ g (univ : set ℝ) x) : \n    has_deriv_within_at (λ y, f y * g y) ((deriv_within f univ x) * g x + f x * (deriv_within g univ x)) univ x :=\nbegin\n  apply has_deriv_within_at.mul,\n  exact hf.has_deriv_within_at,\n  exact hg.has_deriv_within_at\nend', "If `f(x)` and `g(x)` are differentiable functions, prove that the derivative of their product, `(f(x) * g(x))`, is `f'(x) * g(x) + f(x) * g'(x)`. This is also known as the Product Rule in calculus.", "For two differentiable functions, `f(x)` and `g(x)`, we know that the derivative of a function at a point is the limit of the function's rate of change at that point. Therefore, we can express the derivative of `f(x) * g(x)` as the limit:\n\n`lim (h->0) [f(x+h) * g(x+h) - f(x) * g(x)] / h`\n\nThis can be arranged into the form:\n\n`lim (h->0) [(f(x+h) * g(x+h) - f(x) * g(x+h) + f(x) * g(x+h) - f(x) * g(x)] / h`\n\nBreaking this down, we get:\n\n`lim (h->0) [(f(x+h) - f(x)) / h * g(x+h) + f(x) * (g(x+h) - g(x)) / h]`\n\nAs h approaches 0, `(f(x+h) - f(x)) / h` approaches `f'(x)` and `(g(x+h) - g(x)) / h` approaches `g'(x)`. Therefore, the derivative of `f(x) * g(x)` is `f'(x) * g(x) + f(x) * g'(x)`."), ('import data.real.basic\n\nexample : (2 / 3 : ℝ) - (1 / 3 : ℝ) = 1 / 3 :=\nbegin\n  norm_num,\nend', 'If you have 2/3 of a pizza and you eat 1/3 of the pizza, what fraction of the pizza remains?', 'The problem can be solved by subtracting the fraction of the pizza you ate (1/3) from the fraction of the pizza you initially had (2/3). So, 2/3 - 1/3 = 1/3. Therefore, 1/3 of the pizza remains.'), ('import data.real.basic\n\n-- defining the variables\ndef AB : ℝ := 10\ndef BC : ℝ := 20\ndef angle_DEG_DC : ℝ := 45\ndef ED : ℝ := 20 -- ED = DC as the angle between them is 45 degrees\ndef AD : ℝ := 10 -- AD = AB as ABCD is a rectangle\n\n-- proving that the area of trapezoid BCED is 200 square units\nexample : ((BC + ED) / 2) * AD = 200 :=\nbegin\n  rw [BC, ED, AD],\n  norm_num,\nend', 'Given a rectangle ABCD with length AB = 10 units, BC = 20 units and a line E from AB to CD dividing the rectangle into two trapezoids. If line E hits point D at a 45-degree angle, what is the area of trapezoid BCED?', "First, we need to find the length of line segment ED. Given that the angle between line ED and DC is 45 degrees, and the length of DC is 20 units (since it's the same as BC, as ABCD is a rectangle), we know that line segment ED also has a length of 20 units (because in a 45-45-90 triangle, the two legs are of equal length).\n\nNext, we find the area of the trapezoid. The formula for the area of a trapezoid is (base1 + base2) / 2 * height. In trapezoid BCED, base1 is BC = 20 units, base2 is ED = 20 units, and the height is AD = 10 units (since it's the same as AB, as ABCD is a rectangle). Therefore, the area of trapezoid BCED is (20 + 20) / 2 * 10 = 200 square units."), ('import data.real.basic\n\n-- Proof\nexample : (3.5 : ℝ) / 7 = 0.5 :=\nbegin\n  norm_num,\nend', 'Jenny has 3.5 pounds of strawberries that she wants to share equally among her 7 friends. How many pounds of strawberries does each friend get?', 'Jenny has 3.5 pounds of strawberries. If she wants to share them equally among her 7 friends, we need to divide 3.5 by 7. This division gives us 0.5. Therefore, each friend gets 0.5 pounds of strawberries.'), ('import data.nat.basic\n\ndef toy_cars_tom_had := 7\ndef toy_cars_from_sister := 3\ndef toy_cars_given_to_friend := 2\n\ndef total_toy_cars := toy_cars_tom_had + toy_cars_from_sister\ndef toy_cars_left := total_toy_cars - toy_cars_given_to_friend\n\nexample : total_toy_cars = 10 := \nbegin\n  unfold total_toy_cars,\n  exact (eq.refl 10),\nend\n\nexample : toy_cars_left = 8 := \nbegin\n  unfold toy_cars_left,\n  have h: total_toy_cars = 10, by exact (eq.refl 10),\n  rw h,\n  exact (eq.refl 8),\nend', 'Tom has 7 toy cars. His sister gave him 3 more toy cars. How many toy cars does Tom have now? Afterwards, Tom gave 2 of his toy cars to his best friend. How many toy cars does Tom have left?', 'To solve this problem, you should first add the number of toy cars Tom originally had to the number of toy cars his sister gave him. That is, 7 + 3 = 10. So Tom had 10 toy cars. Then, subtract the number of toy cars Tom gave to his friend from the total number of toy cars Tom had. So, 10 - 2 = 8. Hence, Tom has 8 toy cars left.'), ("import data.nat.basic\n\nopen nat\n\n-- let's assume that the number of dolls Emma has is 28\ndef dolls := 28\n\n-- let's assume that each shelf can hold 4 dolls\ndef per_shelf := 4\n\n-- we need to find out how many shelves Emma needs\ndef shelves_needed : ℕ := dolls / per_shelf\n\nexample : shelves_needed = 7 :=\nbegin\n  unfold shelves_needed,\n  rw [dolls, per_shelf],\n  refl,\nend", 'Emma is arranging her doll collection on a shelf. Each shelf can hold 4 dolls. If Emma has 28 dolls, how many shelves does she need?', 'Emma can place 4 dolls on each shelf. If she has 28 dolls, we can find out how many shelves she needs by dividing the total number of dolls by the number of dolls each shelf can hold. So, 28 divided by 4 equals 7. Therefore, Emma needs 7 shelves for her dolls.'), ('import data.real.basic\n\n-- define the problem\ndef eq1 (x y : ℝ) : Prop := 2*x + 3*y = 12\ndef eq2 (x y : ℝ) : Prop := 4*x - y = 10\n\n-- prove the solution\nexample : ∃ x y : ℝ, eq1 x y ∧ eq2 x y :=\nbegin\n  use [3, 2],\n  split,\n  { unfold eq1, linarith, },\n  { unfold eq2, linarith, },\nend', 'Given the two-variable equations 2x + 3y = 12 and 4x - y = 10, find the values of x and y.', 'To solve the two-variable equations, we can use a method called substitution or elimination. In this case, we will use elimination. First, multiply the second equation by 3 to make the coefficients of y in the two equations equal. This gives us 12x - 3y = 30. Now we have two equations: 2x + 3y = 12 and 12x - 3y = 30. Add these two equations together to eliminate y, which gives us 14x = 42. Divide both sides by 14, we get x = 3. Substitute x = 3 into the first equation, we get 2*3 + 3y = 12, which simplifies to 6 + 3y = 12. Subtract 6 from both sides, we get 3y = 6. Divide both sides by 3, we get y = 2. So the solution to the equations is x = 3, y = 2.'), ('def students_total := 100\ndef students_apples := 25\ndef students_bananas := 30\ndef students_oranges := 20\ndef students_grapes := students_total - (students_apples + students_bananas + students_oranges)\n\n#check students_grapes  -- it should return 25\n\ndef percentage_grapes := (students_grapes / students_total) * 100\n\n#check percentage_grapes -- it should return 25', 'A survey was conducted in a school to know the favorite fruit of students. The survey collected data from 100 students. According to the survey, 25 students like apples, 30 students like bananas, 20 students like oranges, and the remaining students like grapes. Now, find the percentage of students who like grapes.', 'First, we need to find out how many students like grapes. Since we know the total number of students surveyed is 100 and the number of students who like apples, bananas, and oranges, we can subtract the sum of these three groups from the total to find this out. \n\nSo the number of students who like grapes is 100 - (25 + 30 + 20) = 100 - 75 = 25.\n\nNext, to find the percentage of students who like grapes, we divide the number of students who like grapes by the total number of students and multiply by 100. \n\nSo the percentage of students who like grapes is (25/100) * 100 = 25%.\n\nSo, 25% of students like grapes.'), ('import data.real.basic\n\n-- Equivalent fractions\nexample : (4 : ℝ) / 8 = 1 / 2 := by norm_num\n\n-- Addition of fractions and comparison with 1\nexample : ((1 : ℝ) / 2) + 1 / 4 < 1 := by norm_num', 'We have two fractions: 4/8 and 1/2. The problem is to verify whether these two fractions are equivalent or not. Also, if we have 1/2 and we add 1/4 to it, will the result be greater than, equal to, or less than 1?', "First, let's simplify the fraction 4/8. By dividing the numerator and denominator by their greatest common divisor, which is 4, we get 4/8 = 1/2. Hence, 4/8 and 1/2 are equivalent fractions.\n\nNext, we add 1/4 to 1/2. Before we can add these fractions, we need to find a common denominator, which is 4 in this case. So, we rewrite 1/2 as 2/4. Now, we can add 2/4 and 1/4, which results in 3/4.\n\nFinally, we compare 3/4 and 1. Since 3/4 is less than 1, the result of adding 1/2 and 1/4 is less than 1."), ('def scale : ℕ := 1000000\ndef map_distance : ℕ := 3\ndef actual_distance : ℕ := map_distance * scale\ndef cm_to_km : ℕ := 100000\n\n#eval actual_distance / cm_to_km', 'A map has a scale of 1:1000000, which means 1 cm on the map equals to 1000000 cm in real life. If a city on this map is 3 cm apart from a river, how far is the actual distance between the city and the river in kilometers?', 'Given the scale of the map is 1:1000000, 1 cm on the map equals to 1000000 cm in real life. Therefore, if the city is 3 cm apart from the river on the map, the actual distance would be 3 * 1000000 cm = 3000000 cm. As we know, 1 km equals to 100000 cm, so the actual distance in km would be 3000000 cm / 100000 cm/km = 30 km. So, the actual distance between the city and the river is 30 kilometers.'), ('import data.real.basic\n\n-- defining the variables\ndef toys_per_hour : ℝ := 1000\ndef hours : ℝ := 10\n\n-- defining the function for toy production\ndef toy_production (toys_per_hour hours : ℝ) : ℝ := toys_per_hour*hours\n\n-- calculating the toy production for 10 hours\n#eval toy_production toys_per_hour hours\n-- output: 10000', 'If a toy factory can produce 1,000 toys per hour, how many toys will it produce in 10 hours?', 'The toy factory produces 1,000 toys in one hour. So, in 10 hours, it will produce 10 times this amount. We can calculate this by multiplying 1,000 (toys per hour) by 10 (hours). \n\n1,000 toys/hour * 10 hours = 10,000 toys\n\nSo, the toy factory will produce 10,000 toys in 10 hours.'), ('-- declare a variable for a straight angle\ndef straight_angle : ℕ := 180\n-- declare a variable for a right angle\ndef right_angle : ℕ := straight_angle / 2\n\n#eval right_angle -- this will output 90', 'John has a piece of paper that he folds in half to create a straight angle. He then folds it again so that the resulting angle is a right angle. He wonders how many degrees is in a right angle. Help him figure it out.', 'A straight angle is 180 degrees. When John folds the paper again, he is dividing the straight angle into two equal parts. This means each part must be half of 180 degrees. Therefore, a right angle is 180 degrees divided by 2, which equals to 90 degrees.'), ('import data.real.basic\n\n-- defining the variables\nvariables (a b c : ℝ)\n\n-- stating the given condition\ndef given_condition (a b c : ℝ) := b = 2 * a ∧ c = 3 * a\n\n-- stating the angle sum property of a triangle\ndef angle_sum_property (a b c : ℝ) := a + b + c = 180\n\n-- proving the result\ntheorem find_angles : ∀ (a b c : ℝ), given_condition a b c → angle_sum_property a b c → a = 30 ∧ b = 60 ∧ c = 90 :=\nbegin\n  intros a b c h1 h2,\n  cases h1 with h1a h1b, \n  subst h1a,\n  subst h1b,\n  rw angle_sum_property at h2,\n  have : 6 * a = 180, by linarith,\n  have h : a = 30, by linarith,\n  subst h,\n  split,\n  linarith,\n  split,\n  linarith,\n  linarith,\nend', 'In a triangle ABC, the angle at B is twice the angle at A and the angle at C is three times the angle at A. What are the measures of angle A, angle B, and angle C?', "According to the angle sum property of a triangle, the sum of all interior angles of a triangle is always 180 degrees. Let's denote the measure of angle A as 'a' degrees. Given that angle B is twice the angle A, its measure will be 2a degrees. Similarly, as angle C is three times the angle A, its measure will be 3a degrees. \n\nAdding all these measures together, we have:\n\na + 2a + 3a = 180\n6a = 180 \n\nSolving the equation, we get that a = 30. Therefore, the measure of angle A is 30 degrees, the measure of angle B is 60 degrees, and the measure of angle C is 90 degrees."), ('open nat\n\n-- define the initial number of apples\ndef johns_apples := 5\n\n-- define the number of apples Sam gives\ndef sams_apples := 2\n\n-- define the number of apples John eats\ndef eaten_apples := 3\n\n-- calculate the total number of apples after Sam gives some to John\ndef total_apples := johns_apples + sams_apples\n\n-- calculate the final number of apples after John eats some\ndef final_apples := total_apples - eaten_apples\n\n-- proof that the final number of apples is 4\nexample : final_apples = 4 :=\nbegin\n  unfold final_apples total_apples, -- replace `final_apples` and `total_apples` with their definitions\n  refl, -- finish the proof\nend', 'John has 5 apples and his friend Sam gives him 2 more. Later, he eats 3 of them. How many apples does John have now?', 'To find out how many apples John has now, we can first add the number of apples he started with to the number of apples Sam gave him. This gives us 5 + 2 = 7 apples. Then, we subtract the number of apples John ate from this total. This gives us 7 - 3 = 4 apples. So, John has 4 apples now.'), ('import data.real.basic\n\n-- Here we define the three rectangular flower beds\ndef bed1 : ℝ := 5 * 3\ndef bed2 : ℝ := 4 * 2\ndef bed3 : ℝ := 6 * 4\n\n-- Here we prove that the total area of the three flower beds is 47 square feet\nexample : bed1 + bed2 + bed3 = 47 :=\nbegin\n  rw [bed1, bed2, bed3], -- replace the definitions\n  norm_num, -- solve the simple numerical computation\nend', 'In a park, there are 3 rectangular flower beds. The first rectangular bed is 5 feet long and 3 feet wide. The second rectangular bed is 4 feet long and 2 feet wide. The third rectangular bed is 6 feet long and 4 feet wide. What is the total area of the three rectangular flower beds?', 'To find out the total area of the three rectangular flower beds, we need to figure out the area of each bed first and then add them up. The area of a rectangle is found by multiplying its length by its width. \n\nThe area of the first flower bed is 5 feet * 3 feet = 15 square feet. \nThe area of the second flower bed is 4 feet * 2 feet = 8 square feet. \nThe area of the third flower bed is 6 feet * 4 feet = 24 square feet. \n\nIf we add these three areas together, 15 square feet + 8 square feet + 24 square feet = 47 square feet. So the total area of the three rectangular flower beds is 47 square feet.'), ('import data.real.basic\n\n-- define the length of a side\ndef side_length : ℝ := 8\n\n-- define the perimeter of a square\ndef square_perimeter (side_length : ℝ) : ℝ := 4 * side_length \n\n-- calculate the perimeter\n#eval square_perimeter side_length  -- output: 32', "Sarah has a square-shaped garden. Each side of the garden is 8 feet long. What is the perimeter of Sarah's garden?", "The perimeter of a square can be found by multiplying the length of one side by 4. Since each side of Sarah's garden is 8 feet long, the perimeter is 8 feet * 4 = 32 feet."), ('import data.real.basic\n\ndef calculate_net (loss : ℚ) (gain : ℚ) : ℚ := loss + gain\n\nexample : calculate_net (-5/2) (5/3) = -5/6 :=\nbegin\n  unfold calculate_net,\n  norm_num,\nend', 'If John has a loss of $2 1/2 (negative 2 1/2) dollars in his business and then he gains $1 2/3 dollars, what is his net gain or loss?', "To find the net gain or loss, we need to add John's loss and gain. However, since John's loss is actually a negative quantity, we need to subtract it. So, we add -2 1/2 and 1 2/3. \n\nFirst, let's convert the mixed numbers into improper fractions. -2 1/2 becomes -5/2 and 1 2/3 becomes 5/3. \n\nNow we can add the two fractions. To do so, we need to find a common denominator, which is 6 in this case. So we convert -5/2 to -15/6 and 5/3 to 10/6. \n\nAdding -15/6 and 10/6, we get -5/6. \n\nSo, John's net loss is 5/6 dollars."), ('def calculate_perimeter := \n  λ length width : ℕ, 2 * (length + width)\n\ndef problem : Prop := \n  calculate_perimeter 5 3 = 16\n\ntheorem solution_to_problem : problem :=\n  begin\n    unfold problem,\n    unfold calculate_perimeter,\n    reflexivity,\n  end', 'Jim has a rectangular garden that is 5 meters long and 3 meters wide. How many meters of fencing does Jim need to surround his garden?', "The perimeter of a rectangle is calculated by adding the lengths of all four sides. Since a rectangle has two equal lengths and two equal widths, we can use the formula 2*(length + width) to calculate the perimeter. So, for Jim's garden the perimeter is 2*(5 meters + 3 meters) = 2*8 meters = 16 meters. So, Jim needs 16 meters of fencing to surround his garden."), ('import data.real.basic\n\n-- define the length and width of the garden\ndef garden_length : ℝ := 6\ndef garden_width : ℝ := 4\n\n-- define the formula for the perimeter of a rectangle\ndef rectangle_perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- calculate the perimeter of the garden\ndef garden_perimeter : ℝ := rectangle_perimeter garden_length garden_width\n\n-- proof that the garden_perimeter is 20\nexample : garden_perimeter = 20 :=\nbegin\n  unfold garden_perimeter,\n  unfold rectangle_perimeter,\n  unfold garden_length,\n  unfold garden_width,\n  norm_num,\nend', 'John has a rectangular garden that is 6 feet long and 4 feet wide. He plans to build a fence around his garden. How many feet of fencing will John need?', 'To determine the amount of fencing John will need, we should calculate the perimeter of the rectangle, which is the total length around the rectangle. The formula to calculate the perimeter of a rectangle is 2*(length + width). By substituting the given length and width into the formula, we get 2*(6 ft + 4 ft) = 2*10 ft = 20 ft. Therefore, John will need 20 feet of fencing.'), ('import data.real.basic\n\n-- Define the polynomials P(x) and Q(x)\ndef P (x : ℝ) : ℝ := 2*x^3 - 3*x^2 + 4*x - 5\ndef Q (x : ℝ) : ℝ := x^2 - 2*x + 3\n\n-- Define the addition of the polynomials P(x) and Q(x)\ndef P_plus_Q (x : ℝ) : ℝ := P(x) + Q(x)\n\n-- Verify the result\nexample (x : ℝ) : P_plus_Q(x) = 2*x^3 - 2*x^2 + 2*x - 2 :=\nbegin\n  unfold P_plus_Q,\n  unfold P,\n  unfold Q,\n  ring,\nend', "Let's consider two polynomials P(x) = 2x^3 - 3x^2 + 4x - 5 and Q(x) = x^2 - 2x + 3. Find the result of the polynomial addition P(x) + Q(x).", 'To find the result of the polynomial addition P(x) + Q(x), we simply add the corresponding terms of the two polynomials. The polynomial P(x) + Q(x) is obtained by adding the corresponding coefficients of the terms with the same degree. \n\nSo, we add the coefficients of x^3, x^2, x, and the constant terms separately. Here, P(x) has a x^3 term while Q(x) does not. So, the coefficient of x^3 in the resultant polynomial is the same as that in P(x), which is 2.\n\nFor the x^2 term, we add the coefficients in P(x) and Q(x), -3 and 1 respectively, resulting in -2.\n\nFor the x term, we add the coefficients in P(x) and Q(x), 4 and -2 respectively, resulting in 2.\n\nFor the constant term, we add the constants in P(x) and Q(x), -5 and 3 respectively, resulting in -2.\n\nTherefore, the resultant polynomial is P(x) + Q(x) = 2x^3 - 2x^2 + 2x - 2.'), ('def car_position_at_2pm := (60, 80)\ndef car_velocity := (60, 80)\n\ndef car_position_at_3pm :=\n  (car_position_at_2pm.1 + car_velocity.1, car_position_at_2pm.2 + car_velocity.2)\n\nexample : car_position_at_3pm = (120, 160) :=\nbegin\n  unfold car_position_at_3pm,\n  unfold car_position_at_2pm,\n  unfold car_velocity,\n  simp,\nend', 'A car travels at a constant speed. At 1pm, the car is at position (0, 0) on the coordinate plane. At 2pm, the car is at position (60, 80). At what position will the car be at 3pm, assuming it continues to travel at the same speed and in the same direction?', "The car travels 60 units in the x-direction and 80 units in the y-direction in one hour. Thus, the car's rate of travel in the x-direction is 60 units/hour and in the y-direction is 80 units/hour. \nSince the car is traveling at a constant speed, at 3pm, the car will have traveled an additional 60 units in the x-direction and 80 units in the y-direction. \nTherefore, at 3pm, the car will be at position (60 + 60, 80 + 80) = (120, 160) on the coordinate plane."), ("import data.real.basic\n\n-- Bob's initial amount of pizza\nnoncomputable def bob_initial_pizza : ℝ := 1/4\n\n-- The amount of pizza Alice gives to Bob\nnoncomputable def pizza_from_alice : ℝ := 1/8\n\n-- The new amount of pizza Bob has\nnoncomputable def bob_new_pizza : ℝ := bob_initial_pizza + pizza_from_alice\n\n-- Prove that Bob now has 3/8 of a pizza\nexample : bob_new_pizza = 3/8 :=\nbegin\n  unfold bob_new_pizza,\n  unfold bob_initial_pizza,\n  unfold pizza_from_alice,\n  norm_num,\nend", 'Alice has 1/2 of a pizza and Bob has 1/4 of a pizza. Alice gives 1/8 of a pizza to Bob. What is the new amount of pizza that Bob has?', 'Initially, Bob has 1/4 of a pizza. Alice gives him 1/8 of a pizza. To find out how much pizza Bob now has, we add 1/4 and 1/8. To add these fractions, we first need to find a common denominator. The common denominator for 4 and 8 is 8. So, we change 1/4 to 2/8. Now we can add 2/8 and 1/8 together which equals to 3/8. So, Bob now has 3/8 of a pizza.'), ('import data.int.basic\n\nopen int\n\n-- declare the variables\nvariables (A B C : ℕ)\n\n-- assume the given values\ndef a := 350\ndef b := 440\ndef c := 210\n\n-- proof\n#eval (a + b) - c -- it will return 580', 'If we have three numbers, A = 350, B = 440, and C = 210, what is the result of (A + B) - C?', 'First, we add numbers A and B which gives us 350 + 440 = 790. Then, we subtract C from the result, so we have 790 - 210 = 580. So, the result of (A + B) - C is 580.'), ('import data.real.basic\n\ndef J := 2 / 8 -- John ate 2 out of 8 slices\ndef M := 1 / 4 -- Mary ate 1 out of 4 slices\n\ntheorem pizza_eaten : J = M :=\nbegin\n  unfold J M,\n  norm_num,\nend', "John has a pizza that is divided into 8 equal slices. He eats 2 slices of the pizza. His friend Mary has another pizza which is divided into 4 equal slices. She eats 1 slice of her pizza. Let's define the fraction of the pizza that John ate as J and the fraction that Mary ate as M. Is J greater than, less than or equal to M?", 'First, we can write down the fractions of the pizza that John and Mary ate. John ate 2 out of 8 slices, so J = 2/8 = 1/4 after simplifying. Mary ate 1 out of 4 slices, so M = 1/4. By comparing J and M, we can see that J = M. Therefore, John and Mary ate the same fraction of their pizzas.'), ("import data.real.basic\n\n-- let's denote the number of batches Jack can make as 'b'\n-- we know that 5/2 (flour Jack has) divided by 1/4 (flour per batch) equals 'b'\n-- so we have the equation: (5/2) / (1/4) = b\n-- solving this equation for 'b' we get: b = (5/2) / (1/4)\n\ndef b := (5/2) / (1/4)\n\n#eval b  -- this will output the number of batches Jack can make, which is 10", 'Jack has 5/2 pounds of flour. He uses 1/4 pound of flour to make a batch of cookies. How many batches of cookies can Jack make?', 'First, we need to understand the problem. Jack has 5/2 pounds of flour and he uses 1/4 pound of flour to make a batch of cookies. So, we want to know how many batches of cookies Jack can make. \n\nTo solve this problem, we need to divide the total amount of flour Jack has by the amount of flour he uses per batch of cookies. \n\nThis gives us 5/2 ÷ 1/4 = 20/2 = 10. So, Jack can make 10 batches of cookies.'), ("import data.real.basic\n\n-- let's define the length of the pencil and the eraser\ndef pencil_length : ℝ := 3\ndef eraser_length : ℝ := 2\n\n-- now we can prove that the total length of the pencil and eraser put end-to-end is 5 units\nexample : pencil_length + eraser_length = 5 :=\nbegin\n  unfold pencil_length eraser_length, -- replace the definitions\n  norm_num, -- complete the calculation\nend", 'Alice measures the length of her pencil and finds it to be 3 units long. She then measures the length of her eraser and finds it to be 2 units long. If Alice puts her pencil and eraser end-to-end, what will be the total length?', "Alice's pencil is 3 units long and her eraser is 2 units long. If she puts them end-to-end, we add the length of the pencil and the eraser to find the total length. So, 3 units (pencil) + 2 units (eraser) = 5 units. Therefore, the total length of the pencil and eraser put end-to-end is 5 units."), ('import data.real.basic\n\n-- setting up the variables\nvariables (x : ℝ)\n\n-- assumption that x is positive\nvariable (hx : 0 < x)\n\n-- define the length and width\ndef length (x : ℝ) := 4*x\ndef width (x : ℝ) := 3*x\n\n-- define the perimeter\ndef perimeter (x : ℝ) := 2 * (length x + width x)\n\n-- proving the perimeter in terms of x\nexample : perimeter x = 14 * x :=\nbegin\n  unfold perimeter length width,\n  ring,\nend\n\n-- proving the exact perimeter when x equals 2\nexample (h : x = 2) : perimeter x = 28 :=\nbegin\n  rw h,\n  unfold perimeter length width,\n  norm_num,\nend', 'Consider a rectangle with a length of 4x (where x is a positive real number) and a width of 3x. Find the perimeter of the rectangle in terms of x. Then, if x equals 2, find the exact perimeter of the rectangle.', 'The perimeter of a rectangle is given by the formula 2 * (length + width). Substituting the given length and width into the formula, we have 2 * ((4x) + (3x)) = 2 * (7x) = 14x. This is the perimeter of the rectangle in terms of x. \n\nThen, if x equals 2, we substitute 2 into the expression 14x to get 14 * 2 = 28. So, if x equals 2, the exact perimeter of the rectangle is 28.'), ('import data.int.basic\nimport tactic.norm_num\n\nopen int\n\n-- defining the variables\ndef money := (20 : ℤ)\ndef toy_car_cost := (13 : ℤ)\ndef toy_robot_cost := (10 : ℤ)\n\n-- defining the function for total cost\ndef total_cost := toy_car_cost + toy_robot_cost\n\n-- defining the function for amount needed\ndef amount_needed := total_cost - money\n\n-- proving the theorem\ntheorem estimation_incorrect : amount_needed = 3 :=\nbegin\n  unfold amount_needed total_cost,\n  rw [toy_car_cost, toy_robot_cost, money],\n  norm_num,\nend', "Let's say you have $20. You want to buy a toy car that costs $13 and a toy robot that costs $10. You estimate that you have enough money to buy both. Is your estimation correct? If not, how much more do you need?", 'We start by adding the cost of the toy car and the toy robot. Adding $13 and $10 gives us $23. We then subtract the total cost of the toys, $23, from the amount of money you have, $20. The result, $-3, means you need $3 more to buy both toys. Therefore, your estimation was incorrect.'), ('def miles_travelled (speed : ℕ) (time : ℕ) : ℕ := speed * time\nexample : miles_travelled 60 4 = 240 := rfl', 'A car travels at a constant speed of 60 miles per hour. How many miles does the car travel in 4 hours?', 'Since the car travels at a constant speed of 60 miles per hour, in one hour it will travel 60 miles. Therefore, in 4 hours, the car will travel 4 times that distance. Hence, the car will travel 60 * 4 = 240 miles.'), ("import data.real.basic\n\n-- Let's denote the number of stickers Tom has as x\nvariable (x : ℝ)\n\n-- The equation is set up according to the problem description\ndef stickers := 3*x - 5 = x + 5\n\n-- Solve the equation\nexample : stickers 5 :=\nbegin\n    unfold stickers, -- Unfold the definition of stickers\n    linarith, -- Use linarith to solve the equation\nend", 'John has three times as many stickers as his younger brother, Tom. If John gives Tom 5 stickers, they will have an equal number of stickers. How many stickers does each of them have initially?', "Let's denote the number of stickers Tom has as x. According to the problem, John has 3x stickers. If John gives Tom 5 stickers, they have an equal number of stickers. So we can set up the equation: 3x - 5 = x + 5. Solving this equation, we get x = 5. So Tom initially has 5 stickers, and John has 3*5 = 15 stickers."), ('import data.real.basic\n\n-- defining the value of the three-digit number\ndef three_digit_number : ℕ := 345\n\n-- defining the equation\ndef equation (n : ℕ) := 3*n + 45\n\n-- stating the theorem\ntheorem find_number : ∃ (n : ℕ), equation n = three_digit_number :=\nbegin\n  use 100, -- we are claiming that the number is 100\n  unfold three_digit_number, -- expanding the definition of three_digit_number\n  unfold equation, -- expanding the definition of equation\n  -- now the goal is to show that 3*100 + 45 = 345\n  -- this can be done by simple calculation\n  exact dec_trivial,\nend', 'If the hundreds place of a three-digit number is 3, the tens place is 4, and the ones place is 5, what is the three-digit number? If this number is equal to three times a certain number plus 45, what is that certain number?', 'We can use the concept of place value to form the three-digit number. The three-digit number is 345. \nNext, we can set up an equation to find the certain number. If 345 equals three times a certain number plus 45, we can write it as 345 = 3n + 45. Solving this equation, we get 300 = 3n. Therefore, the certain number n is 100.'), ('import data.real.basic\n\ntheorem add_zero_equals_self (x : ℝ) : x + 0 = x :=\nbegin\n  exact add_zero x,\nend', 'Prove that for any real number x, the operation x + 0 always equals x.', 'The property x + 0 = x is a fundamental property of numbers called the identity property of addition. This property states that when you add zero to any number, the result is the number itself. In our case, x is any real number, so adding zero to x gives us x. Therefore, for any real number x, the operation x + 0 always equals x.'), ('variables (x : ℤ)\n\n-- The expression for the number of marbles John initially had\ndef initial_marbles := x + 5', 'John had a number of marbles. He lost 5 marbles and then had `x` marbles left. After that, his friend gave him 3 marbles. Now, express the number of marbles John initially had in terms of `x`.', 'John initially had `x` marbles and he lost 5, so he must have initially had `x + 5` marbles. Then, he received 3 more marbles from his friend, but these marbles do not change the number of marbles he initially had. Therefore, the expression that represents the number of marbles John initially had is `x + 5`.'), ("def jerry_marbles : ℕ := 6\ndef tom_marbles : ℕ := 5 * jerry_marbles\nexample : tom_marbles = 30 := \nbegin\n  -- Computing tom_marbles before rewriting\n  dsimp [tom_marbles],\n  -- Now we can rewrite\n  rw jerry_marbles,\n  -- Now it's obvious that both sides are equal\n  refl,\nend", 'Tom has 5 times as many marbles as Jerry. If Jerry has 6 marbles, how many marbles does Tom have?', "Given that Tom has 5 times as many marbles as Jerry, and Jerry has 6 marbles, we can calculate the number of marbles Tom has by multiplying the number of Jerry's marbles by 5. So, 5 * 6 = 30. Therefore, Tom has 30 marbles."), ('import data.nat.basic\n\ntheorem place_value (a b : ℕ) (h₁ : a < 10) (h₂ : b < 10) : 10 * a + b = 10 * a + b :=\nbegin\n  exact rfl,\nend', 'Given two natural numbers, a and b, where b is a digit from 0 to 9 and a has only one digit. The number formed by placing b to the right of a (in the place value system) is 10 times a plus b.', "Let's take a number 5 (a) and another number 3 (b). If we place 3 (b) to the right of 5 (a), we get the number 53. Now, if we calculate 10 times 5 (a) plus 3 (b), we get 50 + 3 = 53. This is the same as the number we formed by placing 3 to the right of 5. Hence, the number formed by placing a digit b to the right of a digit a is indeed 10 times a plus b."), ('def johns_apples (m : ℕ) : ℕ := 2 * m', 'John has twice as many apples as his friend Mary. If Mary has "m" apples, express the number of apples John has using the variable "m".', 'If Mary has "m" apples, and John has twice as many, we can express the number of apples John has as 2*m. This is because the phrase "twice as many" means we multiply the original number by 2.'), ('def count_rectangles (squares : ℕ) (rectangles : ℕ) : ℕ :=\nsquares + rectangles\n\n#eval count_rectangles 3 5', "In Ms. Brown's 2nd grade class, she asked her students to count the number of squares and rectangles on the blackboard. There are 3 squares and 5 rectangles. If each square is counted as a rectangle as well because every square is a rectangle, how many rectangles in total did the students count?", 'We know that every square is also a rectangle. Therefore, when counting the number of rectangles, we also need to count the number of squares. The total number of rectangles is thus 5 rectangles + 3 squares, which equals 8 rectangles in total.'), ('def brother_cars (x : ℕ) : ℕ := x + 5', 'John has 5 fewer cars than his brother. If John has `x` cars, how many cars does his brother have?', 'If John has `x` cars, and his brother has 5 more cars than John, then his brother has `x + 5` cars.'), ('import data.real.basic\n\n-- Define the function for the total surface area of a rectangular prism\ndef total_surface_area (l w h : ℝ) : ℝ := 2*l*w + 2*l*h + 2*w*h\n\n-- Prove the total surface area of the given rectangular prism is 94 square units\nexample : total_surface_area 5 4 3 = 94 :=\nbegin\n  -- Compute the total surface area\n  unfold total_surface_area,\n  -- Simplify the expression to get the result\n  norm_num,\nend', 'Given a rectangular prism with a length of 5 units, a width of 4 units, and a height of 3 units, find the total surface area.', 'The total surface area of a rectangular prism is given by the formula 2lw + 2lh + 2wh, where l is the length, w is the width, and h is the height.\n\nSubstituting the given values into the formula, we get:\n\n2(5*4) + 2(5*3) + 2(4*3) = 2(20) + 2(15) + 2(12) = 40 + 30 + 24 = 94 square units.\n\nSo, the total surface area of the rectangular prism is 94 square units.'), ('import data.real.basic\n\nexample : ∀ x : ℝ, 3*x - 2 = 4*x + 1 → x = -3 :=\nbegin\n  intros,\n  linarith,\nend', 'Solve for x in the equation 3x - 2 = 4x + 1.', 'First, we need to get all the x terms on one side of the equation and the constant terms on the other side. We can do this by subtracting 3x from both sides, which gives us -2 = x + 1. Then, we subtract 1 from both sides to solve for x, which gives us x = -3.'), ('import data.nat.basic\n\nopen nat\n\n-- Define the area of the rectangular table and the square rug\ndef table_area := 5 * 3\ndef rug_area := 4 * 4\n\n-- Prove that the rug can cover the table\ntheorem rug_covers_table : rug_area ≥ table_area :=\nbegin\n  unfold rug_area table_area,  -- Replace definitions with their values\n  exact dec_trivial,           -- Check that the inequality 16 ≥ 15 holds\nend', "Let's assume that we have a rectangular table with a length of 5 units and a width of 3 units. If we have a square rug with a side length of 4 units, can the rug cover the entire table completely?", 'To cover the rectangular table completely with the square rug, the area of the rug must be greater than or equal to the area of the table. The area of the rectangular table is calculated by multiplying its length by its width, which results in 5 units * 3 units = 15 square units. \n\nThe area of the square rug is calculated by squaring its side length, which results in 4 units * 4 units = 16 square units. \n\nSince 16 square units (the area of the rug) is greater than 15 square units (the area of the table), the rug can cover the entire table completely.'), ('import data.real.basic\n\n-- define the algebraic expression\ndef f (x : ℝ) := 2*x^2 + 3*x - 5\n\n-- prove that the value of the expression is 9 when x = 2\nexample : f 2 = 9 :=\nbegin\n  -- simplify the expression by substituting x with 2\n  unfold f,\n  -- simplify the arithmetic operation\n  norm_num,\nend', 'Consider the algebraic expression 2x^2 + 3x - 5. If x = 2, what is the value of the expression?', 'To solve this problem, you have to substitute the value of x into the expression. So you replace x with 2 in the expression 2x^2 + 3x - 5. Therefore, the expression becomes 2*2^2 + 3*2 - 5. When you simplify this, you get 8 + 6 - 5, which equals 9. So, when x = 2, the value of the expression 2x^2 + 3x - 5 is 9.'), ('import data.real.basic\n\n-- Let f(x) be a function\ndef f (x : ℝ) := 3*x^2 - 2*x + 1\n\n-- Let F(x) be the antiderivative of f(x)\ndef F (x : ℝ) := x^3 - x^2 + x\n\n-- Let a and b be the limits of the integral\ndef a := (1 : ℝ)\ndef b := (4 : ℝ)\n\n-- Calculate the definite integral\ndef definite_integral := F b - F a\n\n-- Show that the definite integral equals 51\nexample : definite_integral = 51 :=\nbegin\n  unfold definite_integral F a b,\n  norm_num,\nend', 'Given a function f(x) = 3x^2 - 2x + 1 on the interval [1, 4]. Calculate the definite integral of f(x) from 1 to 4.', 'This problem requires you to calculate a definite integral of a function on a specific interval. \n\nFirstly, we calculate the indefinite integral (antiderivative) of f(x), which is F(x) = x^3 - x^2 + x + C, where C is the constant of integration. \n\nSecondly, we evaluate F(x) at the upper limit of the interval (4) and at the lower limit of the interval (1) and subtract these values. \n\nF(4) = 4^3 - 4^2 + 4 + C = 64 - 16 + 4 + C = 52 + C \n\nF(1) = 1^3 - 1^2 + 1 + C = 1 - 1 + 1 + C = 1 + C \n\nFinally, we subtract F(1) from F(4) to get the definite integral: \n\n∫ from 1 to 4 of f(x) dx = F(4) - F(1) = (52 + C) - (1 + C) = 51'), ('def calculate_fence_needed (length : ℕ) (width : ℕ) : ℕ :=\n    2 * (length + width) + length\n#eval calculate_fence_needed 7 4  -- returns 29', 'Billy has a rectangular garden that is 7 meters long and 4 meters wide. He wants to place a fence around his garden. He also wants to split his garden into two equal parts by adding a fence along the middle of the length. How many meters of fence will Billy need?', 'First, we need to calculate the perimeter of the rectangle. The formula for the perimeter of a rectangle is 2*(length + width). Substituting the given values, we get 2*(7 + 4) = 22 meters. \n\nNext, we need to add the length of the fence that Billy will add in the middle of the garden, which is equal to the length of the garden, 7 meters. \n\nSo, Billy will need a total of 22 + 7 = 29 meters of fence.'), ('import data.real.basic\n\ndef rectangle_area (length width : ℝ) : ℝ := length * width\ndef square_area (side : ℝ) : ℝ := side ^ 2\n\nlemma rectangle_square_area_ratio (l w s: ℝ) (h₁ : l = 3) (h₂ : w = 4) (h₃ : s = 4) : rectangle_area l w / square_area s = 0.75 :=\nbegin\n  rw [rectangle_area, square_area],\n  subst h₁,\n  subst h₂,\n  subst h₃,\n  norm_num,\nend', 'Given a rectangle ABCD with sides AB = BC = 3cm and AD = DC = 4cm, and a square PQRS with side length PQ = 4cm. What is the ratio of the area of the rectangle to the square?', 'The area of a rectangle is calculated by multiplying the lengths of two adjacent sides. So, the area of rectangle ABCD is 3cm * 4cm = 12cm^2.\n\nThe area of a square is calculated by squaring the length of one side. So, the area of square PQRS is 4cm * 4cm = 16cm^2.\n\nTherefore, the ratio of the area of the rectangle to the square is 12cm^2 / 16cm^2 = 0.75.'), ("import data.real.basic\n\n-- Let's define the function f(x) = 2x^3 - 15x^2 + 36x\ndef f (x : ℝ) := 2*x^3 - 15*x^2 + 36*x\n\n-- Question 1: Number of customers when the coffee shop opens and closes.\n-- When the coffee shop opens, x=0\n#eval f 0  -- output should be 0\n\n-- When the coffee shop closes, x=12\n#eval f 12 -- output should be 288\n\n-- Let's define the derivative of the function f'(x) = 6x^2 - 30x + 36\ndef df (x : ℝ) := 6*x^2 - 30*x + 36\n\n-- Question 2: The hours after which the number of customers starts to decrease.\n-- To find the hours after which the number of customers starts to decrease, \n-- we need to find the roots of the derivative function.\n\n-- Let's find roots of the derivative function\n-- We know that the roots are x = 2 and x = 3 by factoring the equation.\n-- We can verify this by substituting these values into the derivative function.\n\n#eval df 2  -- output should be 0\n#eval df 3  -- output should be 0\n\n-- Therefore, we can say that the number of customers starts to decrease 3 hours after the shop opens.", 'The number of customers at a coffee shop can be modeled by the function f(x) = 2x^3 - 15x^2 + 36x, where x is the number of hours after the shop opens. \n\nQuestion 1: What is the number of customers when the coffee shop opens (x=0) and closes (x=12)?\n\nQuestion 2: Find the hours after which the number of customers starts to decrease.', "For question 1, we substitute x=0 and x=12 into the function f(x) to find the number of customers when the coffee shop opens and closes. \n\nWhen x=0, f(x) = 2(0)^3 - 15(0)^2 + 36(0) = 0, so there are no customers when the shop opens.\n\nWhen x=12, f(x) = 2(12)^3 - 15(12)^2 + 36(12) = 288, so there are 288 customers when the shop closes.\n\nFor question 2, we need to find when the number of customers starts to decrease, which is when the derivative of the function is less than zero. The derivative of the function f(x) is f'(x) = 6x^2 - 30x + 36. \n\nSetting f'(x) to 0, we get 6x^2 - 30x + 36 = 0 or x^2 - 5x + 6 = 0. \n\nFactoring the equation, we get (x-2)(x-3) = 0. \n\nSo, x = 2 or x = 3. \n\nAfter x=3 hours, the number of customers starts to decrease. Therefore, the number of customers starts to decrease 3 hours after the shop opens."), ('-- The problem is modeled as an exponential function, the formal proof in Lean is not applicable as Lean is a proof assistant for formalizing mathematics, and it does not support algebraic calculations in the conventional sense.', "The number of apples in a basket doubles every hour. If there are 2 apples in the basket at 3 pm, write an algebraic expression to find out how many apples will be in the basket after 'h' hours.", "The number of apples in the basket doubles every hour, which means the number of apples is growing exponentially. If we start with 2 apples at 3 pm, after one hour (at 4 pm), there are 2 * 2 = 4 apples. After another hour (at 5 pm), there are 4 * 2 = 8 apples. After 'h' hours, the number of apples will be 2 * 2 * 2 * ... * 2 (h times), or in other words, 2 to the power of h. Hence, the algebraic expression representing the number of apples in the basket after 'h' hours is 2^h."), ('import data.real.basic\n\n-- defining the variable and the equation\ndef S := {x : ℝ | 2*x + 3*x = 380}\n\n-- the solution to the equation\ndef solution := {x : ℝ | x = 76}\n\n-- proof that the solution is correct\nexample : solution = S :=\nbegin\n  ext,\n  split,\n  { -- proof that if x is in the solution, then it is also in S\n    intro hx,\n    change x = 76 at hx,\n    change 2*x + 3*x = 380,\n    rw hx,\n    norm_num,\n  },\n  { -- proof that if x is in S, then it is also in the solution\n    intro hx,\n    change 2*x + 3*x = 380 at hx,\n    change x = 76,\n    linarith,\n  },\nend', "In a high school, the mathematics teacher conducted a survey on the students' favorite subjects. Results showed that the number of students who prefer Mathematics was twice the number of students who prefer Science. In addition, the number of students who prefer English was three times the number of students who prefer Science. If the total number of students who prefer Mathematics and English was 380, how many students prefer Science?", 'Let\'s denote the number of students who prefer Science as "S". According to the problem, the number of students who prefer Mathematics is twice the number of students who prefer Science, which can be written as "2S". Similarly, the number of students who prefer English is three times the number of students who prefer Science, which can be written as "3S". \n\nAdding these two equations together, we get the total number of students who prefer Mathematics and English, which is 380. Therefore, we get the equation "2S + 3S = 380". Solving this equation, we find out that S = 76. Therefore, 76 students prefer Science.'), ('import data.int.basic\n\nopen int\n\ntheorem debt_total : \n    ∀ (debt1 : ℤ) (debt2 : ℤ), debt1 = -50 → debt2 = -20 → debt1 + debt2 = -70 :=\nbegin\n  intros,\n  rw ᾰ,\n  rw ᾰ_1,\n  refl,\nend', 'If you have a debt of $50 (you owe someone $50) and then you borrow $20 more, how much do you owe in total?', 'If you start with a debt of $50, this can be represented by the number -50. If you then borrow $20 more, this is like adding -20 to your existing debt. So, the total amount you owe can be found by adding -50 and -20 together. This gives you -70. Therefore, you owe $70 in total.'), ('import data.nat.basic\n\n-- Given that Johnny has three times as many soccer stickers as basketball stickers\ndef soccer_stickers (basketball_stickers : ℕ) := 3 * basketball_stickers\n\n-- Given that Johnny has 24 soccer stickers\ndef given : soccer_stickers 8 = 24 := by refl\n\n-- Therefore, Johnny has 8 basketball stickers\nexample : ∃ n, soccer_stickers n = 24 := ⟨8, given⟩', 'Johnny has a collection of stickers. He has three times as many soccer stickers as basketball stickers. If he has 24 soccer stickers, how many basketball stickers does he have?', 'Since Johnny has three times as many soccer stickers as basketball stickers, and he has 24 soccer stickers, he must have 24 divided by 3 basketball stickers. Therefore, Johnny has 8 basketball stickers.'), ("import data.real.basic\n\n-- Let's define the problem\ndef problem (x : ℝ) := 3*x - 5 = 2*x + 7\n\n-- We want to prove that the solution to this problem is x = 12\ntheorem solution : ∃ x : ℝ, problem x ∧ x = 12 :=\nbegin\n  use 12,\n  split,\n  {\n    -- Show that x = 12 is a solution to the problem\n    unfold problem,\n    norm_num\n  },\n  {\n    -- Show that x = 12\n    refl,\n  }\nend", 'If the equation 3x - 5 = 2x + 7, what is the value of x?', 'Firstly, we rearrange the equation to bring all the terms involving x to one side and the constants to the other side. We do this by subtracting 2x from both sides, which gives us 3x - 2x = 7 + 5. \n\nThis simplifies to x = 12. Therefore, the value of x which satisfies the equation 3x - 5 = 2x + 7 is 12.'), ('import data.real.basic\n\n-- define the function and the interval\ndef f (x : ℝ) := x^2\ndef a := (0 : ℝ)\ndef b := (2 : ℝ)', 'Consider a function `f(x) = x^2` defined over the interval `[0, 2]`. Compute the area under the curve of the function over this interval.', 'To compute the area under the curve of a function over a given interval, we use the technique of integration. The definite integral of the function `f(x) = x^2` from `0` to `2` gives us the area under the curve. \n\nThe integral of `x^2` from `0` to `2` is computed as follows:\n\n∫ (from 0 to 2) x^2 dx = [x^3/3] (from 0 to 2) = (2^3/3 - 0^3/3) = 8/3.\n\nSo, the area under the curve of the function `f(x) = x^2` from `0` to `2` is `8/3` square units.'), ('open nat\n\nexample : (45 - 20 = 25) :=\nbegin\n    refl,\nend', 'If you have 45 apples and you give 20 apples to your friend, then how many apples do you have remaining?', 'The number of apples you have remaining can be calculated by subtracting the number of apples you gave away from the number you started with. So, if you subtract 20 (the number of apples you gave to your friend) from 45 (the number of apples you started with), you get 25. Therefore, you have 25 apples remaining.'), ("open nat\n\n-- defining the variables\ndef a := 250\ndef b := 500\n\n-- adding 50 to a and subtracting 100 from b\ndef a' := a + 50\ndef b' := b - 100\n\n-- proving that a' and b' are not equal\ntheorem inequality : a' ≠ b' :=\nbegin\n  intro h, \n  have h1 : a' = 300, by refl, \n  have h2 : b' = 400, by refl, \n  rw h1 at h, \n  rw h2 at h, \n  have contradiction : 300 = 400 → false, by intro h3; cases h3,\n  exact contradiction h,\nend", "Let's assume that we have two numbers, `a` and `b`. `a` is 250 and `b` is 500. If we add 50 to `a` and subtract 100 from `b`, are the two results equal?", "Let's first add 50 to `a`. The result is 250 + 50 = 300. Then we subtract 100 from `b`. The result is 500 - 100 = 400. Hence, the two results are not equal. 300 does not equal 400."), ('-- First, we define the amount John has and the price of the toy car in cents.\ndef johns_money_in_cents : ℤ := 325\ndef toy_car_price_in_cents : ℤ := 150\n\n-- Then, we compute how much money John has left after buying the toy car.\ndef johns_remaining_money_in_cents : ℤ := johns_money_in_cents - toy_car_price_in_cents\n\n-- We prove that John has 175 cents left.\nexample : johns_remaining_money_in_cents = 175 :=\nbegin \n  -- We just need to compute the difference.\n  unfold johns_remaining_money_in_cents,\n  unfold johns_money_in_cents,\n  unfold toy_car_price_in_cents,\n  -- This confirms that John has 175 cents left.\n  exact rfl\nend', 'John has 3 dollars and 25 cents. He spends 1 dollar and 50 cents on a toy car. How much money does John have left?', 'First, we convert the amount John has and the price of the toy car into cents because it is easier to subtract whole numbers. John has 325 cents (3 dollars and 25 cents) and the toy car costs 150 cents (1 dollar and 50 cents). When John buys the toy car, we subtract the price of the toy car from the amount John has. Therefore, John has 325 cents - 150 cents = 175 cents left. To convert this back to dollars and cents, we see that John has 1 dollar and 75 cents left.'), ('import data.real.basic\n\n-- defining the dimensions of the garden and the path\nnoncomputable def garden_length : ℝ := 4.5 \nnoncomputable def garden_width : ℝ := 2.5\nnoncomputable def path_width : ℝ := 0.5\n\n-- defining the area function for a rectangle\ndef rectangle_area (length width : ℝ) : ℝ := length * width\n\n-- calculating the area of the garden\nnoncomputable def garden_area := rectangle_area garden_length garden_width\n\n-- calculating the dimensions of the garden including the path\nnoncomputable def total_length := garden_length + 2 * path_width\nnoncomputable def total_width := garden_width + 2 * path_width\n\n-- calculating the total area\nnoncomputable def total_area := rectangle_area total_length total_width\n\n-- asserting that the garden area is 11.25 square meters\n#check garden_area -- output: garden_area : ℝ \n\n-- asserting that the total area is 15.0 square meters\n#check total_area -- output: total_area : ℝ ', 'Lisa has a rectangular garden that is 2.5 meters wide and 4.5 meters long. She wants to build a path around the garden that is 0.5 meters wide. What will be the total area of the garden including the path?', 'First, we need to calculate the area of the garden without the path. The area of a rectangle is calculated by multiplying its length by its width, so the area of the garden is 2.5 meters * 4.5 meters = 11.25 square meters.\n\nNext, we figure out the dimensions of the garden including the path. The path adds 0.5 meters to both the length and the width of the garden, so the garden (including the path) is 3.0 meters wide and 5.0 meters long.\n\nFinally, we calculate the area of the garden including the path. This area is 3.0 meters * 5.0 meters = 15.0 square meters.'), ("import data.real.basic\n\n-- let's first define the total time Alice spent from 2:40 pm to 4:15 pm\nnoncomputable def total_time : ℝ := 1 + (35/60)\n\n-- let's define the break time Alice took\nnoncomputable def break_time : ℝ := 1/4\n\n-- now, let's calculate the actual time Alice spent reading\nnoncomputable def reading_time : ℝ := total_time - break_time\n\n-- proof that Alice spent 1 1/3 hours reading\nlemma Alice_reading_time : reading_time = 1 + 1/3 :=\nbegin\n  unfold total_time break_time reading_time,\n  norm_num,\nend", 'Alice started reading a book at 2:40 pm and stopped at 4:15 pm. She took a break of 1/4 hour during this time. How long did Alice spend reading the book?', 'Firstly, calculate the total time from 2:40 pm to 4:15 pm. There are 60 minutes in an hour, so the time elapsed is 1 hour and 35 minutes, or 1 35/60 hours, which simplifies to 1 7/12 hours.\n\nAlice took a break of 1/4 hour. To find the actual time Alice spent reading, we subtract the break time from the total time. Thus, Alice spent 1 7/12 - 1/4 hours reading.\n\nTo subtract these fractions, we first need to find a common denominator. The least common multiple of 12 and 4 is 12. So, we rewrite 1/4 as 3/12. Now, we can subtract the fractions: 7/12 - 3/12 = 4/12. Simplifying the fraction gives us 1/3. \n\nSo, Alice spent 1 1/3 hours reading the book.'), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def laptop_price : ℝ := 800\nnoncomputable def printer_price : ℝ := 100\nnoncomputable def laptop_discount : ℝ := 20/100\nnoncomputable def printer_discount : ℝ := 10/100\n\n-- calculating the discounted prices\nnoncomputable def laptop_discounted_price : ℝ := laptop_price * (1 - laptop_discount)\nnoncomputable def printer_discounted_price : ℝ := printer_price * (1 - printer_discount)\n\n-- calculating the total amount\nnoncomputable def total_amount : ℝ := laptop_discounted_price + printer_discounted_price\n\n-- proof\nexample : total_amount = 730 :=\nbegin\n  unfold total_amount,\n  unfold laptop_discounted_price,\n  unfold printer_discounted_price,\n  unfold laptop_price laptop_discount printer_price printer_discount,\n  norm_num,\nend', 'John went to a store to buy a new laptop. The original price of the laptop was $800, but the store was offering a 20% discount. After buying the laptop, John also decided to buy a printer which cost $100. However, there was a 10% discount on the printer. What is the total amount John paid for both the laptop and the printer?', 'Firstly, we need to determine the discount amount for both the laptop and the printer. \n\nA 20% discount on the $800 laptop implies that John pays 80% of the original price. 80% of $800 is $640. \n\nA 10% discount on the $100 printer implies that John pays 90% of the original price. 90% of $100 is $90. \n\nAdding the discounted prices of the laptop and the printer, we get $640 + $90 = $730. \n\nSo, John paid a total of $730 for both the laptop and the printer.'), ('import data.real.basic\n\n-- defining the vector valued function r(t) = ⟨t, t², t³⟩\ndef r (t : ℝ) := (t, t^2, t^3)\n\n-- defining the derivative function dr/dt\ndef dr_dt (t : ℝ) := (1, 2*t, 3*t^2)\n\n-- stating the theorem\ntheorem derivative_at_t_one : dr_dt 1 = (1, 2, 3) :=\nbegin\n  -- unfolding the definition of dr_dt at t = 1\n  unfold dr_dt,\n  -- simplifying the terms\n  simp,\nend', 'Given a vector-valued function r(t) = ⟨t, t², t³⟩, find the derivative dr/dt at t = 1.', 'To find the derivative of a vector-valued function, we must take the derivative of each component function independently. \n\nThe derivative of the first component, t, is 1. \nThe derivative of the second component, t², is 2t. At t = 1, this is 2(1) = 2.\nThe derivative of the third component, t³, is 3t². At t = 1, this is 3(1)² = 3.\n\nSo, the derivative of r(t) at t = 1 is ⟨1, 2, 3⟩.'), ('import data.real.basic\n\ndef fraction_of_candy_bar := 1 / 4\n\n#check fraction_of_candy_bar', 'Susan has a candy bar that she wants to share with her 3 friends. If she breaks the candy bar into 4 equal parts and gives each friend one part, what fraction of the candy bar does each friend get?', 'Susan breaks the candy bar into 4 equal parts because there are 4 people in total (her 3 friends and herself). Each friend gets one part of the candy bar, which is 1 out of the 4 parts. So each friend gets 1/4 (one-quarter) of the candy bar.'), ('import data.real.basic\n\n-- Model the profit function\ndef P (x : ℝ) := 50*x - 2000\n\n-- Prove that to have a profit of at least $5000, \n-- the company needs to sell at least 140 units\ntheorem min_units : ∀ x : ℝ, P x ≥ 5000 → x ≥ 140 :=\nbegin\n  intros x h,\n  -- rewrite the profit function\n  unfold P at h,\n  -- isolate x\n  linarith,\nend', "A company's profit P (in dollars) is related to the number of units sold, x, according to the equation P = 50x - 2000. If the company wants to have a profit of at least $5000, what is the minimum number of units they need to sell?", "To solve this problem, we need to set the company's profit P equal to $5000 and solve for x. The equation then becomes:\n\n5000 = 50x - 2000\n\nBy adding 2000 to both sides we get:\n\n7000 = 50x\n\nFinally, by dividing both sides by 50, we find that x equals 140. Therefore, the company needs to sell at least 140 units to make a profit of $5000."), ('import data.real.basic\nimport data.complex.exponential\n\nnoncomputable theory\n\n-- Define f(t) = e^(2t)\ndef f (t : ℝ) := real.exp (2 * t)\n\n-- Define F(s) = 1 / (s - 2) for s > 2\ndef F (s : ℝ) (h : 2 < s): ℝ := 1 / (s - 2)\n\n-- Prove that F(s) = 1 / (s - 2) for s > 2\ntheorem laplace_transform_of_exp : \n  ∀ (s : ℝ) (h: 2 < s), F s h = 1 / (s - 2) :=\nbegin\n  intros s hs,\n  simp [F],\nend', 'Prove that the Laplace transform of the function f(t) = e^(2t) is F(s) = 1 / (s - 2) for s > 2.', 'To solve this problem, we use the definition of the Laplace transform, which is given by the integral from 0 to infinity of e^(-st)f(t) dt. \n\nSubstituting f(t) = e^(2t) into the integral, we get the integral from 0 to infinity of e^(-st)e^(2t) dt. \n\nThis simplifies to the integral from 0 to infinity of e^((2-s)t) dt. \n\nThis integral can be solved using the standard result ∫e^(at) dt = 1/a e^(at), which gives 1/(2 - s) e^((2 - s)t) evaluated from 0 to infinity.\n\nPlugging in the limits of integration, we find that the result is 1/(s - 2) for s > 2.'), ('import data.real.basic\n\n-- Defining the volume of a cylinder\nnoncomputable def volume_cylinder (r h : ℝ) : ℝ := 3.14 * r * r * h\n\n-- Proving the problem\ntheorem volume_water_in_cylinder (r : ℝ) : volume_cylinder r (2 * r) = 2 * 3.14 * r * r * r :=\nbegin\n  unfold volume_cylinder,\n  -- Proving by direct calculation\n  ring,\nend', "In a cylinder with radius `r` and height `h`, a sphere with radius `r` is inscribed. The cylinder is then filled with water up to a height `h1` such that the sphere is completely submerged. If `h1` equals the diameter of the sphere, what's the volume of the water in the cylinder?", 'The volume of the water is equal to the volume of the cylinder with height `h1`. Since `h1` is the diameter of the sphere, it equals `2r`. Thus, the volume of the water can be calculated using the formula for the volume of a cylinder, which is `πr²h`. Substitute `2r` for `h` in the formula, the volume of the water becomes `2πr³`.'), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 15 8 = 120 :=\nbegin\n  simp [rectangle_area],\n  exact rfl,\nend', 'Given that the length of a rectangle is 15 units and the width is 8 units, what is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. Therefore, the area of this rectangle is 15 units * 8 units = 120 square units.'), ('import data.real.basic\n\n-- define the initial and final amounts of perfume\nnoncomputable def initial_amount : ℝ := 3 / 4\nnoncomputable def final_amount : ℝ := 1 / 2\n\n-- define the amount of perfume used\nnoncomputable def amount_used : ℝ := initial_amount - final_amount\n\n-- proof that the amount of perfume used is 1/4\nexample : amount_used = 1 / 4 :=\nbegin\n  unfold amount_used,       -- expand the definition of amount_used\n  unfold initial_amount,    -- expand the definition of initial_amount\n  unfold final_amount,      -- expand the definition of final_amount\n  norm_num,                 -- simplify the numbers\nend', 'Sally has a bottle of perfume that is 3/4 full. After using it for a week, the bottle is now 50% full. What fraction of the perfume did Sally use in a week?', 'Initially, the perfume was 3/4 full, which is equivalent to 75%. After a week, the perfume was 50% full. The percentage of the perfume used by Sally is the initial amount minus the final amount, which is 75% - 50% = 25%. Therefore, Sally used 25% of the perfume in a week. Converting this percentage to a fraction, we get 25/100 = 1/4. Hence, Sally used 1/4 of the perfume in a week.'), ('import data.real.basic\n\n-- defining the problem\ndef apples : ℝ := 36\ndef friends : ℝ := 9\n\n-- proving the result\nexample : apples / friends = 4 :=\nbegin\n    rw [apples, friends],\n    norm_num,\nend', 'If Johnny has 36 apples and he wants to divide them equally among his 9 friends, how many apples does each friend get?', 'Since Johnny wants to divide his apples equally among his 9 friends, we need to divide the total number of apples by the total number of friends. \n\nSo, we do 36 divided by 9, which equals 4. \n\nTherefore, each friend will get 4 apples.'), ('def study_time (start_hour : ℕ) (start_minute : ℕ) (end_hour : ℕ) (end_minute : ℕ) : ℕ :=\n    ((end_hour - start_hour) * 60 + end_minute) - start_minute\n\n#eval study_time 3 15 4 45  -- The output should be 90', 'John started studying for his exam at 3:15 pm and finished at 4:45 pm. How long did John study for his exam?', 'First, we need to find out how many minutes are between 3:15 pm and 4:45 pm. There are 60 minutes in an hour. John finished studying at 4:45 pm, which is 45 minutes past the hour. He started studying at 3:15 pm, which is also 15 minutes past the hour. So if we subtract the starting time from the end time (45 - 15), we get 30 minutes. But we also have to add the hour between 3:15 pm and 4:15 pm, which gives us a total of 60 + 30 = 90 minutes. So, John studied for 90 minutes.'), ('def a := 5\ndef b := 3\n#eval 3*a + 2*b - 7', 'If a = 5 and b = 3, what is the value of the algebraic expression 3a + 2b - 7?', 'First, we substitute the values of a and b into the equation. This gives us 3*5 + 2*3 - 7 which simplifies to 15 + 6 - 7. Further simplifying, we get 21 - 7 which is equal to 14. So, the value of the algebraic expression 3a + 2b - 7 is 14.'), ('import data.real.basic\n\nexample : (3 : ℝ) / 4 = 6 / 8 :=\nbegin\n  norm_num,\nend', 'Prove that the fraction 3/4 is equivalent to the fraction 6/8.', 'Two fractions are equivalent if they represent the same quantity. We can determine this by simplifying each fraction to its lowest terms. \n\nThe fraction 3/4 is already in its simplest form. \n\nThe fraction 6/8 can be simplified by dividing the numerator (6) and the denominator (8) by their greatest common divisor, which is 2. When we do this, we get the fraction 3/4. \n\nThis shows that 3/4 and 6/8 represent the same quantity, so they are equivalent fractions.'), ('import data.real.basic\n\ntheorem add_eq_add {a b c d : ℝ} (hab : a = b) (hcd : c = d) : a + c = b + d :=\nbegin\n  rw hab,\n  rw hcd,\nend', 'Prove that for any real numbers a, b, c, d, if a = b and c = d, then a + c = b + d.', 'Given that a equals b and c equals d, we can substitute b for a and d for c in the equation a + c. Doing so, we find that a + c equals b + d, proving the theorem.'), ('def add := nat.add\n\ndef play_time_blue_car := add 10 15\ndef play_time_red_car := add 20 10\n\ndef total_play_time := add play_time_blue_car play_time_red_car\n\n#print total_play_time', 'John has two toy cars, one blue and one red. He played with the blue car for 10 minutes in the morning and another 15 minutes in the afternoon. He played with the red car for 20 minutes in the morning and another 10 minutes in the afternoon. How many minutes in total did John play with his two cars?', 'John played with the blue car for a total of 10 minutes in the morning plus 15 minutes in the afternoon, which is 25 minutes. He played with the red car for a total of 20 minutes in the morning plus 10 minutes in the afternoon, which is 30 minutes. So, in total, John played with his two cars for 25 minutes plus 30 minutes, which is 55 minutes.'), ('import data.real.basic\n\n-- defining rectangle\ndef rectangle_area (length width : ℝ) : ℝ := length * width\n\n-- proving the theorem\ntheorem rectangle_area_inequality : rectangle_area 12 8 ≠ rectangle_area 18 6 :=\nbegin\n  unfold rectangle_area, -- unfolding the definition of rectangle area\n  norm_num, -- simplifying the numerical computation\nend', 'Given two rectangles, rectangle A with a length of 12 units and a width of 8 units, and rectangle B with a length of 18 units and a width of 6 units, prove that the area of rectangle A is equal to the area of rectangle B.', "The area of a rectangle can be found by multiplying the rectangle's length by its width. \n\nFor rectangle A, we have a length of 12 units and a width of 8 units, so the area is 12 units * 8 units = 96 square units.\n\nFor rectangle B, we have a length of 18 units and a width of 6 units, so the area is 18 units * 6 units = 108 square units.\n\nSo, the area of rectangle A is not equal to the area of rectangle B."), ("import data.real.basic\n\n-- Let's define the multivariable function\ndef f (x y : ℝ) := 3*x - y^2\n\n-- First, we define the variables\ndef x := 4\ndef y := 3\n\n-- Then, we substitute the values into the function\ntheorem number_of_sales : f x y = 3 :=\nbegin\n  unfold f, \n  unfold x, \n  unfold y, \n  norm_num,   -- simplifies the calculation\nend", 'Let f(x, y) be a function that represents the number of sales (in thousands) of a product, where x represents the amount of advertising spent (in thousands) and y represents the price of the product (in dollars). The function is given by f(x, y) = 3x - y^2. If the amount spent on advertising is $4,000 and the price of the product is $3, find the number of sales of the product.', 'To find the number of sales of a product, we need to substitute the given values into the function f(x, y). In this case, x is the amount of advertising spent, which is $4,000 (or 4 in thousands), and y is the price of the product, which is $3. So, we substitute these values into the function f(x, y) = 3x - y^2, giving us f(4, 3) = 3*4 - 3^2. This simplifies to 12 - 9, which equals 3. Therefore, the number of sales of the product is 3,000.'), ('import data.matrix.basic\n\nvariables {α : Type*} [has_add α]\nvariables (A B : matrix (fin 2) (fin 2) α)\ndef C : matrix (fin 2) (fin 2) α := A + B\n\nlemma mat_add : C A B = λ i j, A i j + B i j :=\nbegin\n  unfold C,\n  ext i j,\n  simp,\nend', "Let's suppose that we have two 2x2 matrices A and B where:\n\nMatrix A = [[√2, √3], [√5, √7]],\n\nMatrix B = [[√7, √5], [√3, √2]].\n\nWhat is the result of the addition of these two matrices?", 'Adding matrices involves adding corresponding elements together. So, the resultant matrix C from the addition of matrices A and B will be:\n\nMatrix C = A + B\n\nTherefore,\n\nMatrix C = [[√2 + √7, √3 + √5], [√5 + √3, √7 + √2]]\n\nMatrix C = [[√9, √8], [√8, √9]]\n\nSo, the resultant matrix C after the addition is [[3, 2√2], [2√2, 3]].'), ('import data.real.basic\n\n-- Define the function\ndef f (x y : ℝ) := x^2 * y - y^3\n\n-- Define the partial derivative with respect to x\ndef partial_deriv_x (x y : ℝ) := 2*x*y\n\n-- Proof that the partial derivative of f with respect to x at (2,1) is 4\nexample : partial_deriv_x 2 1 = 4 :=\nbegin\n  unfold partial_deriv_x,\n  norm_num,\nend', 'Given the function f(x, y) = x²y - y³, find the partial derivative of the function with respect to x at the point (2,1).', 'The partial derivative of a function with respect to x is calculated by treating all other variables as constants and differentiating with respect to x. For the given function f(x, y) = x²y - y³, taking the derivative with respect to x while treating y as a constant gives us 2xy. Evaluating this at the point (2,1) gives us 2*2*1 = 4.'), ('import data.real.basic\n\n-- defining functions f and g\ndef f (x : ℝ) : ℝ := 2*x + 3\ndef g (x : ℝ) : ℝ := x - 1\n\n-- defining the composite function and inverse function\ndef fog (x : ℝ) : ℝ := f (g x)\nnoncomputable def f_inv (x : ℝ) : ℝ := (x - 3) / 2\n\n-- proving that the value of the composite function at x = 4 is 9\nexample : fog 4 = 9 :=\nbegin\n  unfold fog,\n  unfold f,\n  unfold g,\n  norm_num,\nend\n\n-- proving that the value of the inverse function at x = 11 is 4\nexample : f_inv 11 = 4 :=\nbegin\n  unfold f_inv,\n  norm_num,\nend', "Let's consider two functions f and g. The function f is defined as f(x) = 2x + 3, and the function g is defined as g(x) = x - 1. What is the value of the composite function (f ∘ g)(x) at x = 4? Also, find the inverse of the function f and evaluate it at x = 11.", 'For the composite function, we first evaluate g at x = 4, which gives us g(4) = 4 - 1 = 3. Then, we substitute this into the function f, yielding f(g(4)) = f(3) = 2*3 + 3 = 9.\n\nFor the inverse of the function f, we first write the function y = 2x + 3 in the form x = 2y + 3, then solve for y to get the inverse function f^-1(x) = (x - 3) / 2. Evaluating this at x = 11, we get f^-1(11) = (11 - 3) / 2 = 4.'), ('open nat\n\n-- defining the number of apples in each basket\ndef basket1 := 12\ndef basket2 := 8\n\n-- defining the number of apples given to friend\ndef friend := 5\n\n-- proving the total number of apples in both baskets\nexample : basket1 + basket2 = 20 :=\nbegin\n  simp [basket1, basket2],\nend\n\n-- proving the number of apples left after giving some to friend\nexample : (basket1 + basket2) - friend = 15 :=\nbegin\n  simp [basket1, basket2, friend],\nend', 'If there are 12 apples in one basket and 8 apples in another basket, what will be the total number of apples in both baskets? Also, suppose you gave 5 apples to your friend, how many apples will be left?', 'To find the total number of apples in both baskets, you simply add the number of apples in each basket. So, 12 apples from one basket plus 8 apples from another basket equals 20 apples in total. \n\nThen, if you gave 5 apples to your friend, you subtract 5 from the total number of apples. So, 20 apples minus 5 apples equals 15 apples. Hence, you will be left with 15 apples.'), ('import data.real.basic\n\nvariables (a b : ℝ)\n\ntheorem add_commutative_inequality : a + b = b + a → a + b ≥ b + a :=\nbegin\n  intro h,\n  rw h,\n  exact le_refl (b + a),\nend', 'Prove that if for two numbers, a and b, the equation a+b = b+a holds true, then the inequality a+b ≥ b+a also holds true.', 'If a+b = b+a, then obviously a+b is not less than b+a, because they are equal. Therefore, the inequality a+b ≥ b+a holds true.'), ('import data.real.basic\n\n-- First, we define the polynomial\ndef p (x : ℝ) : ℝ := x^2 - 5*x + 6\n\n-- Then, we define the factored form of the polynomial\ndef q (x : ℝ) : ℝ := (x - 2) * (x - 3)\n\n-- We want to show that for all real numbers x, p(x) = q(x)\nexample : ∀ x : ℝ, p x = q x :=\nbegin\n  intro x,\n  -- Expand both sides\n  have : p x = x^2 - 5*x + 6 := rfl,\n  have : q x = x^2 - 5*x + 6,\n  { calc\n    (x - 2) * (x - 3) = x^2 - 3*x - 2*x + 6 : by ring\n                  ... = x^2 - 5*x + 6        : by ring },\n  -- Now the two sides are identical\n  rw [this, ‹p x = x^2 - 5*x + 6›]\nend', 'Given a quadratic polynomial `p(x) = x^2 - 5x + 6`, prove that it can be factored as `(x - 2)(x - 3)`.', 'A quadratic polynomial of the form `ax^2 + bx + c` can be factored by finding two numbers that both multiply to `a*c` and add up to `b`. In this case, `a = 1`, `b = -5` and `c = 6`. The two numbers that fit the criteria are `-2` and `-3`. They multiply to `1*6 = 6` and add up to `-5`. Therefore, the polynomial `x^2 - 5x + 6` can be factored as `(x - 2)(x - 3)`.'), ('def calc_non_participants (total_students: ℕ) (basketball_players: ℕ) (football_players: ℕ) (both_sports: ℕ) : ℕ :=\nlet basketball_only := basketball_players - both_sports,\n    football_only := football_players - both_sports,\n    either_sport := basketball_only + football_only + both_sports in\ntotal_students - either_sport\n\n#eval calc_non_participants 300 100 150 50  -- output will be 100', 'In a high school, there are 300 students in total. A survey was conducted to determine how many students participate in either basketball or football or both. The results were: 100 students play basketball, 150 students play football and 50 students play both sports. How many students do not participate in either sport?', 'Firstly, we identify the number of students who play only one sport. This can be done by subtracting the number of students who play both sports from the total number of students who play each sport. \n\nThe number of students who only play basketball = total basketball players - students who play both sports = 100 - 50 = 50.\n\nSimilarly, the number of students who only play football = total football players - students who play both sports = 150 - 50 = 100.\n\nThe total number of students who play either sport (or both) = students who only play basketball + students who only play football + students who play both sports = 50 + 100 + 50 = 200.\n\nNow, to find out the number of students who do not participate in either sport, we subtract the total number of students who play either sport from the total number of students in the school.\n\nNumber of students who do not play either sport = total students - students who play either sport = 300 - 200 = 100.\n\nSo, there are 100 students who do not participate in either sport.'), ('import data.real.basic\n\n-- defining the fractions as real numbers\nnoncomputable def fraction_one := (2 : ℝ) / 4\nnoncomputable def fraction_two := (1 : ℝ) / 2\n\n-- proof that the fractions are equivalent\nexample : fraction_one = fraction_two :=\nbegin\n  unfold fraction_one fraction_two,\n  norm_num,\nend', "Let's consider two fractions: 2/4 and 1/2. Are they equivalent fractions?", "Yes, these two fractions are equivalent. Here's why: \n\nWe know that a fraction is equivalent to another if we can multiply or divide both the numerator and the denominator by the same number to get the other fraction. For the fraction 2/4, we can divide both the numerator (which is 2) and the denominator (which is 4) by 2. When we do this, we get the fraction 1/2. Therefore, 2/4 and 1/2 are equivalent fractions."), ('import data.real.basic\n\n-- Represent the amount of chocolate John ate\nnoncomputable def john_chocolate : ℝ := 3 / 12\n\n-- Represent the amount of chocolate Mike ate\nnoncomputable def mike_chocolate : ℝ := 2 / 8\n\n-- Verify that both quantities are equal\nexample : john_chocolate = mike_chocolate :=\nbegin\n  unfold john_chocolate mike_chocolate, \n  norm_num,\nend', 'John has a chocolate bar divided into 12 equal parts. He ate 3 parts of it. His friend, Mike, also has a similar chocolate bar, but he ate 2 parts out of 8. Who ate more chocolate?', 'First, we need to express the amounts of chocolate eaten by John and Mike in equivalent fractions. \n\nJohn ate 3 out of 12 parts, so the fraction representing the amount John ate is 3/12. \n\nMike ate 2 out of 8 parts, so the fraction representing the amount Mike ate is 2/8.\n\nWe can simplify these fractions. \n\nThe fraction 3/12 simplifies to 1/4 (by dividing the numerator and the denominator by 3). \n\nThe fraction 2/8 simplifies to 1/4 (by dividing the numerator and the denominator by 2). \n\nSo, John and Mike both ate the same amount of chocolate, 1/4 of a chocolate bar.'), ('import data.int.basic \n\nopen int \n\n-- defining the variables\ndef john_money : ℤ := 10\ndef toy_car_cost : ℤ := 3\ndef number_of_cars : ℤ := 2\n\n-- calculating the total cost of the cars\ndef total_cost : ℤ := toy_car_cost * number_of_cars\n\n-- calculating the remaining money\ndef remaining_money : ℤ := john_money - total_cost\n\n-- proving the remaining money is $4\nexample : remaining_money = 4 :=\nbegin\n  unfold remaining_money total_cost,\n  unfold john_money toy_car_cost number_of_cars,\n  refl,\nend', 'John has $10. He wants to buy a toy car which costs $3. He buys 2 toy cars. How much money does he have left?', 'John spends $3 for each toy car. So, for 2 toy cars, he spends $3 * 2 = $6. He initially had $10. So, after buying the toy cars, he has $10 - $6 = $4 left.'), ('import data.real.basic\n\n-- First, we declare our variables\ndef length : ℝ := 7\ndef width : ℝ := 5\ndef height : ℝ := 3\n\n-- Then, we define the function for the volume of a rectangular prism\ndef volume_of_rectangular_prism (length width height : ℝ) : ℝ := length * width * height\n\n-- Finally, we calculate the volume of our prism\n#eval volume_of_rectangular_prism length width height\n-- output: 105', 'Suppose we have a rectangular prism with a length of 7 units, a width of 5 units, and a height of 3 units. What is the volume of this prism?', 'The volume of a rectangular prism is calculated by the formula Volume = length x width x height. So, we just multiply the given dimensions together. Multiplying 7 units (length) by 5 units (width) by 3 units (height) gives us a volume of 105 cubic units.'), ('import data.real.basic\n\n--defining the area of rectangle and triangle\ndef rectangle_area (length width : ℝ) : ℝ := length * width\nnoncomputable def triangle_area (base height : ℝ) : ℝ := (base * height) / 2\n\n--state the theorem\ntheorem right_triangle_area_half_rectangle_area \n(length width base height : ℝ) (h₁ : length = base) (h₂ : width = height) : \ntriangle_area base height = rectangle_area length width / 2 := \nbegin\nrw [rectangle_area, triangle_area],\nrw [h₁, h₂],\nend', 'Given two equations of a system: \n1. y = 2x + 3 and \n2. y = x - 2.\n\nWe need to find the point of intersection. After finding the point of intersection, we need to reflect it across the y-axis. What is the coordinate of the reflected point?', 'Firstly, to find the point of intersection we set the two equations equal to each other and solve for x:\n\n2x + 3 = x - 2 \n\nThis simplifies to x = -5. \n\nSubstituting x = -5 into the first equation gives y = 2*(-5) + 3 = -7. So, the point of intersection is (-5,-7).\n\nReflection of a point (x,y) across the y-axis is given by (-x, y). Therefore, the reflection of the point (-5, -7) across the y-axis is (5, -7).'), ('import data.real.basic\n\ndef square_perimeter (side : ℝ) : ℝ := 4 * side\ndef square_area (side : ℝ) : ℝ := side * side\n\nexample : square_perimeter 10 = 40 ∧ square_area 10 = 100 :=\nbegin\n  split,\n  { unfold square_perimeter, norm_num, },\n  { unfold square_area, norm_num, },\nend', 'Given a square with a side length of 10 units, calculate the perimeter and the area of the square.', 'A square has four sides of equal length. Therefore, to calculate the perimeter of the square, we simply multiply the length of one side by 4. In this case, 10 units * 4 = 40 units.\n\nThe area of a square is calculated by squaring the length of one side. Therefore, the area of this square is 10 units * 10 units = 100 square units. \n\nSo, the perimeter of the square is 40 units and the area of the square is 100 square units.'), ('import data.real.basic \n\nexample : (2 / 4 : ℝ) = (1 / 2 : ℝ) ∧ (2 * 5 : ℝ) > (3 ^ 2 : ℝ) := \nbegin \n  split,\n  { norm_num, },\n  { norm_num, },\nend', 'Suppose we have two fractions, 2/4 and 1/2, and two numbers, 3^2 and 2*5. Are these two fractions equivalent? And which is larger, 3^2 or 2*5?', 'For the first part of the problem, we can simplify 2/4 to 1/2 by dividing both the numerator and denominator by 2. So, yes, these two fractions are equivalent.\n\nFor the second part of the problem, we can simplify 3^2 to 9 and 2*5 to 10. Since 10 is larger than 9, 2*5 is larger than 3^2.'), ('import data.real.basic\n\ntheorem intersect_single_point (m1 m2 b1 b2 : ℝ) (h : m1 ≠ m2) :\n∃ x y : ℝ, y = m1 * x + b1 ∧ y = m2 * x + b2 :=\nbegin\n  use [(b2 - b1) / (m1 - m2), (m1 * b2 - m2 * b1) / (m1 - m2)],\n  split,\n  { field_simp [sub_ne_zero.mpr h],\n    ring },\n  { field_simp [sub_ne_zero.mpr h],\n    ring }\nend', 'Given two different linear equations, y = m1x + b1 and y = m2x + b2, where m1 ≠ m2, prove that their graphs intersect at a single point.', 'A linear equation in the form y = mx + b represents a straight line in a two-dimensional plane. If we have two different linear equations, y = m1x + b1 and y = m2x + b2, where m1 ≠ m2, these two equations represent two straight lines on the plane. \n\nSince m1 ≠ m2, the slopes of the two lines are different. This means that the two lines are not parallel. In a two-dimensional plane, two non-parallel straight lines will intersect at exactly one point. Therefore, the graphs of these two linear equations intersect at a single point.'), ('import data.real.basic\n\n-- defining the structure of a rectangle\nstructure rectangle :=\n(base : ℝ) (height : ℝ)\n\n-- defining the area of a rectangle\ndef area (r : rectangle) : ℝ :=\nr.base * r.height\n\n-- defining rectangle ABCD\ndef ABCD : rectangle :=\n{ base := 7, height := 5 }\n\n-- proving the area of ABCD is 35\nexample : area ABCD = 35 :=\nbegin\n  unfold area,\n  unfold ABCD,\n  norm_num,\nend', 'In a rectangle ABCD, AB = CD = 7 and BC = AD = 5. What is the area of rectangle ABCD?', 'The area of a rectangle is found by multiplying the length of the base by the height. In this case, we can consider AB as the base and BC as the height. Therefore, the area of rectangle ABCD will be AB * BC = 7 * 5 = 35 square units.'), ('variables (first_week_cups : ℤ) (second_week_cups : ℤ) (price_per_cup : ℤ)\ndef total_amount_in_week (cups : ℤ) (price_per_cup : ℤ) : ℤ := cups * price_per_cup\ndef total_amount_in_two_weeks (first_week_cups second_week_cups : ℤ) (price_per_cup : ℤ) : ℤ := total_amount_in_week first_week_cups price_per_cup + total_amount_in_week second_week_cups price_per_cup\ntheorem total_amount_made (h1 : total_amount_in_week first_week_cups price_per_cup = 100) (h2 : total_amount_in_week second_week_cups price_per_cup = 150) : total_amount_in_two_weeks first_week_cups second_week_cups price_per_cup = 250 :=\nbegin\n  rw [total_amount_in_two_weeks, h1, h2],\n  exact eq.refl 250,\nend', 'Sally and Jack started a lemonade stand. They decided to sell each cup of lemonade for $0.50. In the first week of their business, they sold 200 cups of lemonade. In the second week, the weather was hotter, so they managed to sell 300 cups. What is the total amount of money they made in two weeks?', 'First, we need to calculate the total amount of money Sally and Jack made in each week. In the first week, they sold 200 cups of lemonade, and each cup was sold for $0.50. So, they made 200 * 0.50 = $100 in the first week. In the second week, they sold 300 cups of lemonade. So, they made 300 * 0.50 = $150 in the second week. \n\nTo calculate the total amount of money they made in two weeks, we add the amount of money they made in the first week to the amount they made in the second week. So, they made 100 + 150 = $250 in two weeks.'), ('open nat\n\ndef add_milliliters : ℕ → ℕ → ℕ \n| a b := a + b\n\ndef prove_jug_content : Prop \n:= add_milliliters 500 200 = 700\n\ntheorem jug_content_proof : prove_jug_content \n:= by calc\n    add_milliliters 500 200 = 500 + 200 : rfl\n      ... = 700 : rfl', 'John has two jars. One jar contains 500 milliliters of water and the other jar contains 200 milliliters of orange juice. If John pours all the water and orange juice into a large jug, how much liquid does the jug contain in total?', 'To find out the total amount of liquid in the jug, we need to add the amount of water in the first jar to the amount of orange juice in the second jar. So, 500 milliliters (from the water jar) plus 200 milliliters (from the orange juice jar) gives us a total of 700 milliliters.'), ("import data.real.basic\n\n-- Let's represent the amount of lemonade John and Emily have as real numbers\nnoncomputable def johns_lemonade : ℝ := 3 / 4\nnoncomputable def emilys_lemonade : ℝ := 6 / 8\n\n-- We can prove they have the same amount by showing these two numbers are equal\nexample : johns_lemonade = emilys_lemonade :=\nbegin\n  unfold johns_lemonade emilys_lemonade, -- Reveal what these numbers actually are\n  norm_num, -- Simplify the fractions to prove they're the same\nend", 'John and Emily are making lemonade. John has a jug that is 3/4 full of lemonade, and Emily has a jug that is 6/8 full of lemonade. Who has more lemonade?', 'The fractions 3/4 and 6/8 are equivalent. This is because when you simplify the fraction 6/8 by dividing both the numerator and the denominator by 2, you get 3/4. Therefore, John and Emily both have the same amount of lemonade.'), ('def john_initial_marbles : ℕ := 250\ndef john_received_marbles : ℕ := 300\ndef john_final_marbles : ℕ := 400\n\ndef marble_problem : ℕ :=\nlet john_total_marbles := john_initial_marbles + john_received_marbles in\njohn_total_marbles - john_final_marbles\n\n#eval marble_problem -- returns 150', 'John has 250 marbles and he received another 300 from his friend. Later, he lost some of them and only had 400 marbles left. How many marbles did John lose?', 'Firstly, we need to find out the total number of marbles John had before he lost some. So we add the marbles he had to the ones he received from his friend, 250 + 300 = 550. Then we know that he had 400 left after losing some. To find out how many he lost, we subtract the number he has left from the total he had before, 550 - 400 = 150. So John lost 150 marbles.'), ('import data.real.basic\n\n-- define the equations\ndef eq1 (x y : ℝ) : Prop := 3*x + 4*y = 24\ndef eq2 (x y : ℝ) : Prop := 2*x - y = 3\n\n-- proof\nexample : ∃ (x y : ℝ), eq1 x y ∧ eq2 x y :=\nbegin\n  use [36/11, 39/11],\n  split,\n  { unfold eq1, norm_num, },\n  { unfold eq2, norm_num, }\nend', 'Given the two-variable equations 3x + 4y = 24 and 2x - y = 3, find the values of x and y.', "To solve this problem, we need to use the method of substitution or elimination. \n\nLet's use the substitution method.\n\nFirst, from the equation 2x - y = 3, we can isolate y as y = 2x - 3.\n\nThen, we substitute y = 2x - 3 into the first equation 3x + 4y = 24, which gives us 3x + 4(2x - 3) = 24. \n\nExpanding this equation gives us 3x + 8x - 12 = 24, which simplifies to 11x = 36. \n\nDividing both sides of the equation by 11 gives us x = 36/11.\n\nNow that we have x, we can substitute x = 36/11 into the equation y = 2x - 3, which gives us y = 2(36/11) - 3 = 72/11 - 33/11 = 39/11. \n\nSo, the solution to the system of equations is x = 36/11 and y = 39/11."), ('open nat\n\ndef starfish_shells : ℕ := 5\ndef clam_shells : ℕ := 7\ndef scallop_shells : ℕ := 3\ndef sand_dollar_shells : ℕ := 4\ndef conch_shells : ℕ := 2\n\ndef total_seashells := starfish_shells + clam_shells + scallop_shells + sand_dollar_shells + conch_shells\n\ntheorem total_seashells_are_21 : total_seashells = 21 :=\nbegin\n  unfold total_seashells,\n  refl,\nend', 'Lucy collected different types of seashells during her summer vacation at the beach. She made a line plot to represent the number of each type of seashell she found. According to her line plot:\n\n- Starfish shells: 5\n- Clam shells: 7\n- Scallop shells: 3\n- Sand dollar shells: 4\n- Conch shells: 2\n\nWhat is the total number of seashells that Lucy found during her vacation?', 'The total number of seashells that Lucy found can be calculated by adding the number of each type of seashell together. So, the total number of seashells is 5 (starfish shells) + 7 (clam shells) + 3 (scallop shells) + 4 (sand dollar shells) + 2 (conch shells) = 21. Therefore, Lucy found a total of 21 seashells during her vacation.'), ('import data.real.basic\n\nnoncomputable def side_AC := (10 : ℝ)\nnoncomputable def angle_ABC := (30 : ℝ)\nnoncomputable def side_AB := side_AC / 2\n\ntheorem length_of_side_AB : side_AB = 5 :=\nbegin\n  unfold side_AB,\n  have h : side_AC = 10, by refl,\n  rw h,\n  norm_num,\nend', 'Given a right triangle ABC with angle BAC being the right angle. If angle ABC is 30 degrees, the length of side AC is 10, find the length of side AB.', 'In a right triangle, the side opposite the 30 degrees angle (in this case, side AB) is half the length of the hypotenuse (side AC). So, the length of side AB is 10/2 = 5.'), ('import data.real.basic\n\n-- Lean does not have built-in support for systems of equations,\n-- so we define it manually.\ndef system_of_equations (x y : ℝ) : Prop :=\n  3*x + 2*y = 12 ∧ 2*x + y = 7\n\n-- Now we can prove that (2, 3) is a solution to the system of equations.\nexample : system_of_equations 2 3 :=\nbegin\n  -- This just follows from simplifying the expressions in the definition.\n  dsimp [system_of_equations],\n  split; linarith,\nend', 'Given two linear equations:\n\n1) 3x + 2y = 12\n\n2) 2x + y = 7\n\nSolve for x and y.', 'First, we multiply the second equation by 2:\n\n2*(2x + y) = 2*7\nwhich gives us:\n4x + 2y = 14\n\nNext, we subtract the first equation from this new equation:\n\n(4x + 2y) - (3x + 2y) = 14 - 12\n\nThis simplifies to:\n\nx = 2\n\nSubstituting x = 2 into the second equation, we get:\n\n2*2 + y = 7\n\nSolving for y, we get:\n\ny = 7 - 4 = 3\n\nTherefore, the solution to the system of equations is x = 2, y = 3.'), ('def peter_apples : ℕ := 25\ndef john_apples : ℕ := 10\ndef found_apples : ℕ := 30\ndef split_apples : ℕ := found_apples / 2\n\ndef peter_apples_after_giving := peter_apples - john_apples\ndef peter_apples_now := peter_apples_after_giving + split_apples\n\n#eval peter_apples_after_giving  -- Output: 15\n#eval peter_apples_now  -- Output: 30', 'Peter has 25 apples and he gives 10 apples to his friend John. Later, Peter and John find a tree with 30 apples on the ground. They decide to split it equally. How many apples does Peter have now? Can you estimate it to the nearest ten?', 'Peter initially has 25 apples and he gives 10 apples to John, which leaves him with 25 - 10 = 15 apples. Then they find 30 apples and split them equally, so each of them gets 30 / 2 = 15 apples. So now, Peter has 15 (his old apples) + 15 (new apples) = 30 apples. If we estimate 30 to the nearest ten, it remains as 30.'), ('import data.real.basic\n\nexample : (40 : ℝ) / 345 = 8 / 69 := \nbegin\n  norm_num,\nend', 'Consider the number 345. What fraction of the number does the digit 4 in the tens place represent?', 'The digit 4 in the number 345 represents 4 tens, or 40. The total number is 345. So, the fraction that the digit 4 represents of the entire number 345 is 40/345. But it can be simplified by dividing both the numerator and the denominator by 5, so the simplified fraction is 8/69.'), ('import data.matrix.basic\nimport data.real.basic\n\nopen_locale matrix\nopen matrix\n\ndef A : matrix (fin 2) (fin 2) ℝ := ![![3, 2], ![1, 4]]\ndef B : matrix (fin 2) (fin 2) ℝ := ![![5, 1], ![3, 6]]\ndef AB : matrix (fin 2) (fin 2) ℝ := A ⬝ B\n\n#eval AB  -- this returns AB = [ 21  15  17  25 ]\n\ndef det (M : matrix (fin 2) (fin 2) ℝ) : ℝ := M 0 0 * M 1 1 - M 0 1 * M 1 0\n\n#eval det AB -- this returns 130', 'Let A be a 2x2 matrix with real number entries such that \n\nA = [ 3  2 \n       1  4 ]\n\nLet B be a 2x2 matrix with real number entries such that \n\nB = [ 5  1 \n       3  6 ]\n\nCalculate the product of the matrices A and B (AB), and then find the determinant of the result.', 'To calculate the product of matrices A and B, we first multiply the elements in the first row of A with the corresponding elements in the first column of B and add them together. This gives us the first entry of the new matrix AB. We then repeat this process for the rest of the entries. \n\nSo, for the first entry of AB, we have (3*5) + (2*3) = 21. \nFor the second entry, we get (3*1) + (2*6) = 15. \nFor the third entry, we get (1*5) + (4*3) = 17. \nAnd for the fourth entry, we get (1*1) + (4*6) = 25. \n\nHence, the product of A and B is \n\nAB = [ 21  15\n        17  25 ]\n\nThe determinant of a 2x2 matrix is given by the product of the elements on the main diagonal minus the product of the elements on the other diagonal. So, the determinant of AB is (21*25) - (15*17) = 130. So, the determinant of the product of A and B is 130.'), ('import data.real.basic\n\nvariables (x : ℝ) (h1 : 0 ≤ x) (h2 : x ≤ 500)\n\nnoncomputable def average_sleep_time (x : ℝ) := (7.5*x + 6.5*(500 - x)) / 500\n\ntheorem average_sleep_time_exists : ∃ x, 0 ≤ x ∧ x ≤ 500 ∧ (average_sleep_time x) ≥ 0 :=\nbegin\n  use 250,\n  split,\n  norm_num,\n  split,\n  norm_num,\n  unfold average_sleep_time,\n  apply div_nonneg,\n  linarith,\n  norm_num,\nend', "There is a high school with 500 students. The school organizes a survey to study the correlation between students' hours of sleep and their GPA. The results of the survey show that the average hours of sleep for students with a GPA higher than 3.0 is 7.5 hours, while those with a GPA lower than 3.0 sleep on average 6.5 hours per day. Calculate the average number of hours students sleep per day in this high school.", 'Assume that the number of students with a GPA higher than 3.0 is x, and the number of students with a GPA lower than 3.0 is 500 - x. The total hours of sleep for students with a GPA higher than 3.0 is 7.5*x hours, and for those with a GPA lower than 3.0 is 6.5*(500 - x) hours. \n\nThe average number of hours students sleep per day in this high school is calculated by dividing the total hours of sleep by the total number of students. Thus, the average number of hours students sleep per day is (7.5*x + 6.5*(500 - x)) / 500.'), ('def sequence (n : ℕ) : ℤ := 5 - 2 * (n - 1)\n#eval sequence 20  -- output will be -33', 'In a sequence, the first term is 5 and each subsequent term is 2 less than the previous term. What is the 20th term in the sequence?', 'This is an arithmetic sequence where the first term (a1) is 5 and the common difference (d) is -2. To find the 20th term, we can use the formula for the nth term of an arithmetic sequence which is an = a1 + (n - 1)d. Substituting the values into the formula, we get a20 = 5 + (20 - 1)(-2) = 5 - 38 = -33. So the 20th term of this sequence is -33.'), ('import data.real.basic\n\n-- Define variables\nnoncomputable def x (candies : ℝ) := 0.6 * candies\n\n-- Solving equation 0.6x = 120\nlemma solve_candy_problem : x 200 = 120 :=\nbegin\n  unfold x,\n  norm_num,\nend', 'John has a bag of candies. He gives 25% of the candies to his little sister and 15% of the candies to his best friend. After giving away these candies, John still has 120 candies left. How many candies did John originally have in his bag?', "Let's denote the original number of candies by x. According to the problem, John gave away 25% + 15% = 40% of the candies. This means he has 60% of the candies left. Therefore, we can set up the equation: 0.6x = 120. Solving this equation for x, we find that x = 120 / 0.6 = 200. So, John originally had 200 candies in his bag."), ('import data.real.basic\n\n-- defining the function for the volume of a cube\ndef volume_of_cube (a : ℝ) : ℝ := a^3\n\ntheorem volume_of_cube_eq (a : ℝ) : volume_of_cube a = a^3 :=\nbegin\n  unfold volume_of_cube, -- unfolding the definition of volume_of_cube\nend', "Let's have a cube with edge length of 'a'. Prove that the volume of the cube is a^3.", "A cube is a three-dimensional figure with six faces that are all squares. Since all sides are equal, we use the same length 'a' to denote one edge of the cube. \n\nThe area of one face of the cube (which is a square) is given by the formula for the area of a square, which is side length squared. So, the area of one face of the cube is a*a = a^2.\n\nThe volume of a three-dimensional figure like a cube is found by multiplying the area of the base by the height. In the case of a cube, the base is a square and the height is also 'a', the same as the length of one edge. So, the volume of the cube is the area of the base times the height, or a^2 * a = a^3. \n\nTherefore, the volume of the cube is a^3."), ('import data.real.basic\n\n-- defining the variables \ndef C := 250    -- cost of the bicycle\ndef P := 50     -- money Peter already has\ndef A := 20     -- weekly allowance\n\n-- defining the equation\ndef weeks (W : ℕ) := P + A * W = C \n\n-- solving the equation\nexample : ∃ W, weeks W :=\nbegin\n  use 10,    -- guess a solution\n  unfold weeks,  -- unfold the definition of weeks\n  -- it simplifies to 50 + 20 * 10 = 250\n  -- which is true by the definition of multiplication and addition\n  exact eq.refl 250,\nend', 'Peter is saving money to buy a new bicycle. The bicycle costs $250. Peter already has $50 saved and is able to save $20 from his allowance each week. Write an equation to represent this situation and find out how many weeks it will take Peter to have enough money to buy the bicycle.', "Let's denote the cost of the bicycle as C, the amount of money Peter already has as P, the weekly allowance as A, and the number of weeks as W. \n\nAccording to the problem, we have the following equation: P + A*W = C. We can plug in the given values: 50 + 20*W = 250. \n\nNow, we need to solve this equation to find W, which represents the number of weeks it will take Peter to save enough money. \n\nFirst, we subtract 50 from both sides of the equation to get 20*W = 200. \n\nThen, we divide both sides of the equation by 20 to get W = 10. \n\nTherefore, it will take Peter 10 weeks to have enough money to buy the bicycle."), ('def scale (feet : ℕ) (inch : ℕ) :=\n    feet / inch\n\n#eval scale 1500 100', 'In a model of a city, the scale is 1 inch : 100 feet. If a building in the city is 1500 feet tall, how tall is the building in the model?', 'To find the height of the building in the model, we need to convert the actual height of the building to the scale of the model. The scale is 1 inch equals 100 feet. Therefore, to find the height in inches, we divide the actual height in feet by the scale in feet. 1500 feet divided by 100 feet equals 15 inches. So, the building in the model is 15 inches tall.'), ('import data.real.basic\n\n-- Definitions\nnoncomputable def BC := (100 : ℝ) -- length of side BC\nnoncomputable def percent (p : ℝ) (x : ℝ) := (p / 100) * x -- percentage calculation\n\n-- Proofs\ntheorem length_AB : BC + percent (-30) BC = 70 :=\nbegin\n  unfold percent,\n  unfold BC,\n  norm_num,\nend\n\ntheorem length_AC : BC + percent 10 BC = 110 :=\nbegin\n  unfold percent,\n  unfold BC,\n  norm_num,\nend', 'In a triangle ABC, the length of side AB is 30% less than side BC, and side AC is 10% greater than side BC. If the length of side BC is 100 units, what is the length of side AB and side AC?', 'The length of side AB is 30% less than side BC. Given that BC is 100 units, 30% of BC is 30 units. Therefore, the length of AB is 100 units - 30 units = 70 units. \n\nThe length of side AC is 10% greater than side BC. Given that BC is 100 units, 10% of BC is 10 units. Therefore, the length of AC is 100 units + 10 units = 110 units.'), ('-- defining constants\ndef num_classes := 10\ndef num_students_per_class := 30\ndef num_pencils_per_student := 5\n\n-- defining total students and total pencils\ndef total_students := num_classes * num_students_per_class\ndef total_pencils := total_students * num_pencils_per_student\n\n-- proving the theorem\ntheorem total_pencils_theorem : total_pencils = 1500 :=\nbegin\n  -- unfolding the definitions\n  unfold total_pencils,\n  unfold total_students,\n  -- performing the computation step-by-step\n  have h1 : num_classes * num_students_per_class = 300, refl,\n  have h2 : 300 * num_pencils_per_student = 1500, refl,\n  -- substituting the results of the computation\n  rw h1,\n  rw h2,\nend', 'In a school, there are 10 classes and each class has 30 students. If every student has 5 pencils, how many pencils do the students have in total?', 'First, calculate the total number of students by multiplying the number of classes by the number of students per class. We get 10 * 30 = 300 students. Then, to find the total number of pencils, multiply the total number of students by the number of pencils each student has. We get 300 * 5 = 1500 pencils. Therefore, the students have 1500 pencils in total.'), ('theorem mul_comm (a b : ℕ) : a * b = b * a := \nbegin\n  apply nat.mul_comm,\nend', 'Prove that for any two positive integers "a" and "b", the product of "a" and "b" is always equal to the product of "b" and "a".', 'Let\'s assume that we have two positive integers, "a" and "b". According to the commutative property of multiplication in mathematics, the order in which two numbers are multiplied does not change the product. This means that "a" times "b" is always equal to "b" times "a".'), ('def speed_of_particle := 1\n\ntheorem speed_constant : speed_of_particle = 1 :=\nbegin\n  refl,\nend', 'Consider a particle moving along a curve represented by the parametric equations x = cos(t) and y = sin(t) where t ≥ 0. The position of the particle at any time t is given by the vector-valued function r(t) = <cos(t), sin(t)>. \n\n1. Find the speed of the particle at any time t. \n2. Determine the points on the path of the particle where the speed is at a maximum or minimum.', '1. Speed is the magnitude of velocity. The derivative of the position vector r(t) gives the velocity vector, v(t). We differentiate each component of r(t) to find v(t) = <-sin(t), cos(t)>. The magnitude of v(t) is sqrt((-sin(t))^2 + (cos(t))^2) = sqrt(1) = 1. Therefore, the speed of the particle at any time t is 1.\n\n2. The speed of the particle is constant (1) for all t. Therefore, there are no points on the path of the particle where the speed is at a maximum or minimum.'), ('open nat\n\ndef a : ℕ := 2\ndef b : ℕ := 3\ndef c : ℕ := 4\ntheorem abc_prod_gt_sum : a * b * c > a + b + c :=\nbegin\n    have h1 : a * b * c = 24, by refl,\n    have h2 : a + b + c = 9, by refl,\n    rw h1,\n    rw h2,\n    exact dec_trivial,\nend', 'If a = 2, b = 3, and c = 4, then prove that the product of a, b, and c is greater than the sum of a, b, and c.', 'Given that a = 2, b = 3, and c = 4, the product of a, b, and c is 2 * 3 * 4 = 24, and the sum of a, b, and c is 2 + 3 + 4 = 9. Since 24 is greater than 9, the product of a, b, and c is greater than the sum of a, b, and c.'), ('import data.real.basic\n\n-- Defining our variable\ndef x := 3\n\n-- Proving the equation\nexample : 3 * x + 5 = 14 :=\nbegin\n  rw x,\n  exact dec_trivial,\nend', 'If the expression "3x + 5 = 14" holds, find the value of "x".', 'First, we need to isolate "x" on one side of the equation to solve for it. To do this, we subtract 5 from both sides of the equation, which gives us "3x = 9". Then, we divide both sides by 3 to get "x = 3".'), ("import data.real.basic\n\n-- Proof\nopen real\n\n-- Let's define the total amount of candy John had and the amount left\nnoncomputable def total_candy : ℝ := 1.75\nnoncomputable def candy_left : ℝ := 0.25\nnoncomputable def friends : ℝ := 5\n\n-- Calculation of the amount of candy distributed\nnoncomputable def distributed_candy : ℝ := total_candy - candy_left\n\n-- Prove that each friend got 0.3 pounds of candy\nexample : distributed_candy / friends = 0.3 :=\nbegin\nrw [distributed_candy, total_candy, candy_left, friends],\nnorm_num,\nend", 'John has 1.75 pounds of candy. He wants to divide this amount equally between his 5 friends. After distributing the candy, he realizes he has 0.25 pounds of candy left. How much candy did each friend get?', 'John has 1.75 pounds of candy and he has 0.25 pounds left, so he distributed 1.5 pounds of candy (1.75 - 0.25). To find out how much candy each friend got, we divide the total amount distributed by the number of friends. So, each friend got 1.5 / 5 = 0.3 pounds of candy.'), ('import data.int.basic\nimport tactic.linarith\n\n-- define the problem space\ndef a := 12\ndef b := 8\ndef x := 5 * a\ndef y := 5 * b\n\n-- prove that the equations hold\nexample : x + y = 100 ∧ x - y = 20 :=\nbegin\n  dsimp [x, y, a, b],\n  split; refl,\nend\n\n-- prove that x and y are the multiples of 5\nexample : x % 5 = 0 ∧ y % 5 = 0 :=\nbegin\n  dsimp [x, y, a, b],\n  split; refl,\nend', 'Assume that two numbers, `x` and `y`, are both multiples of 5. Given that `x + y = 100` and `x - y = 20`, find the values of `x` and `y`.', 'Given that `x` and `y` are multiples of 5, we can say that `x = 5a` and `y = 5b` for some integers `a` and `b`.\nNow we have two equations, `5a + 5b = 100` and `5a - 5b = 20`. We can divide both equations by 5 to simplify them to `a + b = 20` and `a - b = 4`. By adding these two equations together, we get `2a = 24`, so `a = 12`. Substituting `a` into the equation `a - b = 4`, we get `b = 8`. Therefore, `x = 5 * 12 = 60` and `y = 5 * 8 = 40`.'), ('import data.real.basic\n\n-- First, we declare the variables\nvariables (x : ℝ)\n\n-- Next, we state the theorem\ntheorem equivalent_fractions : (2/5 = 4/10) ∧ (2/5 * x = 4/10 → x = 1) := \nbegin\n  -- We split the proof into two parts: the equivalence of the fractions and the solution of the equation\n  split,\n  -- Here is the proof for the equivalence of the fractions\n  { norm_num, },\n  -- Here is the proof for the solution of the equation\n  { intro h,\n    have h1 : 2/5 * x = 4/10, by exact h,\n    have h2 : x = 1, by linarith,\n    exact h2, }\nend', 'If we have two fractions 2/5 and 4/10, are they equivalent? If we have an equation 2/5 * x = 4/10, what is the value of x?', 'First, we need to determine if the two fractions 2/5 and 4/10 are equivalent. We can do this by cross multiplying. (2 * 10) is equal to (5 * 4), which means the two fractions are equivalent.\n\nNext, we solve for x in the equation 2/5 * x = 4/10. Since 2/5 is equivalent to 4/10, if we replace 2/5 in the equation with 4/10, we get 4/10 * x = 4/10. Solving for x, we find that x = 1.'), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\ndef square_area (side_length : ℕ) : ℕ := side_length * side_length\n\nexample : rectangle_area 10 5 > square_area 5 :=\nbegin\n  unfold rectangle_area square_area,\n  exact dec_trivial,\nend', "Let's assume you have a rectangle of length 10 units and width 5 units, and a square of side length 5 units. What is the area of the rectangle and the square, and which one has a larger area?", 'The area of a rectangle is calculated by multiplying its length by its width. So, the area of the rectangle is 10 units * 5 units = 50 square units. \n\nThe area of a square is calculated by squaring its side length. So, the area of the square is 5 units * 5 units = 25 square units.\n\nTherefore, the rectangle has a larger area than the square.'), ('-- Unfortunately, Lean 3 does not currently have a library for multivariable calculus, \n-- making a formal proof for this problem unviable in Lean 3. \n-- However, in a hypothetical setting where such a library exists, \n-- the formal proof would involve defining the vector field F, \n-- computing its divergence, defining the volume and surface of the cube, \n-- and computing the volume and surface integrals. \n-- The final step would be to use the axiom or previously proven theorem representing \n-- the divergence theorem to assert the equality of the two integrals.', 'Prove that the divergence theorem holds for a vector field F: R^3 → R^3, where F(x, y, z) = (xy, yz, zx), over the region defined by the cube with vertices at (0, 0, 0), (1, 0, 0), (1, 1, 0), (0, 1, 0), (0, 0, 1), (1, 0, 1), (1, 1, 1), and (0, 1, 1).', "The divergence theorem states that the surface integral of a vector field over a closed surface is equal to the volume integral of the divergence of that field over the volume enclosed by the surface. For the given vector field F(x, y, z) = (xy, yz, zx), the divergence of F is ∇⋅F = ∂/∂x(xy) + ∂/∂y(yz) + ∂/∂z(zx) = y + z + x. \n\nOn the other hand, the surface integral of F over the cube's surfaces can be computed separately for each face of the cube. However, due to the symmetry of the problem, it is enough to compute the integral over one face and multiply it by the number of faces. If we consider the face with normal vector (1, 0, 0), the surface integral over that face is ∫∫ (xy, yz, zx)⋅(1, 0, 0) dA = ∫∫ xy dA = ∫ from 0 to 1 ∫ from 0 to 1 xy dy dx = 1/4.\n\nFinally, multiplying this result by the number of faces of the cube (6) gives 6 * 1/4 = 3/2. \n\nOn the other hand, the volume integral of the divergence of F over the cube is ∫∫∫ (y + z + x) dV = ∫ from 0 to 1 ∫ from 0 to 1 ∫ from 0 to 1 (y + z + x) dz dy dx = 3/2. \n\nTherefore, the divergence theorem holds for the given vector field over the given region, as the surface integral of the vector field over the closed surface of the cube equals the volume integral of the divergence of the vector field over the volume enclosed by the cube."), ('import data.real.basic\n\n-- set up the edge lengths of the two cubes\ndef cube1_edge_length := (5 : ℝ)\ndef cube2_edge_length := (3 : ℝ)\n\n-- define the volume of a cube as a function\ndef cube_volume (s : ℝ) := s^3\n\n-- compute the volumes of the two cubes\ndef cube1_volume := cube_volume cube1_edge_length\ndef cube2_volume := cube_volume cube2_edge_length\n\n-- compute the difference in volumes\ndef volume_difference := cube1_volume - cube2_volume\n\n-- check that the volume difference is as expected\nexample : volume_difference = 98 := \nbegin\n  unfold volume_difference cube1_volume cube2_volume cube_volume cube1_edge_length cube2_edge_length,\n  norm_num,\nend', 'Lisa has two cubes. The edge length of the first cube is 5 cm and the edge length of the second cube is 3 cm. What is the difference in volume between the two cubes?', 'The volume of a cube is given by the formula V = s^3, where V is the volume and s is the edge length of the cube. \n\nFirst, we find the volume of the first cube by substituting s = 5 cm into the formula: V = 5^3 = 125 cm^3.\n\nNext, we find the volume of the second cube by substituting s = 3 cm into the formula: V = 3^3 = 27 cm^3.\n\nFinally, we find the difference in volume by subtracting the volume of the second cube from the volume of the first cube: 125 cm^3 - 27 cm^3 = 98 cm^3. \n\nSo the difference in volume between the two cubes is 98 cm^3.'), ("import data.real.basic\n\n-- declare the variable for radius and coordinates\nvariables (r a b : ℝ)\n\n-- define the theorem\ntheorem point_on_circle (h : a^2 + b^2 = r^2) : \n  (λ x y : ℝ, x^2 + y^2 = r^2) a b :=\nbegin\n  -- since a^2 + b^2 = r^2, it's immediate that (a, b) satisfies the equation of the circle\n  exact h,\nend", "Let's consider a circle with radius r and center at the origin (0, 0). The equation of this circle is x^2 + y^2 = r^2. Now consider a point (a, b) that lies on this circle. Prove that this point also satisfies the equation of the circle.", 'Given a circle with radius r and center at the origin, the equation of the circle is x^2 + y^2 = r^2. This equation simply means that for any point (x, y) on the circle, the sum of the squares of its coordinates equals the square of the radius. \n\nNow we have a point (a, b) which lies on the circle. Substituting x = a and y = b into the equation, we get a^2 + b^2. \n\nSince point (a, b) lies on the circle, the distance from this point to the origin (0, 0) is equal to the radius of the circle. By the Pythagorean theorem, this distance is √(a^2 + b^2). Squaring both sides, we get a^2 + b^2 = r^2. \n\nTherefore, the point (a, b) indeed satisfies the equation of the circle.'), ('import data.int.basic\n\nopen int\n\n#check (3^2) * (4 - 2)^3  -- This checks the type of the expression\n\n#eval (3^2) * (4 - 2)^3  -- This evaluates the expression', 'Calculate the value of the expression 3^2 * (4 - 2)^3.', 'First, we calculate the value of 3^2, which is 9. Then, we calculate the value of (4 - 2), which is 2. We then raise 2 to the power of 3, which gives us 8. Finally, we multiply 9 with 8, which gives us the final answer of 72.'), ('import data.real.basic\n\n-- We state the problem as a theorem in Lean\ntheorem friend_biggest_share_left : (3/6 - 1/2 * 3/6) = 1/4 :=\nbegin\n    -- Lean uses exact real arithmetic, so we need to prove the equality exactly.\n    -- We simplify the left hand side of the equation\n    have h₁ : 3/6 - 1/2 * 3/6 = 1/2 - 1/4, by norm_num,\n    -- Then the right hand side \n    have h₂ : 1/2 - 1/4 = 1/4, by norm_num,\n    -- Finally, we use transitivity of equality to get the result\n    exact eq.trans h₁ h₂,\nend', 'Suppose we have three friends who divide a bag of candy in the ratio 1:2:3. If the friend with the smallest share gets 1/6 of the bag and the friend with the biggest share eats half of his share, what fraction of the bag does the friend with the biggest share have left?', 'We know that the smallest share corresponds to 1 part in the ratio, and this part corresponds to 1/6 of the bag. Therefore, each part in the ratio corresponds to 1/6 of the bag. The friend with the biggest share gets 3 parts, so initially he has 3/6 (or 1/2) of the bag. If he eats half of his share, he eats 1/2 * 1/2 = 1/4 of the bag. Therefore, he has 1/2 - 1/4 = 1/4 of the bag left.'), ('import data.real.basic\n\n-- defining the original price\nnoncomputable def original_price := (40 : ℝ)\n\n-- defining the discount\nnoncomputable def discount := (25 / 100 : ℝ) * original_price\n\n-- defining the discounted price\nnoncomputable def discounted_price := original_price - discount\n\n-- proving the discounted price\nexample : discounted_price = 30 :=\nbegin\n  unfold discounted_price discount original_price,\n  norm_num,\nend', 'If a shirt costs $40 and is on a 25% off sale, what is the discounted price of the shirt?', 'To find the discounted price of the shirt, we need to calculate 25% of $40 and then subtract that amount from the original price of the shirt.\n\nFirst, we find 25% of $40 which equals to 0.25 * 40 = $10.\n\nThen, we subtract the discount from the original price: 40 - 10 = $30.\n\nSo, the discounted price of the shirt is $30.'), ('import data.real.basic\n\n-- Given values\nnoncomputable def total_candy := (2.5 : ℝ) -- total amount of candy in pounds\nnoncomputable def num_friends := (5 : ℝ) -- number of friends\n\n-- Calculate amount of candy each friend gets\nnoncomputable def candy_per_friend := total_candy / num_friends\n\n-- Proof that each friend gets 0.5 pounds of candy\nexample : candy_per_friend = 0.5 :=\nbegin\n  unfold candy_per_friend,\n  unfold total_candy,\n  unfold num_friends,\n  norm_num,\nend', 'Johnny has 2.5 pounds of candy. He wants to share it equally among his 5 friends. How many pounds of candy does each friend get?', 'To find out how many pounds of candy each friend gets, we need to divide the total amount of candy by the number of friends. So, we divide 2.5 (pounds of candy) by 5 (friends) which equals 0.5. Therefore, each friend gets 0.5 pounds of candy.'), ('import data.real.basic\n\n-- Defining the constant π\ndef π := 3.14159\n\n-- Defining the volume of a cylinder\ndef cylinder_volume (r : ℝ) (h : ℝ) : ℝ := π * r^2 * h\n\n-- The initial volume of the cylinder\ndef initial_volume := cylinder_volume 3 10\n\n-- The volume of the cylinder after rotation\ndef rotated_volume := cylinder_volume 3 10\n\n-- Proof that the volume of the cylinder remains the same after rotation\nexample : initial_volume = rotated_volume := rfl', 'A cylinder with a radius of 3 cm and a height of 10 cm is rotated 90 degrees about the y-axis. What is the volume of the cylinder after the rotation?', "The volume of a cylinder is given by the formula V = πr^2h where r is the radius, h is the height, and π is a constant approximately equal to 3.14159. In this case, the radius is 3 cm and the height is 10 cm, so we substitute these values into the formula to get V = π*(3 cm)^2*(10 cm) = 90π cm^3.\n\nIt's important to note that rotation of an object in space does not affect its volume. So, even after the cylinder is rotated 90 degrees about the y-axis, its volume remains the same at 90π cm^3."), ('import data.real.basic\n\nopen_locale classical\n\n-- defintion of subtraction and multiplication\ndef sub (a b : ℝ) : ℝ := a - b\ndef mul (a b : ℝ) : ℝ := a * b\n\n-- proof\nexample : mul (sub 4.5 1.2) (1 / 0.3) = 11 :=\nbegin\n  unfold sub,\n  unfold mul,\n  norm_num,\nend', 'Sally has 4.5 dollars. She spent 1.2 dollars on a toy car and the rest on toy soldiers. Each toy soldier costs 0.3 dollars. How many toy soldiers did Sally buy?', 'First, we subtract 1.2 from 4.5, the total amount Sally has. That gives us 3.3 dollars, which is the amount Sally spent on toy soldiers. Since each toy soldier costs 0.3 dollars, we divide 3.3 by 0.3 to find out how many toy soldiers Sally bought. The result is 11. Therefore, Sally bought 11 toy soldiers.'), ('import data.int.basic\n\nexample (a b : ℕ) (h₁ : a = 15) (h₂ : b = 5) : (a - b + b = a) := \nbegin\n    rw h₁,\n    rw h₂,\nend', 'If we have two numbers a and b where a = 15 and b = 5. If we subtract b from a and add the result to b, the final result is the same as the initial value of a. Can you prove this statement?', "Let's start by subtracting b from a. That would be a - b which is 15 - 5 which equals to 10. \n\nNow, let's add this result (10) to b which is 5. So, 10 + 5 equals 15.\n\nAs we can see, the final result (15) is the same as the initial value of a (15). Therefore, the statement is true."), ('import data.real.basic\n\n-- defining the points\ndef point_two : ℝ := 2\ndef point_seven : ℝ := 7\n\n-- defining the length function\ndef length (x y : ℝ) : ℝ := y - x\n\n-- proving the problem\nexample : length point_two point_seven = 5 :=\nbegin\n  unfold length,\n  unfold point_two,\n  unfold point_seven,\n  norm_num,\nend', 'Given a line plot with data points at 2, 3, 5, 5, 7 on the number line. If a line segment is drawn from the point at 2 to the point at 7, what is the length of this line segment?', 'The length of a line segment from number 2 to number 7 on a number line is the difference between the two numbers, so subtract 2 from 7. The length of the line segment is 5.'), ('import data.real.basic\n\n-- The problem is to prove that the area of rectangle is 5/9 when the length is 5/6 and the width is 2/3.\nlemma rectangle_area (length : ℝ) (width : ℝ) (h_length : length = 5/6) (h_width : width = 2/3) : length * width = 5/9 :=\nbegin\n  rw [h_length, h_width],\n  norm_num,\nend', 'Given a rectangle with length 5/6 meters and width 2/3 meters, what is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying its length and width. Therefore, to find the area of the rectangle, we multiply its length, which is 5/6 meters, by its width, which is 2/3 meters. \nSo the area is (5/6) * (2/3) = 10/18 = 5/9 square meters.'), ('import data.real.basic\n\n-- We first declare our variables\nvariables (x : ℝ)\n\n-- We then state our theorem, which is the factorization of the polynomial function\ntheorem factorization : (x - 3) ^ 2 = x ^ 2 - 6 * x + 9 :=\nbegin\n  -- This is a simple calculation, so we use the `ring` tactic to handle it\n  ring,\nend', 'Given a scatterplot of data points, we find that the points form a parabolic shape. We decide to model this data using a quadratic polynomial function. The function we come up with is f(x) = ax^2 + bx + c. After analyzing the data, we find that the values of a, b, and c are 1, -6, and 9 respectively.\n\nCan we factorize the polynomial function f(x) = x^2 - 6x + 9?', 'Yes, the given polynomial function f(x) = x^2 - 6x + 9 can be factorized. It is a perfect square trinomial, which is a special type of trinomial that can always be factored into the square of a binomial. \n\nIn this case, the function can be factored as follows:\n\nStep 1: Identify a, b, and c in the polynomial ax^2 + bx + c. In this case, a=1, b=-6, and c=9. \n\nStep 2: Take the square root of a and c. In this case, the square root of 1 is 1, and the square root of 9 is 3.\n\nStep 3: Write down the factored form as (x - m)^2, where m is the square root of c. In this case, the factored form is (x - 3)^2.\n\nTherefore, the polynomial function f(x) = x^2 - 6x + 9 can be factorized as f(x) = (x - 3)^2.'), ('variables (a b c : ℤ)\ntheorem add_assoc : (a + b) + c = a + (b + c) :=\nbegin\n  apply int.add_assoc a b c,\nend', 'If a, b, and c are any three negative numbers, prove that (a + b) + c = a + (b + c).', "Let's take three negative numbers: a, b, and c. We know that the addition of numbers, whether they are negative or positive, adheres to the associative property. According to this property, the way in which the numbers are grouped does not change the result of the addition. Therefore, (a + b) + c will always be equal to a + (b + c)."), ('import data.rat.basic\nimport tactic.norm_num\n\nvariables (apples_purchased : ℕ) (apple_price : ℚ) (total_cost : ℚ)\n\n-- We define the relation of price to quantity for the apples\ndef apple_cost_relation (apples_purchased : ℕ) (apple_price : ℚ) : ℚ := \n  (apple_price * (↑apples_purchased : ℚ))\n\n-- We prove the cost for 18 apples\nexample : apple_cost_relation 18 (2/3) = 12 :=\nbegin\n  unfold apple_cost_relation,\n  norm_num,\nend', 'Bob, a fruit seller, sells apples at a rate of 3 apples for 2 dollars. Alice bought a total of 18 apples from Bob. How much did Alice pay for the apples?', 'We know that the cost of 3 apples is 2 dollars. Therefore, the cost of 1 apple is 2/3 dollars. Alice bought 18 apples, so the total cost would be 18 times the cost of 1 apple. Multiplying 18 by 2/3 gives us 12. Therefore, Alice paid 12 dollars for the apples.'), ('import data.real.basic\n\n-- define points and their coordinates\ndef point_1 : ℝ × ℝ := (2.0, 14.0)\ndef point_2 : ℝ × ℝ := (5.0, 35.0)\n\n-- define function to calculate the slope of a line given two points\nnoncomputable def slope (p1 p2 : ℝ × ℝ) : ℝ := (p2.2 - p1.2) / (p2.1 - p1.1)\n\n-- calculate the rate of water leaking\nnoncomputable def leak_rate : ℝ := slope point_1 point_2\n\n#print leak_rate', "Jake's kitchen sink has a leak. The water drips at a constant rate. After 2 hours, there are 14 liters of water. After 5 hours, there are 35 liters. What is the rate at which the water is leaking?", 'We can solve this problem by using a linear equation. We can use the two given points, (2,14) and (5,35), to find the slope of the line, which represents the rate at which the water is leaking. \n\nThe formula for the slope (m) is (y2 - y1) / (x2 - x1). Substituting the given points into the formula gives us (35 - 14) / (5 - 2) = 21 / 3 = 7. \n\nSo, the water is leaking at a rate of 7 liters per hour.'), ('import data.nat.basic\n\nopen nat\n\ndef max_friends : ℕ :=\n  gcd 6 9\n\n#eval max_friends  -- output is 3', 'Sara has 6 apples and 9 oranges. She wants to divide these fruits among her friends in such a way that each friend gets the same number of apples and the same number of oranges. What is the maximum number of friends among whom she can divide these fruits?', 'The maximum number of friends among whom Sara can divide the fruits is determined by the greatest common factor (GCF) of the number of apples and oranges. The GCF of 6 (the number of apples) and 9 (the number of oranges) is 3. Therefore, Sara can divide the fruits among a maximum of 3 friends.'), ('def fencing_needed (width : ℕ) (length : ℕ) : ℕ := 2 * (width + length)\n\n#eval fencing_needed 10 15\n-- output : 50', 'John has a rectangular garden that is 10 feet wide and 15 feet long. He wants to build a fence around it. How many feet of fencing will John need?', "The perimeter of a rectangle is calculated by adding up all its sides. Since a rectangle has two equal length sides and two equal width sides, we can use the formula 2*(length + width) to find the perimeter. For John's garden, which is 10 feet wide and 15 feet long, the perimeter would be 2*(10 + 15) = 2*25 = 50. So, John will need 50 feet of fencing to build a fence around his garden."), ('import data.real.basic\n\n-- Define the function f as noncomputable\nnoncomputable def f (x : ℝ) : ℝ := (2*x + 1) / (x - 3)\n\n-- Define the function g as a transformation of f\nnoncomputable def g (x : ℝ) : ℝ := f (x + 2) + 1\n\n-- Proof that g(2) = 10\nexample : g 2 = 10 :=\nbegin\n  -- Unfold the definition of g\n  unfold g,\n  -- Unfold the definition of f\n  unfold f,\n  -- Simplify the expression\n  norm_num,\nend', 'Consider the function f(x) = (2x+1)/(x-3). The function g is a transformation of f, and g(x) = f(x+2) + 1. Find the value of g(2).', "First, let's find the expression for g(x). We know that g(x) = f(x+2) + 1. So we substitute x+2 into f(x) to get:\n\nf(x+2) = (2(x+2)+1) / ((x+2)-3) = (2x+4+1) / (x-1) = (2x+5) / (x-1).\n\nSo, g(x) = f(x+2) + 1 = (2x+5)/(x-1) + 1.\n\nNow, let's find g(2). Plugging x = 2 into g(x), we get:\n\ng(2) = (2*2+5)/(2-1) + 1 = (4+5)/1 + 1 = 9 + 1 = 10.\n\nSo, the value of g(2) is 10."), ('import data.nat.basic\n\nopen nat\n\n-- define the number of books of each color\ndef blue_books := 5\ndef red_books := 3\ndef green_books := 2\n\n-- define the factorial function\ndef factorial : ℕ → ℕ\n| 0 := 1\n| (n+1) := (n+1) * factorial n\n\n-- calculate the number of arrangements for each color\ndef blue_arrangements := factorial blue_books\ndef red_arrangements := factorial red_books\ndef green_arrangements := factorial green_books\n\n-- calculate the number of arrangements for the colors\ndef color_arrangements := factorial 3\n\n-- calculate the total number of arrangements\ndef total_arrangements := blue_arrangements * red_arrangements * green_arrangements * color_arrangements\n\n#eval total_arrangements \n-- output: 8640', 'John is arranging his bookshelf. He has 5 blue books, 3 red books, and 2 green books. He wants to arrange the books in such a way that all books of the same color are together. In how many different ways can he arrange the books on the shelf?', 'First, we can treat all the books of the same color as a single item. So, we have three items to arrange: the blue books, the red books, and the green books. There are 3! = 3*2*1 = 6 ways to arrange these items. \n\nNext, within each color, the books can be arranged in different ways. There are 5! = 5*4*3*2*1 = 120 ways to arrange the blue books, 3! = 3*2*1 = 6 ways to arrange the red books, and 2! = 2*1 = 2 ways to arrange the green books.\n\nMultiplying all these together, we get the total number of ways to arrange the books: 6 * 120 * 6 * 2 = 8640.'), ('import data.real.basic\n\n-- defining the variables\ndef vanilla := (100 : ℝ)\ndef chocolate := (150 : ℝ)\ndef strawberry := (120 : ℝ)\ndef mint := (90 : ℝ)\ndef caramel := (140 : ℝ)\ndef total_flavors := (5 : ℝ)\n\n-- defining the function for mean\nnoncomputable def mean (a b c d e n : ℝ) : ℝ := (a + b + c + d + e) / n\n\n-- proof that the mean is 120\nexample : mean vanilla chocolate strawberry mint caramel total_flavors = 120 :=\nbegin\n  unfold mean,\n  rw [vanilla, chocolate, strawberry, mint, caramel, total_flavors],\n  norm_num,\nend', 'At an ice cream shop, there are 5 flavors of ice cream: vanilla, chocolate, strawberry, mint, and caramel. The shop tracked the number of each flavor sold in a day, which are as follows: vanilla - 100, chocolate - 150, strawberry - 120, mint - 90, caramel - 140. Calculate the mean (average) number of ice creams sold for each flavor in a day.', 'To calculate the mean of a set of numbers, we add all the numbers together and then divide by the number of items. In this case, we add the number of each flavor of ice cream sold in a day (100 + 150 + 120 + 90 + 140 = 600) and then divide by the number of ice cream flavors (5). Therefore, the mean number of ice creams sold for each flavor in a day is 600 / 5 = 120.'), ('import data.real.basic\n\ndef f (x : ℝ) : ℝ := 2*x + 3\n\nlemma linear_function_inequality (a b : ℝ) (h : a < b) : f a < f b :=\nbegin\n  unfold f,\n  apply add_lt_add_right,\n  exact mul_lt_mul_of_pos_left h zero_lt_two,\nend', 'Let f(x) = 2x + 3 be a linear function. Prove that for any real numbers a and b, if a < b then f(a) < f(b).', 'To prove the statement, we plug in the values of a and b into the given function. We have f(a) = 2a + 3 and f(b) = 2b + 3. If a < b, then 2a < 2b due to the property of inequality that if a < b then ka < kb for any positive real number k. Therefore, we have 2a + 3 < 2b + 3. Hence, if a < b, then f(a) < f(b). This completes the proof.'), ('import data.real.basic\n\n-- declaring the variables\nvariables (length1 length2 width : ℝ)\n\n-- stating the problem\ndef area_of_rectangle (length width : ℝ) : ℝ := length * width\ndef total_area (area1 area2 : ℝ) : ℝ := area1 + area2\n\n-- proof\nexample (length1 : ℝ) (length2 : ℝ) (width : ℝ) : \n  total_area (area_of_rectangle length1 width) (area_of_rectangle length2 width) = \n  area_of_rectangle (length1 + length2) width := \nbegin\n  unfold area_of_rectangle,\n  unfold total_area,\n  -- distribute the width over the sum of the lengths\n  rw add_mul,\nend', "Jane has a rectangular garden with a length of 10 meters and a width of 5 meters. She decides to extend her garden by adding another rectangle of the same width but with a length of 7 meters. What is the total area of Jane's extended garden?", "The area of a rectangle is calculated by multiplying the length by the width. Therefore, the area of Jane's original garden is 10 meters * 5 meters = 50 square meters. \n\nThe area of the extension is 7 meters * 5 meters = 35 square meters. \n\nTo find the total area of the extended garden, we add the area of the original garden and the extension. Therefore, 50 square meters + 35 square meters = 85 square meters. \n\nSo, the total area of Jane's extended garden is 85 square meters."), ('import data.real.basic\n\n-- define the initial number of apples\nnoncomputable def num_apples : ℝ := 50\n\n-- define the percentage given away\nnoncomputable def percent_given_away : ℝ := 20 / 100\n\n-- calculate the number of apples given away\nnoncomputable def apples_given_away : ℝ := percent_given_away * num_apples\n\n-- calculate the number of apples left\nnoncomputable def apples_left : ℝ := num_apples - apples_given_away\n\n-- proof that the number of apples left is 40\nexample : apples_left = 40 :=\nbegin\n  unfold apples_left,\n  unfold apples_given_away,\n  unfold percent_given_away,\n  unfold num_apples,\n  norm_num,\nend', 'John has a basket containing 50 apples. He gave 20% of the apples to his friend. How many apples does he have left?', '20% of 50 apples is 10 apples (since 20/100 * 50 = 10). So, John gave away 10 apples. Therefore, he is left with 50 - 10 = 40 apples.'), ('def toy_bus := 56\ndef toy_plane := toy_bus - 9\nexample : toy_plane = 47 := by refl', "John measured the length of his toy car and found it to be 35 cm. After a while, he measured his toy bus, which was 56 cm long. He then decided to buy a toy plane, which was 9 cm shorter than his toy bus. How long is John's toy plane?", "John's toy bus is 56 cm long. If the toy plane is 9 cm shorter than the bus, then we subtract 9 cm from 56 cm to find the length of the plane. So, 56 cm - 9 cm = 47 cm. Therefore, John's toy plane is 47 cm long."), ('import data.real.basic\nimport data.matrix.notation\n\n-- Define the sales function\ndef f (t : ℝ) := 2*t + 3\n\n-- Define the antiderivative of the sales function\ndef F (t : ℝ) := t^2 + 3*t\n\n-- Define the cost matrix\ndef A := ![![2, 3], ![4, 5]]\n\n-- The total sales from month 2 to month 5 is F(5) - F(2)\n#eval F 5 - F 2 -- Output: 30\n\n-- The total cost for the two months is the sum of all the elements in the matrix A\n#eval A 0 0 + A 0 1 + A 1 0 + A 1 1 -- Output: 14', 'A company uses a function to represent its sales over time. The function is f(t) = 2t + 3, where t is the time in months and f(t) is the sales in thousands of dollars. The company wants to calculate the total sales from month 2 to month 5. \n\nOn the other hand, the company has a 2x2 matrix A representing the production cost and the marketing cost in thousands of dollars for two products in two different months. The matrix is A = [[2, 3], [4, 5]]. The company wants to find the total cost for these two months.\n\nCalculate the total sales from month 2 to month 5 and the total cost for the two months.', 'Firstly, we calculate the total sales from month 2 to month 5. The total sales is the integral of f(t) from month 2 to month 5. The integral of f(t) = 2t + 3 is F(t) = t^2 + 3t. Using the fundamental theorem of calculus, the total sales from month 2 to month 5 is F(5) - F(2) = (5^2 + 3*5) - (2^2 + 3*2) = 25 + 15 - 4 - 6 = 30 thousand dollars.\n\nThen, we calculate the total cost for the two months. The total cost is the sum of all the elements in the matrix A. So, the total cost is 2 + 3 + 4 + 5 = 14 thousand dollars.\n\nTherefore, the total sales from month 2 to month 5 is 30 thousand dollars and the total cost for the two months is 14 thousand dollars.'), ('import data.real.basic\n\ndef rectangle_area := λ (length width : ℝ), length * width\ndef rectangle_perimeter := λ (length width : ℝ), 2*length + 2*width\n\ndef length := (10 : ℝ)\ndef width := (5 : ℝ)\n\n-- Initial area and perimeter\ndef initial_area := rectangle_area length width\ndef initial_perimeter := rectangle_perimeter length width\n\n-- New length and width\ndef new_length := length + 3\ndef new_width := width - 2\n\n-- New area and perimeter\ndef new_area := rectangle_area new_length new_width\ndef new_perimeter := rectangle_perimeter new_length new_width\n\n#eval initial_area -- this will output 50\n#eval initial_perimeter -- this will output 30\n\n#eval new_area -- this will output 39\n#eval new_perimeter -- this will output 32', 'Given a rectangle with length 10 units and width 5 units, what is the area and the perimeter of the rectangle? Also, if we increase the length by 3 units and decrease the width by 2 units, what is the new area and the new perimeter?', 'For a rectangle, the area is calculated by multiplying the length by the width, and the perimeter is calculated by adding twice the length and twice the width.\n\nSo, the initial area of the rectangle is 10 units * 5 units = 50 square units and the initial perimeter is 2*10 units + 2*5 units = 30 units.\n\nNow, when the length is increased by 3 units, the new length becomes 10 units + 3 units = 13 units. And when the width is decreased by 2 units, the new width becomes 5 units - 2 units = 3 units.\n\nThe new area of the rectangle is 13 units * 3 units = 39 square units and the new perimeter is 2*13 units + 2*3 units = 32 units.'), ('import data.real.basic\n\ndef f (x : ℝ) : ℝ := 120 + 15*x\n\n#eval f 8  -- The output will be 240. This means after 8 weeks, John has $240.', 'John has $120 in his savings account. He saves $15 every week from his part-time job. Write an equation to represent the total amount of money, y, John has after x weeks. How much money does John have after 8 weeks?', 'The problem describes a linear relationship between the number of weeks (x) and the total amount of money (y) John has. The initial amount is $120 and he adds $15 each week. This can be represented by the equation y = 120 + 15x. \n\nTo find out how much money John has after 8 weeks, we substitute x = 8 into the equation. \n\ny = 120 + 15 * 8 \ny = 120 + 120 \ny = 240 \n\nSo, John has $240 after 8 weeks.'), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\ndef square_area (side : ℕ) : ℕ := side * side\n\nexample : rectangle_area 6 4 < square_area 5 :=\nbegin\n  rw rectangle_area,\n  rw square_area,\n  exact dec_trivial,\nend', 'Alice has a rectangular garden that is 6 feet long and 4 feet wide. Bob has a square garden where each side is 5 feet long. Who has the larger garden area?', "The area of a rectangle is calculated by multiplying the length by the width. So, the area of Alice's garden is 6 feet * 4 feet = 24 square feet. The area of a square is calculated by squaring the length of one side. So, the area of Bob's garden is 5 feet * 5 feet = 25 square feet. Therefore, Bob has the larger garden area."), ('import data.real.basic\n\n-- Definitions of x and y\ndef x := 3\ndef y := 2\n\n-- Check the first equation\n#eval 2*x + 3*y  -- returns 12\n\n-- Check the second equation\n#eval 4*x - y  -- returns 10', 'Solve the following system of equations: \n\n1. 2x + 3y = 12\n2. 4x - y = 10', 'To solve this system of equations, we can use the substitution or elimination method. Here, we will use the elimination method. \n\nFirst, we can multiply the second equation by 3 to make the coefficients of y in both equations the same. This gives us:\n\n4x - y = 10 becomes 12x - 3y = 30\n\nNow, we have:\n\n2x + 3y = 12\n12x - 3y = 30\n\nAdding these two equations eliminates y:\n\n14x = 42\nx = 3\n\nSubstituting x = 3 into the first equation gives:\n\n2*3 + 3y = 12\n6 + 3y = 12\n3y = 6\ny = 2\n\nSo, the solution to the system of equations is x = 3 and y = 2.'), ('import data.real.basic\n\nexample : ((3/4 : ℝ) + (5/6) - (7/8)) = 17/24 := \nbegin\n  norm_num,\nend', 'Consider the rational numbers 3/4, 5/6 and 7/8. Add 3/4 and 5/6 together and then subtract 7/8 from the result. What is the answer?', 'First add 3/4 and 5/6 together. To do this, find a common denominator, which is 12 in this case. So convert 3/4 to 9/12 and 5/6 to 10/12. Then add these two fractions together to get 19/12.\n\nNext, subtract 7/8 from 19/12. Again, find a common denominator, which is 24 in this case. So convert 19/12 to 38/24 and 7/8 to 21/24. Subtract these two fractions to get 17/24. \n\nSo the answer to the problem is 17/24.'), ('open nat\n\nexample : (12 - 7 = 5) :=\nbegin\n  exact rfl,\nend', 'If John has 12 apples and he gives 7 apples to his friend, how many apples does John have left?', 'If John starts with 12 apples and gives away 7, we need to subtract 7 from 12 to find out how many he has left. So, 12 - 7 = 5. Therefore, John has 5 apples left.'), ('import data.int.basic\n\nopen int\n\n-- Represent the amount John owes as negative integers\ndef john_owes : list ℤ := [-50, -20]\n\n-- Compute the total amount John owes\ndef total_owes : ℤ := list.foldl (+) 0 john_owes\n\n-- Proof that John owes his friend $70 in total\nexample : total_owes = -70 :=\nbegin\n  -- Unfolding the definitions\n  unfold total_owes,\n  unfold john_owes,\n  -- Simplifying the list fold\n  simp,\n  -- Proving the equality\n  refl,\nend', 'John owes $50 to his friend. After borrowing another $20 from the same friend, how much money does John owe his friend in total?', 'This is a problem involving negative numbers. When John borrows money, it can be represented as a negative number because it is money that he owes. Initially, John owes $50 so we represent this as -50. When he borrows another $20, we represent it as -20. We find the total amount he owes by adding these two amounts together: -50 + -20 = -70. So, John owes his friend $70 in total.'), ("import data.nat.basic\n\nopen nat \n\n-- Amy's scores in the first and second round\ndef first_round : ℕ := 12\ndef second_round : ℕ := 7\n\n-- Total score\ndef total_score := first_round + second_round\n\nexample : total_score = 19 :=\nbegin\n  unfold total_score,\n  rw [add_comm], \n  refl,\nend\n\n-- Circle and its division\ndef circle : ℕ := 360\ndef sectors : ℕ := 4\n\n-- Angle of each sector\ndef sector_angle := circle / sectors\n\nexample : sector_angle = 90 :=\nbegin\n  unfold sector_angle,\n  refl,\nend", 'In a game, Amy scored 12 points in the first round and 7 points in the second round. How many points did Amy score in total? On the other hand, the game area is designed as a circle and it is divided into 4 equal parts for 4 players. What is the angle of each sector?', 'To find out how many points Amy scored in total, we just need to add the points she scored in the first round and the points she scored in the second round. So, 12 points + 7 points = 19 points. Amy scored 19 points in total.\n\nTo find out the angle of each sector, we need to know that a circle is 360 degrees. Since the circle is divided into 4 equal parts, each sector is 360 degrees / 4 = 90 degrees. So, the angle of each sector is 90 degrees.'), ('import data.real.basic\n\n-- defining the equations\ndef eq1 (x y : ℝ) : Prop := 2*x + 3*y = 12\ndef eq2 (x y : ℝ) : Prop := 4*x - y = 10\n\n-- proof\nexample : ∃ (x y : ℝ), eq1 x y ∧ eq2 x y :=\nbegin\n  use [3, 2], -- specify the values of x and y\n  split, -- split the proof into two subproofs\n  { -- proof for eq1\n    unfold eq1, -- expand the definition of eq1\n    linarith, -- solve the linear equation\n  }, \n  { -- proof for eq2\n    unfold eq2, -- expand the definition of eq2\n    linarith, -- solve the linear equation\n  }\nend', 'Given the system of equations:\n\n1. 2x + 3y = 12\n2. 4x - y = 10\n\nFind the values of x and y.', 'First, we multiply the second equation by 3 to make the y-coefficients equal:\n\n(4x - y) * 3 = 10 * 3\n=> 12x - 3y = 30\n\nNext, we add the new equation to the first equation:\n\n(2x + 3y) + (12x - 3y) = 12 + 30\n=> 14x = 42\n\nAfter simplifying, we find that x = 3.\n\nSubstituting x = 3 into the first equation:\n\n2*3 + 3y = 12\n=> 6 + 3y = 12\n=> 3y = 6\n=> y = 2.\n\nSo, the solution to the system of equations is x = 3, y = 2.'), ("-- Lean 3 does not have a built-in type for geometric figures like squares or quadrilaterals. \n-- Hence it's impossible to provide a formal proof for this problem in Lean 3. \n-- If it were possible, it would essentially involve stating the definition of a square, \n-- which states that all sides are equal.", 'Prove that in a square, all four sides are equal in length.', 'A square is a type of quadrilateral that has special properties. One of these properties is that all four sides of a square have the same length. This is actually the defining characteristic of a square: a quadrilateral with all sides of equal length and all angles of 90 degrees. Therefore, it is by definition true that in a square, all four sides are equal in length.'), ("import data.real.basic\n\nopen real\n\n-- define function f'(x) = 3x^2 - 2x + 1\ndef f' (x : ℝ) := 3*x^2 - 2*x + 1\n\n-- define the integral of f'\nnoncomputable def integral_f' (a b : ℝ) := b^3 - b^2 + b - (a^3 - a^2 + a)\n\n-- state and prove that the integral of f' from 0 to 3 is 21\nlemma integral_f'_eq : integral_f' 0 3 = 21 :=\nbegin\n  -- calculate the integral\n  simp [f', integral_f'],\n  norm_num,\nend\n\n-- state and prove that f(3) = f(0) + integral from 0 to 3 of f'(x)dx = 2 + 21 = 23\ntheorem f_3_eq : (2 + integral_f' 0 3) = 23 :=\nbegin\n  rw integral_f'_eq,\n  norm_num,\nend", "If f(x) is a function where f'(x) = 3x^2 - 2x + 1 and f(0) = 2, find the value of f(3).", "As we know, the derivative f'(x) represents the rate of change of the function f(x) at a particular point x. To find the value of f(3), we can integrate the derivative from the point 0 to 3 and add it to the initial value f(0) = 2.\n\nThe integral of 3x^2 - 2x + 1 from 0 to 3 is [x^3 - x^2 + x] evaluated from 0 to 3, which is equal to 27 - 9 + 3 - (0 - 0 + 0) = 21.\n\nSo, f(3) = f(0) + integral from 0 to 3 of f'(x)dx = 2 + 21 = 23."), ('import data.real.basic\n\n-- First, we will define the variables.\nvariables (x : ℝ)\n\n-- Next, we will state and prove the solution to the equation.\nexample : 3*x - 5 = 10 ↔ x = 5 :=\nbegin\n  split,\n  { -- We will prove the forward direction.\n    intro h,\n    have h1 : 3*x = 15 := by linarith,\n    have h2 : x = 5 := by linarith,\n    exact h2,\n  },\n  { -- We will prove the reverse direction.\n    intro h,\n    have h1 : 3*x - 5 = 10 := by linarith,\n    exact h1,\n  },\nend\n\n-- Finally, we will state and prove the solution to the inequality.\nexample : 3*x - 5 < 10 ↔ x < 5 :=\nbegin\n  split,\n  { -- We will prove the forward direction.\n    intro h,\n    have h1 : 3*x < 15 := by linarith,\n    have h2 : x < 5 := by linarith,\n    exact h2,\n  },\n  { -- We will prove the reverse direction.\n    intro h,\n    have h1 : 3*x - 5 < 10 := by linarith,\n    exact h1,\n  },\nend', 'Consider the linear equation: 3x - 5 = 10. What is the value of x? Furthermore, if we have the inequality 3x - 5 < 10, what is the range of possible values for x?', 'First, we will solve the linear equation. We can isolate x by adding 5 to both sides of the equation, giving us 3x = 15. Then, by dividing both sides of the equation by 3, we get x = 5.\n\nNext, we will solve the inequality. Again, we add 5 to both sides of the inequality, giving us 3x < 15. Then, by dividing both sides of the inequality by 3, we get x < 5. \n\nSo the solution to the equation is x = 5 and the solution to the inequality is x is less than 5.'), ('import data.real.basic\n\n-- defining the equations\ndef eq1 (x y : ℝ) : Prop := 2*x - 3*y = 12\ndef eq2 (x y : ℝ) : Prop := y = 4*x\n\n-- the solution to the equations\ndef solution (x y : ℝ) : Prop := x = -1.2 ∧ y = -4.8\n\n-- proof that the solution satisfies both equations\ntheorem solution_satisfies_eqs : ∀ (x y : ℝ), solution x y → eq1 x y ∧ eq2 x y :=\nbegin\n  intros x y h,\n  cases h with hx hy,\n  split,\n  { -- proving that the solution satisfies eq1\n    rw [eq1, hx, hy],\n    norm_num, },\n  { -- proving that the solution satisfies eq2\n    rw [eq2, hx, hy],\n    norm_num, },\nend', 'Given the system of equations 2x - 3y = 12 and y = 4x, prove that the solution to this system of equations is x = -1 and y = -4.', 'To solve this system of equations, we can use the method of substitution. \n\nWe know that y = 4x from the second equation. \n\nSubstitute y in the first equation with 4x, we get 2x - 3(4x) = 12. \n\nThis simplifies to 2x - 12x = 12, or -10x = 12. \n\nDividing by -10, we get x = -12 / -10 = 1.2. \n\nSubstituting x = 1.2 into the second equation, we get y = 4 * 1.2 = 4.8. \n\nSo, the solution to the system of equations is x = 1.2 and y = 4.8.'), ('def calculate_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\ndef add_length (length : ℕ) (add : ℕ) : ℕ := length + add\n\ndef add_width (width : ℕ) (add : ℕ) : ℕ := width + add\n\ndef subtract_width (width : ℕ) (subtract : ℕ) : ℕ := width - subtract\n\ndef lucy_garden : ℕ :=\n  let original_length := 10 in\n  let original_width := 7 in\n  let new_length := add_length original_length 4 in\n  let new_width := add_width original_width 3 in\n  let final_width := subtract_width new_width 2 in\n  calculate_area new_length final_width\n\n#eval lucy_garden  -- returns 112', "Lucy has a rectangular garden that is 10 feet long and 7 feet wide. She wants to make her garden bigger by adding 4 feet to the length and 3 feet to the width. However, she later decided to reduce the width by 2 feet. What is the area of Lucy's garden after these changes?", "First, let's find the new dimensions of Lucy's garden after her changes. She added 4 feet to the length, so the new length is 10 feet + 4 feet = 14 feet. She added 3 feet to the width, so the new width is 7 feet + 3 feet = 10 feet. But then, she reduced the width by 2 feet, so the final width is 10 feet - 2 feet = 8 feet. Now we can find the area of Lucy's garden by multiplying the length and the width. So, the area is 14 feet * 8 feet = 112 square feet."), ("import data.real.basic\n\nopen_locale classical\n\n-- First, let's declare our variables\nvariables (s : ℝ) (h1 h2 : ℝ)\n\n-- We assume that the speed is constant, so s = d/t\ndef speed_eq (d1 d2 : ℝ) (h1 h2 : ℝ) : Prop := d1 / h1 = d2 / h2\n\n-- Now we prove that if the car travels 120 miles in 2 hours, it will travel 300 miles in 5 hours.\nlemma car_travel : speed_eq 120 300 2 5 :=\nbegin\n  unfold speed_eq,       -- Apply the definition of speed\n  norm_num,              -- Simplify the equation\nend", 'If a car travels 120 miles in 2 hours, how far will it travel in 5 hours, assuming it maintains a constant speed?', 'The car travels at a constant speed of 60 miles per hour (120 miles divided by 2 hours). Therefore, if it maintains this speed for 5 hours, it will travel 300 miles (5 hours multiplied by 60 miles per hour).'), ('import data.real.basic\n\n-- angle A, B, and C\ndef angle_A : ℝ := 45\ndef angle_B : ℝ := 70\ndef angle_C : ℝ := 180 - (angle_A + angle_B)\n\n#check angle_C -- it should be 65', 'A straight line is a 180 degree angle. If angle A is 45 degrees and angle B is 70 degrees, how many degrees is angle C if angles A, B, and C together make up a straight line?', 'We know that a straight line is a 180 degree angle. So, the total degrees of angles A, B, and C together should add up to 180 degrees. Given that angle A is 45 degrees and angle B is 70 degrees, we can subtract the sum of these two angles from 180 to find out the measure of angle C. So, we will do 180 - (45 + 70) to get the measure of angle C. Therefore, angle C is 65 degrees.'), ('import data.real.basic\n\n-- defining the concept of area of a triangle\nnoncomputable def area_of_triangle (base height : ℝ) : ℝ := 0.5 * base * height\n\n-- stating the problem\ndef problem : Prop :=\n  ∀ (base height : ℝ), \n  area_of_triangle (2*base) (2*height) = 4 * area_of_triangle base height\n\n-- proving the problem\ntheorem problem_proof : problem :=\nbegin\n  intros base height,\n  unfold area_of_triangle,\n  ring,\nend', 'Given two similar triangles ABC and DEF, where the ratio of the sides AB/DE = BC/EF = CA/FD = 2. If the area of triangle DEF is 25 square units, what is the area of triangle ABC?', 'Given two similar triangles, the ratio of their areas is the square of the ratio of their corresponding sides. Therefore, the ratio of the areas of triangles ABC to DEF is (2)^2 = 4. Since the area of triangle DEF is 25 square units, the area of triangle ABC is 4*25 = 100 square units.'), ('def length := 10\ndef width := 5\ndef perimeter := 2*(length + width) \n#eval perimeter -- the result is 30', 'John has a rectangular garden which is 10 feet long and 5 feet wide. He wants to build a fence around it. How many feet of fencing will he need?', 'To find out how much fencing John will need, we need to calculate the perimeter of the rectangle. The perimeter of a rectangle is calculated by the formula 2*(length + width). So if we plug in the values into the formula, we get 2*(10+5)=30 feet. Therefore, John will need 30 feet of fencing.'), ("import data.real.basic\n\n-- Let's denote the length of EF as x\ndef x := ℝ \n\n-- Given values\ndef AB := 10\ndef BC := 7\ndef BE := 3\ndef DF := 3\n\n-- Derived values\ndef EC := BC - BE -- 4\ndef AF := AB - DF -- 7\ndef DE := AB -- 10\ndef BF := AB -- 10\n\n-- EF is calculated by the ratio of similar triangles\ndef EF := BE / DE * BF \n\n-- Check that the calculation is correct\n#eval EF -- returns approximately 4.29", 'In a rectangle ABCD, AB = 10 cm and BC = 7 cm. Point E is on BC such that BE = 3 cm. Point F is on AD such that DF = 3 cm. What is the length of EF?', 'In rectangle ABCD, since AB = AD, and BC = DC, we know that BC = AD = 10 cm and AB = DC = 7 cm. Since E is on BC and BE = 3 cm, we know that EC = BC - BE = 7 cm - 3 cm = 4 cm. Similarly, since F is on AD and DF = 3 cm, we know that AF = AD - DF = 10 cm - 3 cm = 7 cm. \n\nNow consider ΔBEF and ΔDEF. We can see that they are similar triangles because their corresponding angles are equal (angle E = angle D, angle B = angle F), and their sides are in proportion (BE/DE = EF/EF = BF/DF). \n\nGiven BE = 3 cm, DE = 7 cm, and BF = 10 cm, we can set up a proportion to find EF. Let EF = x, we have 3/7 = x/10. Solving for x, we get x = 30/7 cm ≈ 4.29 cm. So the length of EF is approximately 4.29 cm.'), ('import data.real.basic\n\nvariables (a b : ℝ) (n : ℕ)\ntheorem power_eq (h : a = b) : a^n = b^n :=\nbegin\n  rw h,\nend', 'Prove that for any real numbers a, b, and n, if a = b, then a^n = b^n.', 'Since a = b, then by the rule of exponents, a^n = b^n. This is because the rule of exponents states that if you have an equal base and equal exponent, then the result will be the same. In this case, a and b are the same, so the base is the same, and n is the same for both, so the exponent is the same. Therefore, a^n = b^n.'), ('import data.real.basic\n\n-- defining the variables\ndef hourly_wage : ℝ := 15\ndef hours_worked : ℝ := 7\n\n-- defining the equation\ndef earnings : ℝ := hourly_wage * hours_worked\n\n-- proving the solution\nexample : earnings = 105 :=\nbegin\n  unfold earnings,\n  unfold hourly_wage,\n  unfold hours_worked,\n  norm_num,\nend', 'John is a part-time worker at a local grocery store. He earns $15 per hour for his work. If he worked for 7 hours, how much money did he make? Write down an equation to represent this situation and solve it.', 'To solve this problem, we need to multiply the number of hours John worked by his hourly wage. The equation can be written as 15 * 7 = $105. Therefore, John made $105.'), ('import data.int.basic\n\n-- defining the constants\ndef a : ℤ := -3\ndef b : ℤ := -5\n\n-- theorem statement\ntheorem sum_of_two_negatives : a + b = -8 :=\nbegin\n  rw [a, b],\n  exact rfl,\nend', 'If `a` and `b` are two negative integers such that `a = -3` and `b = -5`, prove that `a + b = -8`.', 'The sum of two negative integers `a` and `b` is another negative integer whose absolute value is the sum of the absolute values of `a` and `b`. In this case, `a = -3` and `b = -5`, so `|a| = 3` and `|b| = 5`. The sum of `|a|` and `|b|` is `3 + 5 = 8`, so the sum of `a` and `b` is `-8`.'), ('import data.real.basic\n\n-- Define the initial quantity of pizza and the number of friends\nnoncomputable def pizza : ℝ := 3/4\nnoncomputable def friends : ℝ := 2\n\n-- Define the function to calculate the quantity of pizza each friend will get\nnoncomputable def pizza_per_friend (p f : ℝ) : ℝ := p * (1/f)\n\n-- Proof that each friend will get 3/8 of the pizza\nexample : pizza_per_friend pizza friends = 3/8 :=\nbegin\n  unfold pizza_per_friend,\n  unfold pizza,\n  unfold friends,\n  norm_num,\nend', 'Mandy has 3/4 of a pizza left after dinner. She wants to share it equally with her 2 friends. How much pizza will each friend get?', 'If Mandy wants to divide her 3/4 of a pizza equally among her 2 friends, we need to divide 3/4 by 2. \n\nTo divide a fraction by a whole number, we multiply the fraction by the reciprocal of the whole number. \n\nSo, 3/4 divided by 2 is the same as 3/4 times 1/2. \n\nMultiplying fractions is done by multiplying the numerators together and the denominators together. \n\nSo, 3/4 times 1/2 is (3*1)/(4*2) = 3/8. \n\nTherefore, each friend will get 3/8 of the pizza.'), ('import data.real.basic\n\n-- Definitions\ndef rectangle_area (length : ℝ) (width : ℝ) : ℝ := length * width\n\n-- Given values\ndef AB : ℝ := 4\ndef BC : ℝ := 3\n\n-- Calculation\ndef rectangle_ABCD_area := rectangle_area AB BC\n\n-- Proof\nexample : rectangle_ABCD_area = 12 :=\nbegin\n  unfold rectangle_ABCD_area,\n  unfold rectangle_area,\n  unfold AB,\n  unfold BC,\n  norm_num,\nend', 'In a rectangle ABCD, AB = 4 units and BC = 3 units. What is the area of the rectangle?', 'To find the area of a rectangle, we use the formula: Area = length × width. In this case, AB represents the length and BC represents the width. By substituting the given values into the formula, we get: Area = 4 units × 3 units = 12 square units.'), ('def calculate_perimeter (length width : nat) : nat := 2*length + 2*width\n\n#eval calculate_perimeter 40 30 -- returns 140', 'John has a rectangular garden. The length of the garden is 40 feet and the width is 30 feet. He wants to build a fence around the entire garden. How many feet of fencing will John need?', 'To find out how much fencing John needs, we have to calculate the perimeter of the rectangular garden. The perimeter of a rectangle is calculated by adding up all its sides. Since a rectangle has two equal length sides and two equal width sides, we can simplify the calculation by multiplying the length by 2 and the width by 2, then adding those results together. \n\nSo, the total fencing John needs is: (2 * length) + (2 * width) = (2 * 40) + (2 * 30) = 80 + 60 = 140 feet.'), ('def digit_value (n : ℕ) (d : ℕ) : ℕ :=\n  if d = 0 then n % 10\n  else if d = 1 then (n / 10) % 10 * 10\n  else if d = 2 then (n / 100) % 10 * 100\n  else 0\n\n#eval digit_value 245 1  -- returns 40', 'John has a number 245. What is the value of the digit 4 in this number?', 'The number 245 is composed of hundreds, tens, and ones. The digit 4 is in the tens place, which means it represents 4 tens or 40. So, the value of the digit 4 in the number 245 is 40.'), ("import data.real.basic\n\n-- Lean 3's real numbers are fully fledged mathematical real numbers, \n-- so it understands decimal multiplication just as you'd expect.\nexample : (0.2 : ℝ) * (0.3 : ℝ) = 0.06 := by norm_num", 'Prove that the product of 0.2 and 0.3 is 0.06.', 'To prove this, we can simply multiply the two decimals. When multiplying decimals, we first ignore the decimal points and multiply the numbers as if they were whole numbers. So, we multiply 2 by 3, which equals 6. \n\nNext, we count the number of digits after the decimal point in the original problem. In this case, there are two digits after the decimal point in total (one digit in 0.2 and one digit in 0.3). \n\nFinally, we place the decimal point in our answer such that there are two digits after it. So, our final answer is 0.06, not 6. \n\nTherefore, the product of 0.2 and 0.3 is indeed 0.06.'), ('def calculate_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\ndef divide_area (total_area : ℕ) (plot_area : ℕ) : ℕ := total_area / plot_area\n\ndef garden_plots : ℕ :=\n  let garden_length := 12 in\n  let garden_width := 16 in\n  let plot_length := 4 in\n  let plot_width := 4 in\n  let garden_area := calculate_area garden_length garden_width in\n  let plot_area := calculate_area plot_length plot_width in\n  divide_area garden_area plot_area\n\n#eval garden_plots  -- Output: 12', 'A rectangular garden measures 12 feet by 16 feet. If you divide the garden into square plots, each 4 feet on a side, how many square plots will there be?', 'The area of the rectangular garden is found by multiplying its length by its width. So, the area is 12 feet * 16 feet = 192 square feet. Each square plot has an area of 4 feet * 4 feet = 16 square feet. To find out how many square plots fit into the garden, we divide the total area of the garden by the area of one square plot. Therefore, 192 square feet ÷ 16 square feet = 12 square plots. So, there will be 12 square plots in the garden.'), ('import data.real.basic\n\ndef p (n : ℝ) := 0.4\n\ntheorem derivative_of_p_wrt_n : ∀ n : ℝ, (p n) = 0 :=\nbegin\n  intro n,\n  exact rfl,\nend', 'In a college, a survey is conducted among 2000 students to check the preference of subjects. The survey finds that 800 students prefer Mathematics and 1200 students prefer other subjects. If the proportion of students preferring Mathematics is represented by `p`, then find the derivative of `p` with respect to the total number of students `n`.', 'The proportion `p` of students who prefer Mathematics is given by the ratio of the number of students who prefer Mathematics (800) to the total number of students (2000). Hence, `p` = 800/2000 = 0.4.\n\nWe know that the derivative of a constant is zero. Since `p` is a constant (0.4), the derivative of `p` with respect to `n` is zero.'), ('-- define the ratios\ndef Jane_ratio : ℕ × ℕ := (5, 2)\ndef Mary_ratio : ℕ × ℕ := (7, 3)\n\n-- define the multiplication operation on ratios\ndef multiply_ratio (r : ℕ × ℕ) (n : ℕ) : ℕ × ℕ := (r.1 * n, r.2 * n)\n\n-- compute the ratios\ndef Jane_new_ratio := multiply_ratio Jane_ratio 10\ndef Mary_new_ratio := multiply_ratio Mary_ratio 7\n\n-- check that the quantities of lemonade are equal\n#check Jane_new_ratio.1 + Jane_new_ratio.2 = Mary_new_ratio.1 + Mary_new_ratio.2', 'Jane and Mary are making a lemonade stand. Jane wants to mix 5 cups of water for every 2 cups of lemon juice. Mary, on the other hand, wants to mix 7 cups of water for every 3 cups of lemon juice. If they want to make the same amount of lemonade, how many cups of water and lemon juice should each of them use?', "First, we need to find a common quantity of lemonade that both Jane and Mary can make with their ratios. To do this, we can multiply the two ratios to see how many cups of lemonade each will make. \n\nFor Jane, 5 cups of water and 2 cups of lemon juice will make 7 cups of lemonade. \n\nFor Mary, 7 cups of water and 3 cups of lemon juice will make 10 cups of lemonade. \n\nTo find a common quantity, we can multiply Jane's ratio by 10 and Mary's ratio by 7. \n\nSo, Jane should use 50 cups of water (5 cups*10) and 20 cups of lemon juice (2 cups*10) to make 70 cups of lemonade. \n\nSimilarly, Mary should use 49 cups of water (7 cups*7) and 21 cups of lemon juice (3 cups*7) to make 70 cups of lemonade."), ('def divide (a b : ℕ) : ℕ := a / b\n\nexample : divide 125 5 = 25 :=\nbegin\n  refl,\nend', 'Emma has a total of 125 apples. She wants to divide them into boxes. Each box can contain 5 apples. How many boxes does Emma need?', 'To find out how many boxes Emma needs, we need to divide the total number of apples by the number of apples each box can contain. So, we divide 125 by 5. The result is 25. Therefore, Emma needs 25 boxes to store all her apples.'), ('import data.real.basic\n\n-- define the variables\ndef AB (x : ℝ) := 3*x - 7\ndef BC (x : ℝ) := 2*x + 5\ndef perimeter (x : ℝ) := 2*(AB x + BC x)\n\n-- set up the equation\ntheorem find_x : \n  ∃ x : ℝ, perimeter x = 72 ∧ x = 7.6 :=\nbegin\n  use 7.6,\n  split,\n  { -- prove that when x = 7.6, the perimeter is 72\n    unfold perimeter AB BC,\n    norm_num, },\n  { -- prove that x = 7.6\n    exact rfl, }\nend', "In a rectangle ABCD, the length of AB is 3x - 7 and the length of BC is 2x + 5. The rectangle's perimeter is 72 units. Find the value of x.", 'In a rectangle, opposite sides are equal. Therefore, the length of AB is equal to the length of CD, and the length of BC is equal to the length of AD.\n\nThe formula for the perimeter of a rectangle is 2*(length + width). Given that the perimeter is 72, we can set up the equation 2*((3x - 7) + (2x + 5)) = 72.\n\nSolving this equation, we get:\n2*(5x - 2) = 72\n5x - 2 = 72/2\n5x - 2 = 36\n5x = 38\nx = 38/5 = 7.6\n\nTherefore, the value of x is 7.6.'), ('import data.real.basic\n\n-- first, we declare our variables\nvariables (a b : ℝ) \n\n-- next, we state our theorem\ntheorem div_mul_eq (ha : a ≠ 0) : (a * b) / a = b :=\nbegin\n  -- apply the mul_div_cancel theorem, which states that a ≠ 0 → a * b / a = b\n  exact mul_div_cancel_left b ha,\nend', 'Prove that for any rational numbers a and b, if a ≠ 0, the expression (ab) / a is equal to b.', 'Given two rational numbers a and b, where a ≠ 0, we are asked to prove that (ab) / a equals b. \n\nWe start by noting that the multiplication and division of rational numbers obeys the field axioms. So, we can rewrite the expression (ab) / a as ab * (1/a). \n\nSince 1/a is the multiplicative inverse of a, it follows that a * 1/a equals 1 (by the definition of multiplicative inverse). \n\nTherefore, we can simplify the expression ab * (1/a) as b * 1, which equals to b.\n\nSo, (ab) / a equals b. This completes the proof.'), ('-- Lean does not currently have a library for handling differential equations. Therefore, a formal proof in Lean for this problem cannot be provided. ', "Let's consider a second order linear homogeneous differential equation with constant coefficients, y'' - 3y' + 2y = 0. Let's also consider a first order linear differential equation, y' - y = 0. Prove that the general solution of the second order equation can be obtained from the general solution of the first order equation.", "The general solution to the first order equation y' - y = 0 can be obtained as y = Ce^x, where C is a constant. \n\nNow, to form a second order differential equation, we can multiply two first order equations. Therefore, multiplying y' - y = 0 by itself, we get (y' - y)(y' - y) = 0 which simplifies to y'' - 2y' + y^2 = 0. \n\nHowever, we need our second order equation to be linear and homogeneous with constant coefficients. Therefore, we need to replace the y^2 term with another constant. We can do this by substitifying y = e^x into the equation. This gives us y'' - 2y' + e^2x = 0. Now, we can see that e^2x is a constant for a specific x, so we can rewrite it as 2y, which gives us the desired second order equation: y'' - 3y' + 2y = 0. \n\nSo we have demonstrated that the general solution of the second order equation can be obtained from the general solution of the first order equation."), ('-- We import the library for real numbers\nimport data.real.basic\n\n-- We define the real numbers to represent the lengths\nnoncomputable def map_length_park : ℝ := 2\nnoncomputable def map_width_park : ℝ := 1.5\nnoncomputable def scale : ℝ := 10000\n\n-- We convert the lengths from cm to m using the scale\nnoncomputable def real_length_park : ℝ := map_length_park * scale / 100\nnoncomputable def real_width_park : ℝ := map_width_park * scale / 100\n\n-- We calculate the area of the park\nnoncomputable example : ℝ := real_length_park * real_width_park', 'A map has a scale of 1:10000. If a park on the map is measured to be 2 cm in length and 1.5 cm in width, what is the actual size of the park in square meters?', "The scale of the map is 1:10000, which means 1 cm on the map represents 10000 cm (or 100 m) in reality. \nTherefore, the actual length of the park is 2 cm * 100 m/cm = 200 m and the actual width is 1.5 cm * 100 m/cm = 150 m. \nThe actual area of the park is the length times the width, so it's 200 m * 150 m = 30000 square meters."), ('import data.real.basic\n\n-- Define the variables\nvariables (L O : ℝ)\n\n-- Define the system of equations\ndef eq1 (L O : ℝ) : Prop := 3*L + 2*O = 13\ndef eq2 (L O : ℝ) : Prop := 4*L + 3*O = 18\n\n-- The solution for L and O\ndef L_solution : ℝ := 3\ndef O_solution : ℝ := 2\n\n-- The final solutions are L = 3, O = 2\ntheorem solution : eq1 L_solution O_solution ∧ eq2 L_solution O_solution :=\nbegin\n  split,\n  { unfold eq1, \n    rw [L_solution, O_solution],\n    norm_num, },\n  { unfold eq2, \n    rw [L_solution, O_solution],\n    norm_num, },\nend', 'John and Mary are selling lemonades at their respective stands. One day, John sold 3 cups of lemonade and 2 cups of orange juice for $13. On the same day, Mary sold 4 cups of lemonade and 3 cups of orange juice for $18. Can you find out how much they charge for each cup of lemonade and each cup of orange juice?', "We can form a system of two equations from the problem:\n\n1) 3L + 2O = 13 (equation represents John's sales)\n\n2) 4L + 3O = 18 (equation represents Mary's sales)\n\nwhere L represents the price of a cup of lemonade and O represents the price of a cup of orange juice. \n\nWe can solve this system by substitution or elimination. Here, we will use elimination:\n\nMultiply the first equation by 3 and the second by 2 to make the coefficients of O the same in both equations:\n\n3) 9L + 6O = 39 \n4) 8L + 6O = 36 \n\nSubtract the second equation from the first to eliminate O:\n\nL = 3 \n\nSubstitute L = 3 into the first equation:\n\n3*3 + 2O = 13 \n\n9 + 2O = 13 \n\n2O = 4 \n\nO = 2 \n\nSo, they charge $3 for each cup of lemonade and $2 for each cup of orange juice."), ('import data.real.basic  -- import the library for real numbers\n\n-- Sequences part\ndef a : ℕ → ℕ \n| 0        := 0\n| (n + 1)  := 4 * (a n) + 2\n\n#eval a 3  -- output: 90\n\n-- Conic sections part\ndef circle (r : ℝ) (x : ℝ) : ℝ := r^2 - x^2\n\n#eval circle 5 0  -- output: 25\n#eval circle 5 5  -- output: 0\n#eval circle 5 (-5)  -- output: 0', 'The sequence of numbers {a_n} is defined as follows: a_1 = 5, and for n > 1, a_n = 4*a_{n-1} + 2. What is the value of a_3?\n\nOn the other hand, consider a circle with center at the origin (0,0) and radius 5 units. What are the x-coordinates of the points where the circle intersects the x-axis?', 'For the first part, we can use the recursive definition of the sequence to find a_3. We know that a_1 = 5. The definition tells us that a_n = 4*a_{n-1} + 2. Plugging in n = 2, we get a_2 = 4*a_{1} + 2 = 4*5 + 2 = 22. Then plugging in n = 3, we get a_3 = 4*a_{2} + 2 = 4*22 + 2 = 90. So a_3 = 90.\n\nFor the second part, a circle with center (0,0) and radius r intersects the x-axis at the points (r,0) and (-r,0). So in this case, the circle intersects the x-axis at the points (5,0) and (-5,0). Thus, the x-coordinates of these points are 5 and -5.'), ('import tactic.norm_num\n\nopen nat\n\n-- Define the number of students\ndef students : ℕ := 10\n-- Define the number of pencils each student has\ndef pencils_per_student : ℕ := 2\n\n-- Prove that the total number of pencils is 20\nexample : students * pencils_per_student = 20 :=\nbegin\n  rw [students, pencils_per_student],\n  norm_num,\nend', "Let's say that there are 10 students in a classroom and each student has 2 pencils. How many pencils are there in total?", 'To find the total number of pencils, you can use multiplication. You multiply the number of students which is 10 by the number of pencils each student has which is 2. The multiplication of 10 and 2 gives 20. So, there are 20 pencils in total.'), ('import data.matrix.basic\n\nopen matrix\nvariables {α : Type*} [semiring α]\n\ndef A : matrix (fin 2) (fin 2) ℕ := ![![1, 2], ![3, 4]]\ndef B : matrix (fin 2) (fin 2) ℕ := ![![4, 3], ![2, 1]]\n\n#eval matrix.mul A B', 'Consider two matrices A and B. Matrix A is a 2x2 matrix with elements [1, 2; 3, 4] and Matrix B is another 2x2 matrix with elements [4, 3; 2, 1]. What is the result of the matrix multiplication of A and B?', 'Matrix multiplication is done element-by-element. The element in the i-th row and j-th column of the resulting matrix is the sum of the products of the elements in the i-th row of the first matrix and the j-th column of the second matrix.\n\nSo for our matrices:\n\nA * B = [ (1*4 + 2*2), (1*3 + 2*1); \n          (3*4 + 4*2), (3*3 + 4*1) ]\n\nA * B = [ 8, 5; \n          20, 13 ]'), ('import data.int.basic\n\nopen int\n\n-- defining the side of the square\ndef side_of_square : ℤ := -5\n\n-- defining the area of the square\ndef area_of_square (side : ℤ) := side * side\n\n-- proving that the area of the square is 25\nexample : area_of_square side_of_square = 25 :=\nbegin\n  unfold area_of_square,\n  unfold side_of_square,\n  rw neg_mul_neg,\n  refl,\nend', 'Ben is working on his math homework. He is given a square with a side length of -5 units. He is asked to calculate the area of the square. What is the area of the square?', 'Even though the side length of the square is a negative number, we know that the area of a square is found by multiplying the side length by itself. In this case, we multiply -5 by -5. We know that the multiplication of two negative numbers is a positive number. So, -5 * -5 equals 25. Therefore, the area of the square is 25 square units.'), ('import data.real.basic\n\n-- Defining the coordinates of points A and B\ndef A : ℝ × ℝ := (2, 5)\ndef B : ℝ × ℝ := (6, 9)\n\n-- Defining the slope function\nnoncomputable def slope (P Q : ℝ × ℝ) : ℝ := (Q.2 - P.2) / (Q.1 - P.1)\n\n-- Proving that the slope of line AB is 1\nexample : slope A B = 1 :=\nbegin\n    dsimp [slope, A, B],\n    norm_num,\nend', 'In a coordinate plane, point A is at (2,5) and point B is at (6,9). What is the slope of the line AB?', 'The slope of a line in a coordinate plane is calculated by the formula (y2-y1)/(x2-x1), where (x1,y1) and (x2,y2) are the coordinates of two points on the line. In this case, (x1,y1) = (2,5) and (x2,y2) = (6,9). \n\nBy substituting these coordinates into the formula, we get (9-5)/(6-2) = 4/4 = 1. \n\nSo, the slope of the line AB is 1.'), ('import data.real.basic\n\nopen_locale classical\n\n-- defining the variables\nnoncomputable def johns_money := (7.5 : ℝ)\nnoncomputable def num_friends := (3 : ℝ)\n\n-- defining the division function\nnoncomputable def money_per_friend (total_money : ℝ) (num_friends : ℝ) : ℝ := total_money / num_friends\n\n-- proof that each friend will receive 2.5 dollars\nexample : money_per_friend johns_money num_friends = 2.5 := \nbegin\n  unfold money_per_friend,\n  unfold johns_money,\n  unfold num_friends,\n  norm_num,\nend', 'John has $7.5 in his pocket and he wants to give the same amount of money to each of his 3 friends. How much money will each friend receive?', 'To find out how much money each friend will receive, we need to divide the total amount of money John has by the number of his friends. So, we have to calculate 7.5 ÷ 3. \n\nWe start by dividing 7 by 3, which gives us 2. Then we divide the remaining 1.5 by 3, which gives us 0.5. Adding these two results together, we find that each friend will receive $2.5.'), ('open nat\n\n-- define the number of boxes and the number of apples in each box\ndef boxes := 3\ndef apples_per_box := 7\n\n-- prove that the total number of apples is 21\nexample : boxes * apples_per_box = 21 :=\nbegin\n  rw [boxes, apples_per_box],\n  refl,\nend', 'John has 3 boxes of apples. Each box contains 7 apples. How many apples does John have in total?', 'John has 3 boxes of apples and each box contains 7 apples. So, to find out the total number of apples, we multiply the number of boxes by the number of apples in each box. This gives us 3 * 7 = 21. Therefore, John has 21 apples in total.'), ('import data.real.basic\n\n-- The sum of the first n terms of a geometric series\nnoncomputable def geom_series (a r : ℝ) (n : ℕ) : ℝ :=\n  a * (1 - r^n) / (1 - r)\n\n-- Proof\nexample : geom_series 3 (1/2) 10 = 3069 / 512 :=\nbegin\n  unfold geom_series,\n  norm_num,\nend', 'Consider a geometric series where the first term (a) is 3 and the common ratio (r) is 1/2. What is the sum of the first 10 terms of the series?', 'A geometric series is a series with a constant ratio between successive terms. The sum of the first n terms, S_n, of a geometric series with initial term a and common ratio r can be calculated using the formula:\n\nS_n = a*(1 - r^n) / (1 - r)\n\nIn this case, the first term a is 3 and the common ratio r is 1/2. We want to find the sum of the first 10 terms, so n = 10. \n\nSubstituting these values into the formula, we get:\n\nS_10 = 3*(1 - (1/2)^10) / (1 - 1/2)\n\n= 3*(1 - 1/1024) / (1/2)\n\n= 3*(1023/1024) / (1/2)\n\n= 3*1023 / 512\n\n= 3069 / 512'), ('-- Formal proof in Lean 3 is not applicable for this problem. The problem involves calculus, specifically differentiation, which is not easily expressible in Lean without the use of extensive libraries and complex notation. Further, Lean is not designed to handle real-world units of measurement like centimeters or dollars, which are crucial to this problem.', 'A company is manufacturing a cylindrical can that must have a volume of 1000 cubic centimeters. The sides and bottom of the can are made from a material that costs $0.02 per square centimeter and the top of the can is made from a different material that costs $0.03 per square centimeter. Find the dimensions (radius and height) of the can that will minimize the cost of the material to make the can.', "Let's denote the radius of the base of the can as r (in centimeters) and the height of the can as h (in centimeters). The volume V of a cylindrical can is given by the formula V = πr²h. We know that V must be 1000 cm³, so we can express h in terms of r as h = 1000/(πr²).\n\nThe cost C of the material to make the can is the sum of the cost of the material for the sides, the bottom, and the top. The surface area of the sides is 2πrh, the surface area of the bottom is πr², and the surface area of the top is also πr². So, C = 0.02*(2πrh + πr²) + 0.03*πr². Substituting h = 1000/(πr²) into the equation gives C = 0.02*(2000/r + πr²) + 0.03*πr².\n\nTo minimize C, we take the derivative of C with respect to r, set it to 0, and solve for r. The derivative of C with respect to r is -0.02*(2000/r²) + 0.02*2πr + 0.03*2πr. Setting this to 0 gives r = 5 cm.\n\nSubstituting r = 5 cm into the equation h = 1000/(πr²) gives h ≈ 13 cm.\n\nTherefore, the dimensions that will minimize the cost of the material to make the can are a radius of 5 cm and a height of approximately 13 cm."), ('open nat\n\n-- Sandy starts with 30 candies\ndef start := 30\n\n-- She sells 25 candies\ndef sells : ℕ := start - 25\n\n-- She receives a new shipment of 40 candies\ndef new_shipment : ℕ := sells + 40\n\n-- She has 45 candies at the end of the day\nexample : new_shipment = 45 := rfl', 'Sandy has a candy shop. She starts the day with 30 candies. Throughout the day, she sells 25 candies and then receives a new shipment of 40 candies. How many candies does she have at the end of the day?', 'Sandy starts with 30 candies. After selling 25 candies, she will have 30-25=5 candies left. When she receives a new shipment of 40 candies, she adds these to her current stock. So, she has 5+40=45 candies at the end of the day.'), ('def total_cost (students : ℕ) (cost_per_set : ℕ) : ℕ := students * cost_per_set\n\n#eval total_cost 30 12  -- Returns 360', 'In a class of 30 students, each student has to buy a set of school supplies. The cost of a set of school supplies is $12. Write an algebraic expression for the total cost of school supplies for the class. Then, calculate the total cost.', 'The total cost of school supplies can be found by multiplying the number of students by the cost of each set of school supplies. This can be expressed algebraically as 30 * $12 = $x, where x is the total cost. Therefore, x = $360.'), ('import data.real.basic\n\n-- We first declare x as a real number\nvariables (x : ℝ)\n\n-- Then we state and prove the theorem\ntheorem solve_inequality : 3*x - 7 > 2*x + 5 ↔ x > 12 :=\nbegin\n  -- The proof is split into two parts\n  split,\n  -- For the forward direction, we assume the left side of the implication and show the right side\n  { intro h,\n    -- We simplify the inequality using basic algebra\n    linarith },\n  -- For the reverse direction, we assume the right side of the implication and show the left side\n  { intro h,\n    -- We simplify the inequality using basic algebra\n    linarith }\nend', 'Solve the inequality for x: 3x - 7 > 2x + 5.', 'First, subtract 2x from both sides of the inequality to get x - 7 > 5. Then add 7 to both sides of the inequality to get x > 12. So, the solution to the inequality is x > 12.'), ('import data.real.basic\n\nvariables (a b c d : ℝ)\n\n-- The hypothesis of the problem\ndef similar_triangles := a / b = c / d\n\ntheorem similar_triangles_iff_ratio_equal : similar_triangles a b c d → a / b = c / d :=\nbegin\n  intro h,\n  exact h,\nend', 'If the ratio of lengths of two sides in a triangle is equal to the ratio of lengths of two corresponding sides in another triangle, are these two triangles similar?', 'Yes, the two triangles are similar. According to the concept of similar triangles in geometry, if the ratio of lengths of two corresponding sides in two triangles is the same, then the triangles are similar. This is due to the fact that all corresponding angles are equal in similar triangles, and the ratio of corresponding sides is maintained.'), ('import data.real.basic\n\n-- define variables\ndef length := (20 : ℝ) -- length of the field in meters\ndef width := (25 : ℝ) -- width of the field in meters\ndef packet_coverage := (5 : ℝ) -- area covered by each packet of seeds in square meters\n\n-- calculate total area of the field\ndef total_area : ℝ := length * width\n\n-- calculate the area to be planted\nnoncomputable def planting_area : ℝ := total_area / 2\n\n-- calculate the number of packets needed\nnoncomputable def packets_needed : ℝ := planting_area / packet_coverage\n\n-- prove that the number of packets needed is 50\nexample : packets_needed = 50 :=\nbegin\n  unfold packets_needed,\n  unfold planting_area,\n  unfold total_area,\n  unfold length,\n  unfold width,\n  unfold packet_coverage,\n  norm_num,\nend', 'A rectangular field in the park measures 20 meters by 25 meters. The park administration wants to plant flowers in half of this field. If each packet of flower seeds can cover 5 square meters, how many packets do the park administration need to buy?', 'First, we need to calculate the area of the rectangular field, which is length times width. So, the total area of the field is 20 meters * 25 meters = 500 square meters. \n\nSince the park administration wants to plant flowers in half of this field, the area to be planted is 500 square meters / 2 = 250 square meters.\n\nFinally, we find out how many packets of flower seeds the park administration needs to buy. Since each packet can cover 5 square meters, the number of packets needed is 250 square meters / 5 = 50 packets. Therefore, the park administration needs to buy 50 packets of flower seeds.'), ('import data.real.basic\n\ntheorem compare_cubes : ¬ ((27 : ℝ) / 8 = (3 : ℝ) / 2) :=\nbegin\n  intro h,\n  have h1 : (27 : ℝ) / 8 ≠ (3 : ℝ) / 2,\n  { norm_num },\n  apply h1,\n  exact h,\nend', "Mike and John each have a cube. Mike's cube has a side length of 2 units and John's cube has a side length of 3 units. They decide to compare the volume of their cubes by dividing each cube into unit cubes. After dividing, they found that the volume of John's cube is 3/2 times the volume of Mike's cube. Is their comparison correct?", "First, we calculate the volume of each cube. The volume of a cube is calculated by cubing the side length. So, the volume of Mike's cube is 2^3 = 8 cubic units and the volume of John's cube is 3^3 = 27 cubic units. \n\nNext, we compare the volumes by dividing the volume of John's cube by the volume of Mike's cube. The result is 27/8 = 3.375. This is not equal to 3/2, which is 1.5. \n\nTherefore, their comparison is incorrect."), ('def calculate_rectangle_perimeter (length : ℕ) (width : ℕ) : ℕ := \n2 * (length + width)\n\n-- length of the garden\ndef length := 4\n-- width of the garden\ndef width := 3\n\n-- calculate the perimeter\ndef perimeter := calculate_rectangle_perimeter length width\n\n-- Since each flower needs 1 meter, John can plant the same numbers of flowers as the perimeter.\ndef number_of_flowers := perimeter', 'John has a rectangular garden that is 4 meters long and 3 meters wide. He wants to plant flowers around the edge of the garden. If each flower needs 1 meter, how many flowers can he plant in total?', 'To determine how many flowers John can plant, we need to calculate the perimeter of the garden. The perimeter of a rectangle can be found by using the formula: 2 * (length + width). The length of the garden is 4 meters and the width is 3 meters. So, the perimeter of the garden is 2 * (4 + 3) = 14 meters. Since each flower needs 1 meter, John can plant 14 flowers in total.'), ('import data.real.basic\n\n-- define the area and length\ndef rect_area : ℝ := 100\ndef rect_length : ℝ := 10\n\n-- calculate the width\nnoncomputable def rect_width := rect_area / rect_length\n\n-- prove the width is 10\nexample : rect_width = 10 :=\nbegin\n  unfold rect_width,\n  rw [rect_area, rect_length],\n  norm_num,\nend', 'The area of a rectangle is 100 square meters. The length of the rectangle is 10 meters. What is the width of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. If we know the area and the length, we can calculate the width by dividing the area by the length. So, the width of the rectangle is 100 square meters divided by 10 meters, which equals 10 meters.'), ('import data.nat.basic\n\nvariables (rectangle_length rectangle_width square_side : ℕ)\n\ndef rectangle_area (length width : ℕ) : ℕ := length * width\ndef square_area (side : ℕ) : ℕ := side * side\n\nexample (h1 : rectangle_length = 8) (h2 : rectangle_width = 4) (h3 : square_side = 6) : square_area square_side > rectangle_area rectangle_length rectangle_width :=\nbegin\n  rw [h1, h2, h3],\n  unfold rectangle_area square_area,\n  exact dec_trivial,\nend', "Let's consider a rectangle and a square. The rectangle has a length of 8 units and a width of 4 units, while the square has a side length of 6 units. Compare the area of the rectangle and the square.", 'First, we calculate the area of the rectangle. The formula for the area of a rectangle is length times width. In this case, the area of the rectangle is 8 units * 4 units = 32 square units. \n\nThen, we calculate the area of the square. The formula for the area of a square is side length squared. In this case, the area of the square is 6 units * 6 units = 36 square units. \n\nBy comparing the two areas, we can see that the area of the square is greater than the area of the rectangle.'), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def a := (1.25 : ℝ)\nnoncomputable def b := (0.75 : ℝ)\n\n-- proof that subtraction of two decimal numbers is correct\nexample : a - b = 0.50 :=\nbegin\n  -- simplifying the subtraction\n  simp,\n  -- proving the equality\n  norm_num,\n  rw [a, b],\n  norm_num,\nend', 'If we subtract 0.75 from 1.25, what will be the result?', 'To subtract 0.75 from 1.25, we align the two numbers by their decimal points. Then, we subtract each corresponding digit, starting from the rightmost digit. For the hundredths place, we subtract 5 from 0, which is not possible, so we need to borrow 1 from the tenths place. After borrowing, we have 10 in the hundredths place and 2 in the tenths place. Now, we can subtract 5 from 10, which is 5. Then, subtract 7 from 2 in the tenths place, which is not possible again, so we need to borrow 1 from the ones place. After borrowing, we have 12 in the tenths place and 0 in the ones place. Now, we can subtract 7 from 12, which is 5. Lastly, subtract 0 from 0 in the ones place, which is 0. Therefore, the result of subtracting 0.75 from 1.25 is 0.50.'), ('import data.int.basic\n\ntheorem neg_num_equals_neg_one (x : ℤ) (h : x < 0) : x - (x + 1) = -1 :=\nbegin\n  have h1 : x - x - 1 = -1,\n    by simp,\n  have h2 : x - (x + 1) = x - x -1,\n    by rw sub_add_eq_sub_sub,\n  rw h2,\n  exact h1,\nend', 'If x is a negative integer, prove that x - (x + 1) = -1.', 'Given that x is a negative integer, we can simplify the expression on the left-hand side of the equation. \n\nFirst, we distribute the negative sign in front of the parentheses to both the x and the 1 inside the parentheses, which gives us x - x - 1.\n\nThen, we simplify the expression further by subtracting x from x, which gives us 0 - 1.\n\nFinally, 0 - 1 equals -1, which is the right-hand side of the equation.\n\nTherefore, the original equation, x - (x + 1) = -1, is proven to be true.'), ('import data.real.basic\n\ndef feet_to_inches (ft : ℝ) : ℝ := ft * 12\ndef area_in_inches (length width : ℝ) : ℝ := length * width\n\nexample : area_in_inches (feet_to_inches 15) (feet_to_inches 10) = 21600 :=\nbegin\n  unfold feet_to_inches,\n  unfold area_in_inches,\n  norm_num,\nend', 'John has a garden that measures 15 feet by 10 feet. He wants to convert the measurement into inches. If 1 foot equals 12 inches, what is the total area of his garden in square inches?', 'To solve this problem, we first need to convert the measurements from feet to inches. We know that 1 foot equals 12 inches. So, we multiply the length and width of the garden by 12 to get the measurements in inches. That gives us 180 inches by 120 inches. \nTo get the area in square inches, we multiply the length by the width, which gives us 21600 square inches.'), ('-- Lean does not currently support formal proofs involving real analysis or calculus, \n-- including the computation of double integrals. Thus, it is not possible to provide \n-- a formal proof for this problem in Lean.', 'Let F(x, y) = x^2*y + y^3. Compute the double integral of F over the rectangle R = [0, 2] x [1, 3].', 'The double integral of F over the rectangle R can be computed by first integrating with respect to x, then integrating the result with respect to y. \n\nThe integral of F with respect to x over [0, 2] is ∫_{0}^{2} (x^2*y + y^3) dx = [x^3*y/3 + y^3*x]_{0}^{2} = 8y/3 + 2y^3 - 0 = 8y/3 + 2y^3.\n\nThen we integrate this result with respect to y over [1, 3]: ∫_{1}^{3} (8y/3 + 2y^3) dy = [4y^2/3 + y^4/2]_{1}^{3} = 12 + 40.5 - 4/3 - 1/2 = 51 - 4/3 - 1/2 = 49.83 (approx).\n\nSo, the double integral of F over the rectangle R = [0, 2] x [1, 3] is approximately 49.83.'), ('import data.real.basic\n\nopen_locale classical\n\n-- Defining the equation\nnoncomputable def f (x : ℝ) : ℝ := x / (x - 1) - 2 * x / (x - 2)\n\n-- Proof that the solution of the equation is x = 0\ntheorem solve_eqn : ∃ x : ℝ, f(x) = 0 :=\nbegin\n  use 0,\n  simp [f],\nend\n\n-- Defining the derivative of the solution\ndef df (x : ℝ) : ℝ := 0\n\n-- Proof that the derivative of the solution is 0\ntheorem deriv_eqn : ∃ x : ℝ, df(x) = 0 :=\nbegin\n  use 0,\n  simp [df],\nend', 'Consider the rational equation: x/(x - 1) = 2x/(x - 2). Solve for x and then find the derivative of the solution with respect to x.', 'First, we solve the rational equation:\nx/(x - 1) = 2x/(x - 2). By cross multiplying, we get: x*(x - 2) = 2x*(x - 1). Expanding both sides, we get: x^2 - 2x = 2x^2 - 2x. Subtracting 2x from both sides, we get: x^2 = 2x^2. By subtracting x^2 from both sides, we get: x^2 - x^2 = 0. So, the solution is x = 0. \n\nNow, we find the derivative of the solution with respect to x. Since the solution is a constant, the derivative is 0.'), ('open nat\n#eval (3 * 1) + (5 * 10) + (8 * 100)  -- The output will be 853', 'Addison has a certain number of marbles. She has 3 marbles in one place value, 5 marbles in the tens place value, and 8 marbles in the hundreds place value. How many marbles does Addison have in total?', 'First, we need to understand what place values represent. The ones place value is just as it states, ones. So, 3 in the ones place value represents 3. The tens place value represents tens, so 5 in the tens place value represents 50. The hundreds place value represents hundreds, so 8 in the hundreds place value represents 800. To find the total number of marbles Addison has, we add these numbers together: 3 + 50 + 800 = 853. So, Addison has 853 marbles in total.'), ('import data.real.basic\n\n-- defining variables\ndef milliliters_bottle1 : ℝ := 350\ndef milliliters_bottle2 : ℝ := 650\ndef milliliters_to_liters_conversion : ℝ := 1000\n\n-- defining the total milliliters and conversion to liters\ndef total_milliliters : ℝ := milliliters_bottle1 + milliliters_bottle2\nnoncomputable def total_liters : ℝ := total_milliliters / milliliters_to_liters_conversion\n\n-- proving the total liters\nexample : total_liters = 1 :=\nbegin\n  unfold total_liters,\n  unfold total_milliliters,\n  unfold milliliters_bottle1,\n  unfold milliliters_bottle2,\n  unfold milliliters_to_liters_conversion,\n  norm_num,\nend', 'John has two bottles of water. One bottle contains 350 milliliters of water and the other bottle contains 650 milliliters of water. How many liters of water does John have in total?', 'First, we need to add the amount of water John has in both bottles: 350 milliliters + 650 milliliters = 1000 milliliters. We know that 1 liter is equal to 1000 milliliters. So, John has 1 liter of water in total.'), ('import data.real.basic\n\n-- define the fractions\nnoncomputable def fraction_of_field_for_first_part : ℝ := (3 : ℝ) / 5\nnoncomputable def fraction_of_first_part_for_corn : ℝ := (1 : ℝ) / 2\n\n-- calculate the fraction of the field that is planted with corn\nnoncomputable def fraction_of_field_for_corn : ℝ := fraction_of_field_for_first_part * fraction_of_first_part_for_corn\n\n-- proof that the fraction of the field that is planted with corn is 3/10\nexample : fraction_of_field_for_corn = (3 : ℝ) / 10 :=\nbegin\n  unfold fraction_of_field_for_corn,\n  unfold fraction_of_field_for_first_part,\n  unfold fraction_of_first_part_for_corn,\n  norm_num,\nend', 'In a rectangular field, a farmer has divided his field into two parts. The first part occupies 3/5 of the field and the second part occupies the remaining 2/5 of the field. The farmer decides to plant corn on 1/2 of the first part of the field and wheat on the rest of the first part. What fraction of the field is planted with corn?', 'Since the corn is planted on 1/2 of the first part of the field, we find the fraction of the field planted with corn by multiplying 1/2 by 3/5 (the fraction of the field that the first part occupies). This equals 3/10. Therefore, 3/10 of the field is planted with corn.'), ("import data.real.basic\n\n-- Let's define the variables\ndef AB := (5 : ℝ)\ndef AC := (12 : ℝ)\ndef BC := (13 : ℝ)\n\n-- Pythagorean theorem\ntheorem Pythagorean_theorem : AB^2 + AC^2 = BC^2 :=\nbegin\n  rw [AB, AC, BC],\n  norm_num,\nend", 'Given a right triangle ABC with angle BAC being the right angle. If the lengths of AB and AC are 5 units and 12 units respectively, what is the length of BC?', 'Since ABC is a right triangle with angle BAC being the right angle, we can apply the Pythagorean theorem. The theorem states that in a right triangle, the square of the length of the hypotenuse is equal to the sum of the squares of the lengths of the other two sides. Here, the hypotenuse is BC, and the other two sides are AB and AC. Therefore, we have BC^2 = AB^2 + AC^2 = 5^2 + 12^2 = 25 + 144 = 169. Taking the square root of both sides, we get BC = sqrt(169) = 13 units. Therefore, the length of BC is 13 units.'), ('import data.real.basic\n\n-- Defining the variables\ndef l := (10 : ℝ) -- length of the garden\ndef w := (15 : ℝ) -- width of the garden\n\n-- Proving that the perimeter is 50\nexample : 2 * (l + w) = 50 :=\nbegin\n  rw [l, w],\n  norm_num,\nend\n\n-- Proving that the area is 150\nexample : l * w = 150 :=\nbegin\n  rw [l, w],\n  norm_num,\nend', 'John has a rectangular garden which measures 10 meters by 15 meters. He wants to build a fence around the garden. He also wants to plant grass on every square meter inside the garden. How many meters of fence does he need to build and how many square meters of grass does he need to plant?', 'To find out how many meters of fence John needs to build, we need to calculate the perimeter of the rectangle. The formula for the perimeter of a rectangle is 2*(length + width). So, substituting the given values, we get 2*(10 + 15) = 50 meters.\n\nTo find out how many square meters of grass John needs to plant, we need to calculate the area of the rectangle. The formula for the area of a rectangle is length * width. So, substitifying the given values, we get 10 * 15 = 150 square meters.\n\nSo, John needs 50 meters of fence and needs to plant grass on 150 square meters.'), ('import data.real.basic\n\nvariables (L W H : ℝ) \ndef volume_of_rectangular_prism (L W H : ℝ) : ℝ := L * W * H\n#check volume_of_rectangular_prism', 'Given a rectangular prism with length L, width W, and height H. What is the volume of the prism?', 'The volume of a rectangular prism is found by multiplying the length, width, and height of the prism. So, the volume V of the prism is given by V = L * W * H.'), ('import data.real.basic \n\n-- defining the equation\ndef equation (x : ℝ) : Prop := 5 * x + 3 = 28\n\n-- proving the solution\nexample : ∃ x, equation x :=\nbegin\n  use 5,\n  unfold equation,\n  norm_num,\nend', "Let's have an expression with a variable x, 5x + 3 = 28. What is the value of x?", 'First, we can subtract 3 from both sides of the equation to isolate the term with the variable on one side. This gives us: \n\n5x + 3 - 3 = 28 - 3 \nwhich simplifies to \n5x = 25. \n\nThen, we can divide both sides of the equation by 5 to solve for x. \n\n5x / 5 = 25 / 5 \nwhich simplifies to \nx = 5.'), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def johns_marbles : ℝ := 500\nnoncomputable def percent_given : ℝ := 30/100\n\n-- calculating the number of marbles given to Sam\nnoncomputable def marbles_given_to_Sam : ℝ := johns_marbles * percent_given \n\n-- calculating the number of marbles left with John\nnoncomputable def marbles_left_with_John : ℝ := johns_marbles - marbles_given_to_Sam\n\n-- proof that John has 350 marbles left\nexample : marbles_left_with_John = 350 := \nbegin\n  unfold marbles_left_with_John marbles_given_to_Sam percent_given johns_marbles,\n  norm_num,\nend', 'John has a jar of 500 marbles. He decides to give 30% of his marbles to his friend Sam. How many marbles does John have left?', 'To find out how many marbles John has left, we first need to calculate how many marbles he gave to Sam. Since he gave away 30% of his marbles, and he originally had 500, we multiply 500 by 30/100 to get 150. This means John gave Sam 150 marbles. \n\nTo find out how many marbles John has left, we subtract the number of marbles he gave away from the number he originally had. So, 500 - 150 = 350. So, John has 350 marbles left.'), ('import data.real.basic\n\n-- define the function c\ndef c (d : ℝ) := 50 + 20 * d\n\n-- state and prove the theorem\ntheorem car_rental : c 8 = 210 :=\nbegin\n  -- compute c(8)\n  unfold c,\n  -- simplify\n  norm_num,\nend', 'A car rental company charges a $50 flat fee plus $20 per day to rent a car. We can represent the total cost, c, to rent a car for d days as a function of d: c(d) = 50 + 20d. If John spends $210 total to rent a car, how many days did he rent the car for?', 'To find out how many days John rented the car for, we can set up an equation using the function c(d) = 50 + 20d. Since John spent $210 total, we have the equation 210 = 50 + 20d. To solve for d, we first subtract 50 from both sides of the equation, which gives us 160 = 20d. Then we divide both sides of the equation by 20, which gives us d = 8. So, John rented the car for 8 days.'), ('import data.real.basic\n\n-- state the problem\ndef side_length (x : ℝ) : Prop := x^2 + 9 = 25\n\n-- proof\nexample : ∃ x, side_length x :=\nbegin\n  use 4,\n  unfold side_length,\n  norm_num,\nend', 'In a right triangle, the length of the hypotenuse is 5 units and the length of one side is 3 units. What is the length of the other side?', "In a right triangle, the length of the hypotenuse is the square root of the sum of the squares of the lengths of the other two sides. This is known as the Pythagorean theorem. In this case, let's denote the length of the unknown side as x. So we have:\n\n5^2 = 3^2 + x^2\n\nSolving this equation for x gives us:\n\n25 = 9 + x^2\n\nSubtracting 9 from both sides gives us:\n\n16 = x^2\n\nTaking the square root of both sides gives us:\n\nx = 4\n\nSo, the length of the other side is 4 units."), ('import tactic.norm_num\n\nopen int\n\nexample : (34 : ℤ) * (12 : ℤ) = (408 : ℤ) :=\nbegin\n  norm_num,\nend', 'If we have two 2-digit numbers, 34 and 12, can you find the product of these numbers?', 'To find the product of 34 and 12, we first multiply 4 (from 34) by 12 to get 48. We write down the 8 and carry the 4 to the next column. Then multiply 3 (from 34) by 12 and add the carried 4 to get 40. So, the product of 34 and 12 is 408.'), ('def sophie_read_time : ℕ := 35 - 5\ndef sam_read_time : ℕ := 45 - 15\n\ntheorem sophie_and_sam_read_same_time : sophie_read_time = sam_read_time :=\nbegin\n  dsimp [sophie_read_time, sam_read_time],\n  refl,\nend', 'Sophie and her brother Sam decided to hold a reading competition. Sophie started reading at 2:05 PM and finished at 2:35 PM. Sam started reading at 2:15 PM and finished at 2:45 PM. Who read longer and by how much?', "First, let's calculate how long each of them read. Sophie read from 2:05 PM to 2:35 PM, which is a total of 30 minutes. Sam read from 2:15 PM to 2:45 PM, which is also a total of 30 minutes. So, Sophie and Sam read for the same amount of time."), ('-- Import the library for real numbers\nimport data.real.basic\n\n-- Define the function f that gives the number of tomatoes Alice gets from her garden\n-- in terms of the number of days she spends taking care of it\ndef f (x : ℝ) : ℝ := 4 * x\n\n-- Prove that Alice should spend 15 days taking care of her garden to get 60 tomatoes\nexample : f 15 = 60 :=\nbegin\n  -- Calculate f(15)\n  calc f 15 = 4 * 15 : rfl\n         ... = 60 : by norm_num,\nend', 'Alice has a garden where she plants tomatoes. The number of tomatoes Alice gets from her garden is directly proportional to the number of days she spends taking care of it. She starts by spending 3 days and gets 12 tomatoes. If Alice wants to have 60 tomatoes, how many days should she spend taking care of her garden?', 'From the problem, we know that the ratio of the number of tomatoes to the number of days Alice spends taking care of her garden is constant. In other words, the number of tomatoes Alice gets is equal to the number of days she cares for the garden times a constant. Given that Alice gets 12 tomatoes in 3 days, we can find that the constant is 12 / 3 = 4. Therefore, the number of tomatoes Alice gets is 4 times the number of days she spends taking care of her garden. If Alice wants 60 tomatoes, she should spend 60 / 4 = 15 days caring for her garden.'), ('import data.nat.basic\n\nopen nat\n\nexample : (2 - 1 = 1) :=\nbegin\n  exact rfl,\nend', 'If we have two apples and we eat one, how many apples do we have left?', 'Starting with two apples and eating one leaves us with one apple. 2 - 1 = 1.'), ('import data.real.basic\n\n-- defining the function for earnings\ndef earnings (x : ℝ) := 2*x + 10\n\n-- a lemma stating that the earnings equal the costs when 0 glasses of lemonade are sold\nlemma break_even : earnings 0 = 10 :=\nbegin\n  unfold earnings,        -- expands the definition of earnings\n  simp,               -- simplifies the expression\nend', "John sells lemonade at his stand for $2 per glass. He has fixed costs of $10 for the lemons and sugar he needs to make the lemonade. Let's denote the number of glasses of lemonade John sells as `x` and his total earnings as `y`. Write this relationship as a function, then find the number of glasses of lemonade John needs to sell in order to break even.", "The earnings function can be written as `y = 2x + 10`, where `y` represents the total earnings and `x` represents the number of glasses of lemonade sold. To find out when John breaks even, we need to set his earnings equal to his costs. This gives us the equation `2x + 10 = 10`. Solving this equation for `x` gives us `x = 0`. This tells us that John needs to sell 0 glasses of lemonade to cover his fixed costs. This is because his fixed costs are $10, and he doesn't make any extra profit from each glass of lemonade sold."), ('open nat \n\ndef kg_to_g : ℕ → ℕ \n| n := n * 1000 \n\n#eval kg_to_g 2.5 -- Lean does not support real number yet, so this is for illustration\n--output : 2500', 'Maggie baked a large batch of cookies. The recipe called for 2.5 kilograms of flour. If there are 1,000 grams in each kilogram, how many grams of flour did Maggie use?', 'We know that 1 kilogram is equal to 1,000 grams. So to convert kilograms to grams, we just need to multiply the number of kilograms by 1,000. In this case, Maggie used 2.5 kilograms of flour. Therefore, we can calculate the number of grams by multiplying 2.5 by 1,000, which gives us 2,500 grams. So, Maggie used 2,500 grams of flour.'), ('import data.real.basic\nopen real\n\n-- defining the variables\nnoncomputable def candy : ℝ := 0.5\nnoncomputable def bags : ℝ := 5\n\n-- defining the function to divide the candy\nnoncomputable def divide (candy bags : ℝ) : ℝ := candy / bags\n\n-- proving that each bag will get 0.1 kilograms of candy\nexample : divide candy bags = 0.1 :=\nbegin\n  unfold divide,\n  unfold candy,\n  unfold bags,\n  norm_num,\nend', 'John has 0.5 kilograms of candy. He wants to divide them equally into 5 bags. How much candy will each bag get?', 'To find out how much candy each bag will get, we need to divide the total amount of candy by the number of bags. So, we divide 0.5 (the total amount of candy) by 5 (the number of bags). When we do this, we get 0.1. So, each bag will get 0.1 kilograms of candy.'), ('import data.real.basic\n\nexample : (2^3 * 3^2 - 2^2 : ℝ) = 68 :=\nbegin\n  have h₁ : (2^3 : ℝ) = 8 := by norm_num,\n  have h₂ : (3^2 : ℝ) = 9 := by norm_num,\n  have h₃ : (2^2 : ℝ) = 4 := by norm_num,\n  have h₄ : (8 * 9 : ℝ) = 72 := by norm_num,\n  have h₅ : (72 - 4 : ℝ) = 68 := by norm_num,\n  rw [h₁, h₂, h₃, h₄, h₅],\nend', 'Simplify the expression: 2^3 * 3^2 - 2^2.', 'First, we follow the order of operations, which states we should perform exponentiation before multiplication or subtraction. So, we calculate 2^3, 3^2, and 2^2 which results in 8, 9, and 4 respectively. Then, the expression becomes 8 * 9 - 4. Multiplication also comes before subtraction, so we multiply 8 and 9 to get 72. Then we subtract 4 from 72 to get the final answer, which is 68.'), ('import data.real.basic\n\nopen real\n\n-- defining the variables\ndef total_students := 30\ndef average_angle_C_initial := 60\ndef incorrect_measurement := 60\ndef correct_measurement := 70\n\n-- calculating the total degrees measured for angle C before the correction\ndef total_degrees_before := total_students * average_angle_C_initial \n\n-- correcting the total degrees measured\ndef total_degrees_after := total_degrees_before - incorrect_measurement + correct_measurement\n\n-- calculating the new average\ndef new_average := total_degrees_after / total_students\n\n-- printing the new average\n#eval new_average', 'In a class of 30 students, each student is required to measure the angles of a triangle. The average angle measured for angle A is 60 degrees, for angle B is 60 degrees, and for angle C is 60 degrees. If one student measured angle C as 70 degrees instead of 60 degrees, what would the new average angle measurement be for angle C?', 'First, we calculate the total degrees measured for angle C by all the students before the correction. This is done by multiplying the average measurement by the total number of students, which gives 60 degrees * 30 students = 1800 degrees. \n\nThen, we correct the total degrees measured by subtracting the incorrect measurement and adding the correct one. This gives 1800 degrees - 60 degrees + 70 degrees = 1810 degrees.\n\nFinally, we calculate the new average measurement by dividing the corrected total by the number of students. This gives 1810 degrees / 30 students = 60.33 degrees. So the new average measurement for angle C is approximately 60.33 degrees.'), ('import data.real.basic\n\ndef P (x : ℝ) : ℝ := 2 * x ^ 3 - 5 * x ^ 2 + 4 * x - 3\n\nexample : P 2 = 1 :=\nbegin\n  simp [P],\n  norm_num,\nend', 'Suppose you have a polynomial P(x) = 2x^3 - 5x^2 + 4x - 3, and you are told that P(x) represents the number of times a certain random event occurs in x hours. If this event occurs exactly 17 times in 2 hours, what is the value of P(2)?', 'To find the value of P(2), we need to substitute x=2 into the polynomial P(x) = 2x^3 - 5x^2 + 4x - 3. \n\nThis gives us P(2) = 2*(2)^3 - 5*(2)^2 + 4*2 - 3 = 2*8 - 5*4 + 8 - 3 = 16 - 20 + 8 - 3 = 1. \n\nSo, the random event occurs exactly 1 time when x=2. Therefore, the event occurs 17 times more than predicted by the polynomial for x=2.'), ('import data.real.basic\n\nvariables (A B C M : ℝ)\nvariables (AB AC BM MC : ℝ)\nvariables (ABM ACM : ℝ)\n\ntheorem congruent_triangles : \n  AB = AC ∧ BM = MC ∧ ABM = ACM → true :=\nbegin\n  intro h,\n  cases h with h1 h2,\n  cases h2 with h2 h3,\n  trivial,\nend', 'In triangle ABC, AB = AC. M is the midpoint of BC. Prove that triangle ABM is congruent to triangle ACM.', 'According to the problem, we know that AB = AC and BM = MC. Since M is the midpoint of BC, angle ABM = angle ACM. Therefore, according to the Side-Angle-Side (SAS) congruence rule, we can conclude that triangle ABM is congruent to triangle ACM.'), ('import data.real.basic\n\n-- definition of Pythagorean theorem\ndef pythagorean_theorem (a b c : ℝ) : Prop := a^2 + b^2 = c^2\n\n-- proof that AB = 13 when AC = 5 and BC = 12\nexample : pythagorean_theorem 5 12 13 := \nbegin\n  unfold pythagorean_theorem,\n  norm_num,\nend', 'In a right triangle ABC, where AB is the hypotenuse and AC and BC are the sides. If AC = 5 units and BC = 12 units, prove that the length of AB is 13 units.', 'In a right triangle, the length of the hypotenuse is given by the Pythagorean theorem, which states that the square of the hypotenuse is equal to the sum of the squares of the other two sides. In this case, AB^2 = AC^2 + BC^2. Plugging in the given values, we get AB^2 = 5^2 + 12^2 = 25 + 144 = 169. Taking the square root of both sides, we get AB = 13 units.'), ('import data.real.basic -- Importing real numbers\n\nvariables (earnings_per_hour : ℝ) (hours_worked : ℝ)\ndef earnings := earnings_per_hour * hours_worked\n\n#check earnings\n#eval earnings 15 5  -- The output should be 75.', 'John has a part-time job at a local grocery store where he earns $15 per hour. If he works for 5 hours in a day, how much does he earn?', 'Since John earns $15 per hour, if he works for 5 hours, he will earn $15 * 5 = $75.'), ('import data.real.basic\n\ndef P (x : ℝ) : ℝ := 2 * x^2 - 3 * x + 4\ndef Q (x : ℝ) : ℝ := x^2 + 2 * x - 5\ndef R (x : ℝ) : ℝ := P x + Q x\n\ntheorem R_eq (x : ℝ) : R x = 3 * x^2 - x - 1 :=\nbegin\n  unfold R P Q,\n  ring,\nend', 'Consider two polynomials P(x) and Q(x) in the field of real numbers. P(x) = 2x^2 - 3x + 4 and Q(x) = x^2 + 2x - 5. What is the polynomial R(x) which is the result of the operation P(x) + Q(x)?', 'To add two polynomials, we simply add the corresponding coefficients of each term. So, to obtain the polynomial R(x), we add the coefficients of the corresponding terms in P(x) and Q(x). \n\nTherefore, the coefficient of x^2 in R(x) is the sum of the coefficients of x^2 in P(x) and Q(x), i.e., 2 + 1 = 3. \n\nThe coefficient of x in R(x) is the sum of the coefficients of x in P(x) and Q(x), i.e., -3 + 2 = -1. \n\nThe constant term in R(x) is the sum of the constant terms in P(x) and Q(x), i.e., 4 - 5 = -1. \n\nSo, R(x) = 3x^2 - x - 1.'), ('import data.int.basic\n\nopen int\n\ntheorem add_subtract_within_20 : (15 - 7) + 3 = 11 :=\nbegin\n  have h1 : 15 - 7 = 8, from rfl,\n  have h2 : 8 + 3 = 11, from rfl,\n  rw [h1, h2],\nend', 'If we subtract the number 7 from the number 15 and then add the number 3 to the result, what number do we get?', 'To solve this problem, we first need to subtract 7 from 15, which gives us 8. Then we add 3 to 8, which gives us 11. Therefore, the result of subtracting 7 from 15 and then adding 3 is 11.'), ('import data.real.basic\n\n-- Define the theorem\ntheorem inequality_proof (x : ℝ) (h1 : x > 2) (h2 : x < 5) : 2 < x ∧ x < 5 :=\nbegin\n  -- Apply the conjunction operator to combine the two given hypotheses\n  exact and.intro h1 h2,\nend', 'Let x be a real number. If x > 2 and x < 5, prove that 2 < x < 5.', 'We know from the problem that x > 2 and x < 5. This means x is greater than 2 and less than 5 at the same time. Therefore, we can directly state that 2 < x < 5.'), ("-- Lean does not have built-in support for calculus, so we'll describe the formal proof in a language-agnostic way:\n-- Let f(x) = 400x - 2x^2\n-- The derivative f'(x) = 400 - 4x\n-- Set f'(x) equal to zero and solve for x: 400 - 4x = 0 => x = 100\n-- Substitute x = 100 into the equation for y: y = 400 - 2*100 = 200\n-- The maximum area is achieved with a width of 100 feet and a length of 200 feet.", 'A farmer has 400 feet of fencing and wants to create a rectangular pen for her animals. She wants to use one side of her barn as one side of the pen, so she only needs to fence three sides. What are the dimensions of the rectangle that will give the largest area?', "To solve this problem, we can use calculus. We know the perimeter of the rectangle is 400 feet. Let's denote the width of the rectangle as x and the length as y. Since the farmer is using one side of her barn as one of the sides of the rectangle, we have the equation for the perimeter as 2x + y = 400. Solving for y, we get y = 400 - 2x. \n\nNow, we know the area of a rectangle is given by the product of its length and width. So, the area A = xy = x(400 - 2x) = 400x - 2x^2. \n\nTo find the maximum area, we need to find the derivative of the area with respect to x, and set it equal to zero. The derivative of 400x - 2x^2 is 400 - 4x. Setting this equal to zero gives x = 100. \n\nSubstituting x = 100 back into the equation for y gives y = 400 - 2(100) = 200. \n\nSo, the dimensions that will give the largest area are a width of 100 feet and a length of 200 feet."), ('import data.real.basic\n\n-- The sum of the measures of the angles in a triangle is 180 degrees\ndef triangle_angle_sum := ∀ (A B C : ℝ), A + B + C = 180\n\n-- Given measures for Angle A and Angle B\ndef A : ℝ := 45\ndef B : ℝ := 90\n\n-- We can calculate Angle C\ndef C := 180 - (A + B)\n\n#eval C  -- Returns 45: ℝ', 'In a triangle, there are angles A, B, and C. Angle A = 45 degrees, Angle B = 90 degrees. What is the measure of Angle C?', 'A triangle has three angles, and the sum of the measures of these angles is always 180 degrees. This is a basic property of a triangle. Given that Angle A is 45 degrees and Angle B is 90 degrees, we can add these two measures together to get 135 degrees. To find the measure of Angle C, we subtract the sum of Angle A and Angle B from 180 degrees. So, 180 - 135 = 45. Therefore, Angle C is 45 degrees.'), ('open nat\n\n-- define the initial number of apples Sam has\ndef sam_apples_init : ℕ := 3\n\n-- define the number of apples Sally gives to Sam\ndef sally_apples : ℕ := 2\n\n-- define the number of apples Sam eats\ndef sam_apples_eaten : ℕ := 1\n\n-- calculate the final number of apples Sam has\ndef sam_apples_final : ℕ := sam_apples_init + sally_apples - sam_apples_eaten\n\n-- prove that Sam has 4 apples at the end\nexample : sam_apples_final = 4 :=\nbegin\n  -- unfold the definition of sam_apples_final\n  unfold sam_apples_final,\n\n  -- replace the variables with their definitions\n  change sam_apples_init + sally_apples - sam_apples_eaten with 3 + 2 - 1,\n\n  -- now the goal is obvious, use the `refl` tactic to finish the proof\n  refl,\nend', 'John has 150 marbles. His best friend, Tom, gives him 78 more marbles for his birthday, but unfortunately, he loses 23 marbles while playing. How many marbles does John have now? Also, round the final answer to the nearest tens place.', "To solve this problem, we have to do addition and subtraction. First, we add the marbles John initially had and the marbles Tom gave him. That's 150 + 78 = 228 marbles. But then John loses some marbles, so we have to subtract those. That's 228 - 23 = 205 marbles. For the second part of the question, we need to round 205 to the nearest tens place. The number in the tens place is 0, and the number in the ones place is 5. Since 5 is equal to or greater than 5, we round up. So, 205 rounded to the nearest tens place is 210."), ("import data.real.basic\n\n-- Let's define our variables\ndef johns_savings := (5 : ℝ) * 4\ndef marys_savings := (10 : ℝ) * 4\ndef total_savings := (60 : ℝ)\n\n-- The money Mary lost\ndef mary_lost := johns_savings + marys_savings - total_savings\n\n-- Checking the amount of money Mary lost\n#eval mary_lost -- This will return 0.0, which means Mary lost $0.", 'John and his sister Mary are saving money to buy a new computer game. John saves $5 each week, and Mary saves $10 each week. After 4 weeks, they together saved $60. However, Mary lost some money. How much money did Mary lose?', "Let's denote the money Mary lost as 'x'. The total amount of money John saved is $5/week * 4 weeks = $20. The amount Mary saved before losing some money is $10/week * 4 weeks = $40. According to the problem, the total amount they saved together after Mary lost some money is $60. So, we can set up the equation: $20 (John's saving) + $40 (Mary's saving) - x (money Mary lost) = $60. Solving this equation, we find that Mary lost $0."), ('import data.real.basic\n\nopen real \n\n-- proof that 2^3 = 8, 2^4 = 16, and 2^5 = 32\nexample : (2^3 = 8) ∧ (2^4 = 16) ∧ (2^5 = 32) :=\nbegin\n  split,\n  { norm_num },\n  split,\n  { norm_num },\n  { norm_num },\nend\n\n-- proof that the total number of books read is 152\nexample : 5 * 2^3 + 3 * 2^4 + 2 * 2^5 = 152 :=\nbegin\n  norm_num,\nend', 'Sarah conducted a survey in her class to find out how many books each student read during the summer. She found that 5 students read 2^3 books, 3 students read 2^4 books, and 2 students read 2^5 books. How many books were read by the students in total?', 'To find the total number of books read by the students, we should multiply the number of books each student read by the number of students, and then sum all the results. \n\nFirst, we know 2^3 equals 8, 2^4 equals 16, and 2^5 equals 32 based on the rules of exponents. \n\nTherefore, the total number of books read by the 5 students who read 2^3 books is 5*8=40. \n\nThe total number of books read by the 3 students who read 2^4 books is 3*16=48. \n\nAnd the total number of books read by the 2 students who read 2^5 books is 2*32=64.\n\nAdding all these results together, we get 40+48+64=152. \n\nSo, the students read 152 books in total.'), ('def sum_of_students : ℕ :=\nlet apple_lovers := 50 in\nlet banana_lovers := 30 in\nlet orange_lovers := 20 in\nlet pear_lovers := 10 in\napple_lovers + banana_lovers + orange_lovers + pear_lovers\n\n#eval sum_of_students  -- returns 110', "Sam conducted a survey in his school to find out the favorite fruit of the students. He found that 50 students like apples, 30 students like bananas, 20 students like oranges and 10 students like pears. What is the total number of students in Sam's school based on his survey?", "We can find the total number of students in Sam's school by adding the number of students who like each type of fruit. \nTherefore, the total number of students is 50 (who like apples) + 30 (who like bananas) + 20 (who like oranges) + 10 (who like pears) = 110 students."), ('import data.real.basic\n\n-- defining the lengths of the sides of the rectangle\ndef length : ℝ := 5\ndef width : ℝ := 3\n\n-- defining the function to calculate the perimeter of a rectangle\ndef perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- calculating the perimeter\n#eval perimeter length width  -- this will return 16', 'Bob has a rectangular garden measuring 5 meters in length and 3 meters in width. He wants to build a fence around the garden. How many meters of fence material does Bob need?', 'The perimeter of a rectangle is calculated by adding the lengths of all its sides. In this case, the rectangle has two sides of length 5 meters and two sides of length 3 meters. So, the total length of the fence that Bob needs is 5 meters + 5 meters + 3 meters + 3 meters = 16 meters.'), ('import data.real.basic\n\nvariables (x1 y1 x2 y2 : ℝ)\n\n-- defining the reflection in x-axis\ndef reflect_in_x_axis (x1 y1 x2 y2 : ℝ) := x1 = x2 ∧ y1 = -y2\n\ntheorem reflection_in_x_axis (h : reflect_in_x_axis x1 y1 x2 y2) : x1 = x2 ∧ y1 = -y2 :=\nbegin\n  exact h\nend', "Let's suppose that in the xy-plane, point A with coordinates (x1, y1) is reflected in the x-axis to get point B. If the coordinates of point B are (x2, y2), prove that x1=x2 and y1=-y2.", 'The reflection of a point across the x-axis involves changing the sign of the y-coordinate while keeping the x-coordinate the same. Therefore, given a point A with coordinates (x1, y1), its reflection B will have coordinates (x1, -y1). According to the problem, B has coordinates (x2, y2). Thus, it must be that x1=x2 and -y1=y2, or in other words, y1=-y2.'), ('variables (j : ℕ) -- j is the number of apples John has\n\n-- The number of apples Mary has is represented by j + 5\ndef number_of_apples_Mary_has : ℕ := j + 5', 'Mary has 5 more apples than John. If John has `j` apples, write an algebraic expression for the number of apples Mary has.', 'To represent the number of apples Mary has in terms of the number of apples John has, we can use an algebraic expression. Since Mary has 5 more apples than John, we can represent this as `j + 5`. Here, `j` represents the number of apples John has, and `+ 5` represents the 5 additional apples that Mary has.'), ("import data.real.basic\n\n-- let's represent the areas as real numbers\nnoncomputable def garden_area := (3 : ℝ) / 4\nnoncomputable def flower_bed_area := (1 : ℝ) / 2\n\n-- the area not covered by the flower bed is the difference between the total garden area and the flower bed area\nnoncomputable def remaining_area := garden_area - flower_bed_area\n\n-- check if the remaining_area is equal to 1/4\n#eval remaining_area = 1/4", 'Jane has a rectangular garden that measures 3/4 of an acre in area. She wants to create a rectangular flower bed within the garden that will take up 1/2 of an acre. If she does this, how much of the garden will not be covered by the flower bed?', "The area of Jane's garden is 3/4 of an acre. If she creates a flower bed that takes up 1/2 of an acre, the remaining area of the garden can be found by subtracting the area of the flower bed from the total area of the garden. \n\nSo, 3/4 (the total area of the garden) minus 1/2 (the area of the flower bed) equals 1/4. Therefore, 1/4 of an acre of the garden will not be covered by the flower bed."), ('import data.real.basic\n\n-- defining the equation\ndef equation (x : ℝ) : ℝ := 3 * x - 2\n\n-- stating and proving the theorem\ntheorem point_on_line : equation 3 = 7 :=\nbegin\n  unfold equation, -- simplifying the equation\n  norm_num, -- simplifying the numerical computation\nend', 'Given a linear equation in the slope-intercept form, y = mx + b, where m is the slope and b is the y-intercept. If we have an equation y = 3x - 2 and a point (3, 7) on the graph of this equation, prove that the point satisfies the equation.', 'To check if a point lies on the line represented by an equation, we can substitute the x and y values of the point into the equation. \n\nHere, we have y = 3x - 2 and the point is (3, 7). Substituting x = 3 into the equation, we get y = 3*3 - 2 = 7. So, when x = 3, y = 7. \n\nTherefore, the point (3, 7) lies on the line represented by the equation y = 3x - 2.'), ('import linear_algebra.basic\n\nvariables (R : Type*) (M : Type*) [comm_ring R] [add_comm_group M] [module R M]\nvariables (c : R) (v : M) (A : M →ₗ[R] M)\n\nexample : A (c • v) = c • (A v) := \nbegin\n  rw linear_map.map_smul,\nend', 'Prove that the transformation of a scalar multiple of a vector by a matrix is the same as the scalar multiple of the transformation of the vector by the same matrix. More formally, for any real number c, vector v, and matrix A, prove that A(cv) = c(Av).', 'To prove this, we can multiply the matrix A with the scalar multiple cv. According to the properties of matrix multiplication, we can distribute the scalar c across the elements of the matrix, giving us c(Av). Hence, A(cv) = c(Av).'), ('import linear_algebra.basic\n\nvariables (R : Type*) (M : Type*)\nvariables [ring R] [add_comm_group M] [module R M]\nvariables (f g : M →ₗ[R] M)\n\nlemma comp_is_linear (x y : M) (c : R) : \n  (f.comp g) (c • x + y) = c • (f.comp g) x + (f.comp g) y :=\nbegin\n  rw linear_map.map_add,\n  rw linear_map.map_smul,\nend', 'Prove that the composition of two linear transformations is also a linear transformation.', "Let's consider two linear transformations represented by matrices A and B. We can represent a linear transformation as a matrix multiplication operation. Suppose we have two transformations f represented by matrix A and g represented by matrix B. The composition of these transformations, let's call it h, can be represented as h(x) = f(g(x)) which is equivalent to h(x) = A*(B*x).\n\nTo prove that h is also a linear transformation, we need to show that it satisfies the properties of additivity and scalar multiplication. \n\n1. Additivity: h(x + y) = A*(B*(x + y)) = A*(B*x + B*y) = A*B*x + A*B*y = h(x) + h(y)\n2. Scalar multiplication: h(c*x) = A*(B*(c*x)) = A*(c*B*x) = c*A*B*x = c*h(x)\n\nAs h(x) satisfies both the properties of additivity and scalar multiplication, the composition of two linear transformations is also a linear transformation."), ('def number_of_books (students : ℕ) (books : ℕ) : ℕ := students * books\ndef remaining_books (total : ℕ) (removed : ℕ) : ℕ := total - removed\n\nexample : remaining_books (number_of_books 25 4) 13 = 87 :=\nbegin\n  have h1 : number_of_books 25 4 = 100, by refl,\n  have h2 : remaining_books 100 13 = 87, by refl,\n  rw [h1],\n  exact h2,\nend', 'If a class of 25 students each brings 4 books to school, how many books are there in total? If 13 of these books are then removed from the class, how many books are left?', 'First, we multiply the number of students by the number of books each student brings. This gives us 25 * 4 = 100 books in total. Then, we subtract the number of books that were removed. This gives us 100 - 13 = 87 books left.'), ('import data.real.basic\n\n-- defining a function to calculate length of the ladder\ndef ladder_length (base : ℝ) (height : ℝ) : ℝ := \n  (base^2 + height^2)^(1/2)\n\n-- testing the function with given values\n#eval ladder_length 7 24\n-- output: 25', 'A ladder is leaning against a wall, forming a right triangle. The ladder touches the ground 7 feet away from the wall and the top of the ladder reaches 24 feet high on the wall. What is the length of the ladder?', 'We can solve this problem using the Pythagorean Theorem, which states that in any right triangle, the square of the length of the hypotenuse (the side opposite the right angle) is equal to the sum of the squares of the lengths of the other two sides. \n\nHere, the ladder forms the hypotenuse of the right triangle, the distance from the wall to the base of the ladder is one side of the triangle (7 feet), and the height from the ground to the top of the ladder is the other side (24 feet). \n\nSo, the length of the ladder can be calculated as follows:\n\nLength of the ladder = sqrt((7^2) + (24^2)) = sqrt(49 + 576) = sqrt(625) = 25 feet\n\nSo, the length of the ladder is 25 feet.'), ('def apples_after_giving := nat.sub 350 123\ndef total_apples := nat.add apples_after_giving 278\n\nexample : total_apples = 505 := \nbegin\n  unfold total_apples,\n  unfold apples_after_giving,\n  exact dec_trivial,\nend', "Let's assume that John has 350 apples and he gives 123 apples to his friend. Then, he found 278 apples in the park. How many apples does John have in the end?", 'To find out how many apples John has in the end, we need to subtract the apples he gave to his friend from the apples he had at first, and then add the apples he found in the park. Initially, John has 350 apples. After giving his friend 123 apples, he would have 350 - 123 = 227 apples. Then, when John found 278 apples in the park, his total number of apples becomes 227 + 278 = 505 apples. So, John has 505 apples in the end.'), ('theorem mul_one (m : ℕ) : m * 1 = m :=\nbegin\n  exact nat.mul_one m,\nend', 'If we multiply any given number by 1, does the product remain the same as the given number?', 'Yes, the product remains the same as the given number. This is because the multiplication property of one states that any number multiplied by 1 stays the same. For instance, if we have a number like 7 and we multiply it by 1, the result is still 7. This holds true for any number we choose, not just 7.'), ('import data.real.basic\n\n-- defining a function to calculate the volume of a cube\ndef volume_of_cube (side_length : ℝ) : ℝ := side_length^3\n\n-- defining the original side length of the cube\ndef original_side_length : ℝ := 4\n\n-- calculating the original volume of the cube\ndef original_volume : ℝ := volume_of_cube original_side_length -- should be 64\n\n-- defining the scaling factor\ndef scale_factor : ℝ := 2\n\n-- calculating the new side length after scaling\ndef new_side_length : ℝ := original_side_length * scale_factor -- should be 8\n\n-- calculating the new volume of the cube after scaling\ndef new_volume : ℝ := volume_of_cube new_side_length -- should be 512\n\nexample : new_volume = 512 := \nbegin \n    unfold new_volume, \n    unfold volume_of_cube, \n    unfold new_side_length, \n    unfold original_side_length, \n    unfold scale_factor, \n    norm_num, \nend', 'A cube has a side length of 4 cm. If we scale the cube by a factor of 2, what will be the volume of the new cube?', 'The volume of a cube is calculated by cubing the length of one side. Therefore, the volume of the original cube is 4^3 = 64 cm^3. \n\nWhen we scale the cube by a factor of 2, the side length of the cube becomes 2*4 = 8 cm. Therefore, the volume of the new cube is 8^3 = 512 cm^3.'), ('import data.nat.pow\n\ndef value_of_digit (n : ℕ) (d : ℕ) : ℕ :=\n  if h : d < nat.size n then\n    (n / 10^d) % 10\n  else 0\n\ndef problem : ℕ :=\n  value_of_digit 538 1 * 10', 'Given a three-digit number 538, what is the value of the digit in the tens place?', 'In the number 538, the digit 3 is in the tens place. The value of a digit in the tens place is ten times its face value. Therefore, the value of the digit 3 in this number is 3 * 10 = 30.'), ('import data.int.basic\n\ntheorem mul_comm_of_pow : ∀ (a b : ℕ), a = 3^2 → b = 2^3 → a * b = 2^3 * 3^2 :=\nbegin\n  intros a b ha hb,\n  rw [ha, hb],\n  apply mul_comm\nend', 'Suppose that a and b are two integers and a = 3^2 and b = 2^3. Prove that a*b = 2^3*3^2.', 'Given that a and b are integers, and a = 3^2 and b = 2^3. \n\nWe know that multiplication is commutative, which means the order in which integers are multiplied does not change the result. \n\nSo, a*b = 3^2*2^3 = 2^3*3^2.\n\nTherefore, a*b is equal to 2^3*3^2.'), ('import data.real.basic\n\n-- Defining the problem\nnoncomputable def john_money : ℝ := 1.2\nnoncomputable def mary_money : ℝ := 0.8\n\n-- Proof of the solution\nexample : john_money + mary_money = 2.0 :=\nbegin\n  -- Calculation\n  rw john_money,\n  rw mary_money,\n  norm_num,\nend', 'John has 1.2 dollars and Mary gives him 0.8 dollars. How many dollars does John have now?', 'We can solve this problem by adding the two decimal numbers together. The number 1.2 means 1 whole and 2 tenths, and the number 0.8 means 8 tenths. If we add these together, we get 1 whole and 10 tenths, which is equal to 2.0 dollars.'), ('def john_marbles := 370\ndef mary_marbles := 625\ndef marbles_transferred := 150\n\n#check john_marbles - marbles_transferred  -- This will return 220\n#check mary_marbles + marbles_transferred  -- This will return 775', 'John has 370 marbles and Mary has 625 marbles. If John gives 150 marbles to Mary, how many marbles does each of them have?', "First, let's calculate how many marbles John will have after he gives 150 marbles to Mary. We can do this by subtracting 150 from 370 which gives us 220 marbles. \n\nNext, let's calculate how many marbles Mary will have after she receives 150 marbles from John. We can do this by adding 150 to 625 which gives us 775 marbles. \n\nSo, John has 220 marbles and Mary has 775 marbles."), ('import data.real.basic\n\n-- defining a function for the area of a rectangle\ndef rectangle_area (length width : ℝ) : ℝ :=\nlength * width\n\n-- defining the specific length and width\ndef length : ℝ := 15\ndef width : ℝ := 10\n\n-- proving that the area is 150\nexample : rectangle_area length width = 150 :=\nbegin\n  unfold rectangle_area,\n  unfold length,\n  unfold width,\n  norm_num,\nend', 'A rectangle has a length of 15 units and a width of 10 units. What is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying its length by its width. Given that the length of the rectangle is 15 units and the width is 10 units, we multiply these two measurements together to get the area. Therefore, the area of the rectangle is 150 square units.'), ('open nat\n\nexample : (5 - 3) + 2 = 4 :=\nbegin\n  have h1 : 5 - 3 = 2, from rfl,\n  have h2 : 2 + 2 = 4, from rfl,\n  rw [h1, h2],\nend', 'If a child has 5 apples and she eats 3, then she gets 2 more apples from her friend, how many apples does she have now?', 'Firstly, we subtract the number of apples the child eaten from the original number of apples she had. So, 5 (original apples) - 3 (eaten apples) = 2 apples.\nThen, we add the number of apples she gets from her friend to the number of apples she has after eating. So, 2 (current apples) + 2 (apples from friend) = 4 apples.\nTherefore, the child has 4 apples now.'), ('def calculate_cards (total_cards : ℕ) (percent_sold : ℕ) (percent_bought_back : ℕ) : ℕ :=\n  let cards_sold := total_cards * percent_sold / 100 in\n  let cards_after_selling := total_cards - cards_sold in\n  let cards_bought_back := cards_sold * percent_bought_back / 100 in\n  cards_after_selling + cards_bought_back\n\n#eval calculate_cards 120 35 50  -- Output: 99', 'John has a collection of 120 baseball cards. He decides to sell 35% of his collection to his best friend, Mike. After a few days, John realizes he sold too much of his collection and wants to buy back some cards from Mike. He buys back 50% of what he sold. How many cards does John have now?', 'First, we need to calculate how many cards John sold to Mike. 35% of 120 cards is 42 cards. So John was left with 120 - 42 = 78 cards after selling to Mike. \n\nThen, John bought back 50% of the cards he sold to Mike. 50% of 42 cards is 21 cards. So, John added 21 cards to his collection. \n\nFinally, we add the number of cards John had left after selling and the number of cards he bought back. The total number of cards John has now is 78 + 21 = 99 cards.'), ('def volume_of_rectangular_prism (length : ℕ) (width : ℕ) (height : ℕ) : ℕ :=\nlength * width * height\n\n#eval volume_of_rectangular_prism 6 3 4\n-- Output: 72', 'Given a rectangular prism with length = 6 units, width = 3 units, and height = 4 units, what is the volume of the prism?', 'The volume of a rectangular prism can be calculated by multiplying the length, width, and height. In this case, the volume is 6 units * 3 units * 4 units = 72 cubic units.'), ('def johns_apples : ℕ := 4\ndef marys_apples : ℕ := 2 * johns_apples\ndef total_apples : ℕ := johns_apples + marys_apples\n\nexample : total_apples = 12 :=\nbegin\n  unfold total_apples,\n  unfold johns_apples marys_apples,\n  -- apply the arithmetic calculation directly\n  apply eq.refl,\nend', 'John has 4 apples, and Mary has twice as many apples as John. How many apples do John and Mary have together?', "First, we need to find out how many apples Mary has. Since Mary has twice as many apples as John, and John has 4 apples, Mary has 2 * 4 = 8 apples. \nNext, we add the number of apples John has to the number of apples Mary has to find the total number of apples. So, 4 (John's apples) + 8 (Mary's apples) = 12 apples. Thus, John and Mary together have 12 apples."), ('-- defining constants\ndef garden_length := 5\ndef garden_width := 3\n\n-- defining the function for perimeter of a rectangle\ndef rectangle_perimeter (length width : ℕ) : ℕ := 2 * (length + width)\n\n-- calculating the perimeter\n#eval rectangle_perimeter garden_length garden_width \n-- output: 16', 'Johnny has a rectangular garden. The length of the garden is 5 meters and the width is 3 meters. He plans to build a fence around the garden. How many meters of fence does he need to buy?', 'To find out the total length of the fence Johnny needs to buy, we have to calculate the perimeter of the garden. The formula for the perimeter of a rectangle is 2*(length + width). Substituting the given values, we have 2*(5m + 3m) = 2*8m = 16m. Therefore, Johnny needs to buy 16 meters of fence.'), ('import data.real.basic\n\n-- define the variables\nvariables (a b : ℝ)\n\n-- state the theorem\ntheorem algebraic_expression (h1 : a = 0.5) (h2 : b = 1/2) : 2*a + 3*b = 2.5 :=\nbegin\n  -- substitute the values of a and b\n  rw [h1, h2],\n  -- simplify the expression\n  norm_num,\nend', 'If a = 0.5 and b = 1/2, prove that the algebraic expression 2a + 3b is equal to 2.', 'We can substitute the values of a and b into the algebraic expression. Substituting a = 0.5 and b = 1/2 gives us 2*0.5 + 3*1/2. Using the rules of multiplication, 2*0.5 equals 1 and 3*1/2 equals 1.5. Adding these two results together gives us 2.5. Therefore, 2a + 3b equals 2.5, not 2, so the original statement is incorrect.'), ('import data.real.basic\n\ndef line (x : ℝ) : ℝ := 3*x + 2\n\nexample : = 2 := by simp [line]\n\nexample (x : ℝ) : line (x+1) - line x = 3 :=\nbegin\n  unfold line,\n  simp,\n  ring,\nend', 'Given a line with the equation y = 3x + 2, find the slope of the line and the y-intercept.', 'The equation of a line is given in the form y = mx + b, where m is the slope of the line and b is the y-intercept. In the given equation y = 3x + 2, comparing it with the standard equation, we can see that the slope of the line, m, is 3 and the y-intercept, b, is 2.'), ('import data.nat.prime\n\nopen nat \n\n-- define the prime factors\ndef prime_factors_20 : list ℕ := [2, 2, 5]\ndef prime_factors_15 : list ℕ := [3, 5]\n\n-- calculate the area of the rectangle\ndef area_rectangle : ℕ := list.prod (prime_factors_20 ++ prime_factors_15)\n\n-- prove that the area of the rectangle is 300\nexample : area_rectangle = 300 :=\nbegin\n  unfold area_rectangle,\n  unfold prime_factors_20,\n  unfold prime_factors_15,\n  simp,\n  refl,\nend', "Let's consider a rectangle with length 20 units and width 15 units. Decompose these lengths into their prime factors. Then, using these prime factors, find the area of the rectangle.", 'The prime factors of 20 are 2, 2, and 5. The prime factors of 15 are 3 and 5. \n\nTo find the area of the rectangle, we multiply its length by its width. In this case, that means multiplying the prime factors of 20 by the prime factors of 15. This results in 2 * 2 * 5 * 3 * 5 = 300. \n\nTherefore, the area of the rectangle is 300 square units.'), ('import data.real.basic\n\n-- `is_eqv` is a relation between two fractions a/b and c/d, defined as a*d = b*c (cross multiplication).\ndef is_eqv (a b c d : ℚ) : Prop := a*d = b*c\n\n-- our goal is to prove 3/4 and 6/8 are equivalent fractions.\nexample : is_eqv 3 4 6 8 :=\nbegin\n  -- by definition of `is_eqv`, we need to show 3*8 = 4*6.\n  unfold is_eqv,\n  -- simplifying both sides, we get 24 = 24, which is obviously true.\n  norm_num,\nend', 'Given two fractions 3/4 and 6/8, are they equivalent?', 'Two fractions are equivalent if they represent the same quantity. When we simplify the fraction 6/8, we divide the numerator and the denominator by their greatest common divisor, which is 2, and we get 3/4. Hence, 3/4 and 6/8 are equivalent fractions.'), ('import data.real.basic\n\n-- Given data\ndef OR := 1.5\ndef P_MT := OR / (1 + OR)\n\n-- Corrected Proof\nexample : P_MT = 0.6 :=\nbegin\n  unfold P_MT OR,\n  norm_num,\nend', "In a survey conducted at a high school, it was found that the proportion of students who like math is 75%. A student randomly selected from the school is more likely to like math if his/her schedule includes a trigonometry class. Specifically, the odds ratio for a student liking math given they take a trigonometry class is 1.5. \n\nLet's denote the probability of a student liking math given they take a trigonometry class as P(M|T). \n\nUsing the definition of odds ratio (OR = P(M|T) / (1 - P(M|T)), find the value of P(M|T).", 'We know the definition of odds ratio is OR = P(M|T) / (1 - P(M|T)), where P(M|T) is the probability of a student liking math given they are in a trigonometry class.\n\nBy substituting the given odds ratio of 1.5 into the formula, we get:\n\n1.5 = P(M|T) / (1 - P(M|T))\n\nSolving this equation for P(M|T), we get:\n\nP(M|T) = 1.5 * (1 - P(M|T))\n\nExpanding this gives:\n\nP(M|T) = 1.5 - 1.5 * P(M|T)\n\nRe-arranging terms, we get:\n\n2.5 * P(M|T) = 1.5\n\nFinally, solving for P(M|T), we get:\n\nP(M|T) = 1.5 / 2.5 = 0.6\n\nSo, the probability of a student liking math given they take a trigonometry class is 0.6 or 60%.'), ('import data.real.basic\n\n-- Defining the given values in the problem\nnoncomputable def sin_theta := (3 : ℝ) / 5\nnoncomputable def hypotenuse := (10 : ℝ)\n\n-- Defining the length of the opposite side as a variable\nnoncomputable def opposite_side : ℝ := sin_theta * hypotenuse\n\n-- Checking the value of the opposite side\n#check opposite_side  -- Returns ℝ', 'A right-angled triangle has an angle θ, where sin θ = 3/5. If the hypotenuse of the triangle is 10 units long, what is the length of the side opposite to the angle θ?', "We know that sine of an angle in a right-angled triangle is defined as the ratio of the opposite side to the hypotenuse. Given that sin θ = 3/5, we can set up the ratio as follows:\n \nOpposite side / Hypotenuse = 3/5\n\nWe're also given that the length of the hypotenuse is 10 units. Substituting this into our equation gives us:\n\nOpposite side / 10 = 3/5\n\nSolving this equation for the opposite side gives us a length of 6 units."), ("import data.real.basic\n\nnoncomputable def C : ℝ → ℝ := λ x, 5000 + 10*x - 0.02*x^2\nnoncomputable def C' : ℝ → ℝ := λ x, 10 - 0.04*x\n\nexample : C' 200 = 2 :=\nbegin\n  unfold C',\n  norm_num,\nend", 'A company has found that the cost of producing x units of a new product is given by C(x) = 5000 + 10x - 0.02x^2 dollars. Find the rate at which the cost is changing when 200 units are produced.', "First, we need to find the derivative of the cost function C(x) to determine the rate at which the cost is changing with respect to the number of units produced. The derivative of C(x) is C'(x) = 10 - 0.04x. \n\nNext, we substitute the given value, x = 200, into the derived function to find the rate of change at this point. \n\nSo, C'(200) = 10 - 0.04*200 = 2.\n\nTherefore, the rate at which the cost is changing when 200 units are produced is $2 per unit."), ("import data.real.basic\n\n-- Let's denote the total score as `total_score`, \n-- the number of students who took the test as `num_students`, \n-- the score of the absent student (mistakenly entered) as `absent_score`, \n-- the correct average as `correct_avg`.\n\ndef total_score := 85*40\ndef num_students := 40-1\ndef absent_score := 0\ndef correct_avg := (total_score - absent_score) / num_students\n\n#eval correct_avg  -- This will return `87.17948717948718`, \n                    -- which is approximately `87.18`.", "A class of 40 students took a math test. The average score of the test was 85. The teacher realizes that one student was absent, and their score was mistakenly entered as 0, which brought down the average. What should the average have been if the absent student's score was not included?", "The total score of the class with the absent student's score included is 85*40 = 3400. But since the absent student's score was mistakenly entered as 0, we have to subtract this from the total, which leaves us with 3400-0 = 3400. \n\nThe number of students who actually took the test is 40-1 = 39. So the correct average should be the total score divided by the number of students who took the test, which is 3400/39 ≈ 87.18."), ('import data.real.basic\n\ntheorem expression_result : ∀ (a b : ℝ), a < 0 ∧ b > 0 → ((-a)^2)/b > 0 :=\nbegin\n  intros a b h,\n  have h1: (-a)^2 > 0, { \n    apply pow_two_pos_of_ne_zero, \n    linarith, \n  },\n  have h2: b > 0, {\n    exact h.right,\n  },\n  apply div_pos h1 h2,\nend', 'If a is a negative number and b is a positive number, then what is the result of the expression ((-a)^2)/b?', 'Given a is a negative number and b is a positive number. Firstly, the square of any number (including negative numbers), is always positive. So, (-a)^2 is positive. Secondly, when a positive number is divided by another positive number, the result is also a positive number. Therefore, the result of the expression ((-a)^2)/b is positive.'), ('import data.real.basic\n\n-- Set up the proof\nlemma problem (a b : ℝ) (h1 : a = (10^3 : ℝ)) (h2 : b = (10^2 : ℝ)) : a + b = 1100 :=\nbegin\n  -- Substitute in the given values\n  rw h1,\n  rw h2,\n  -- Simplify the calculation\n  norm_num,\nend', 'If a = 10^3 and b = 10^2, what is the value of a + b?', 'Given that a = 10^3, a is 1000. Similarly, given that b = 10^2, b is 100. To find the value of a + b, we simply add these two values together. Therefore, a + b is 1000 + 100 = 1100.'), ("-- Lean does not currently have a library for polynomial functions or their properties, so it's not possible to express this proof formally in Lean. However, the logic of the proof is mathematically sound.", "Let's consider the polynomial function f(x) = 2x^3 - 3x^2 + x - 1. \n\na) What is the degree of this polynomial? \n\nb) How many x-intercepts could this polynomial have? \n\nc) How many turning points could this polynomial have?", 'a) The degree of a polynomial is the highest power of x in its expression. In this case, the highest power of x in the polynomial 2x^3 - 3x^2 + x - 1 is 3. Therefore, the degree of the polynomial is 3.\n\nb) The number of x-intercepts of a polynomial can be at most equal to its degree. Therefore, this polynomial could have at most 3 x-intercepts.\n\nc) The number of turning points a polynomial can have is at most one less than its degree. Therefore, this polynomial could have at most 2 turning points.'), ('import data.real.basic\n\ndef dot_product (u v : ℝ × ℝ × ℝ) : ℝ := u.1 * v.1 + u.2.1 * v.2.1 + u.2.2 * v.2.2\n\nexample : dot_product (2, 3, 4) (5, 6, 7) = 56 :=\nbegin\n  unfold dot_product,\n  simp,\n  norm_num,\nend', 'Consider two vectors `u` and `v` in a three-dimensional Euclidean space R^3, where `u` = (2, 3, 4) and `v` = (5, 6, 7). Compute the dot product of `u` and `v`.', 'The dot product of two vectors `u` = (u1, u2, u3) and `v` = (v1, v2, v3) is defined as `u . v` = u1v1 + u2v2 + u3v3. Using this formula, we can substitute the values of `u` and `v` given in the problem to find the dot product.\n\nSo, `u . v` = (2 * 5) + (3 * 6) + (4 * 7) = 10 + 18 + 28 = 56.'), ('open nat\n\n-- defining the initial number of apples John has\ndef john_initial_apples : ℕ := 7\n\n-- defining the number of apples Mary gives John\ndef mary_apples : ℕ := 3\n\n-- defining the number of apples John has left\ndef john_left_apples : ℕ := 6\n\n-- defining the total number of apples John had\ndef total_apples : ℕ := john_initial_apples + mary_apples\n\n-- proving that John ate 4 apples\nexample : total_apples - john_left_apples = 4 :=\nbegin\n  -- simplifying the left-hand side of the equation\n  rw [total_apples, john_left_apples],\n  -- after the substitution, the equation becomes 10 - 6 = 4\n  -- which is obviously true in natural numbers\n  exact dec_trivial,\nend', 'John has 7 apples and his friend, Mary, gives him 3 more. After eating a few, John finds out he has 6 apples left. How many apples did John eat?', 'First, we add the initial amount of apples John has (7) to the number of apples he got from Mary (3). This gives us 10 apples. Then, to find out how many apples John ate, we subtract the number of apples John has left (6) from the total number of apples he had (10). Therefore, John ate 4 apples.'), ('def rectangle_area (length width : ℕ) : ℕ := length * width\n\ndef test : rectangle_area 6 4 = 24 :=\nbegin\n  unfold rectangle_area, \n  rw nat.mul_comm,\n  exact dec_trivial,\nend', 'Peter has a rectangular garden that is 6 meters long and 4 meters wide. He wants to plant flowers in the entire garden. How many square meters of the garden will be covered by flowers?', "The area of a rectangle is calculated by multiplying its length by its width. In this case, Peter's garden is a rectangle that is 6 meters long and 4 meters wide. Therefore, the area of the garden is 6 meters * 4 meters = 24 square meters. Hence, 24 square meters of the garden will be covered by flowers."), ('def water_needed : ℤ := -5 + 3\n#eval water_needed', "John has a container that can hold -5 liters of water. He then pours in 3 liters of water. How much water does he need to reach the container's capacity?", "We are given that the container holds -5 liters of water, which represents the empty space in the container. John pours in 3 liters of water. So, the remaining space would be -5 + 3 = -2 liters, which is the amount of water required to reach the container's capacity. So, John needs 2 more liters of water to fill the container to capacity."), ('import data.int.parity \n\ntheorem even_plus_odd_is_odd (a b : ℤ) (h₁ : a % 2 = 0) (h₂ : b % 2 = 1) : (a + b) % 2 = 1 :=\nbegin\n  rw [int.add_mod, h₁, h₂],\n  simp,\n  exact dec_trivial,\nend', 'Prove that for any two integers a and b, if a is even and b is odd, then (a+b) is odd.', 'An even number can be written as 2n (where n is an integer), and an odd number can be written as 2m + 1 (where m is an integer). So, if a is even and b is odd, we can write a as 2n and b as 2m + 1. \n\nTherefore, a + b = 2n + 2m + 1 = 2(n+m) + 1. \n\nSince (n+m) is an integer, we can see that (a+b) is in the form of an odd number, 2p + 1, where p = (n+m). Therefore, we have proved that if a is even and b is odd, then (a+b) is odd.'), ('import data.real.basic\n\n-- defining the function f(x) = x^2\ndef f (x : ℝ) : ℝ := x^2 \n\n-- defining the sum of first n terms of the sequence generated by f(x)\nnoncomputable def S (n : ℕ) : ℝ := (n * (n + 1) * (2 * n + 1)) / 6\n\n-- proof that the sum of the first 10 terms of the sequence generated by f(x) is 385\nexample : S 10 = 385 :=\nbegin\n  unfold S,\n  norm_num,\nend', 'Consider a function f(x) = x^2 for x in the real numbers, and let S_n represent the sum of the first n terms of the sequence generated by f(x). If the sequence starts at x = 1 and increments by 1 at each step, find the value of S_10.', 'The sequence generated by f(x) is {1, 4, 9, 16, ..., 100} for x = {1, 2, 3, 4, ..., 10}. The sum of the first n terms, S_n, of a sequence generated by f(x) = x^2 is given by the formula S_n = n*(n+1)*(2n+1)/6. Therefore, the sum of the first 10 terms, S_10, can be found by substituting n = 10 into this formula, yielding S_10 = 10*(10+1)*(2*10+1)/6 = 385.'), ('import data.real.basic\n\n-- declare a real variable x\nvariables (x : ℝ)\n\n-- declare the function f(x)\ndef f (x : ℝ) : ℝ := x^2 + 6*x + 9\n\n-- prove the theorem\ntheorem nonneg_of_f : f(x) ≥ 0 :=\nbegin\n  -- rewrite f(x) as (x + 3)^2\n  have h₁ : f(x) = (x + 3)^2, by { unfold f, ring },\n  rw h₁,\n  -- use the fact that the square of a real number is nonnegative\n  apply pow_two_nonneg,\nend', 'Let f(x) be a function defined as f(x) = x^2 + 6x + 9 for all real numbers x. Prove that function f(x) is always nonnegative for all real numbers x.', "The function f(x) = x^2 + 6x + 9 can be rewritten as f(x) = (x + 3)^2, because (x + 3)^2 = x^2 + 6x + 9. \n\nNow, for any real number 'x', the square of 'x' (x^2) is always nonnegative. Therefore, (x + 3)^2 is also nonnegative, because the square of any real number is nonnegative. In other words, f(x) is always nonnegative for all real numbers x. \n\nSo, we have proved that the function f(x) = x^2 + 6x + 9 is always nonnegative for all real numbers x."), ('open nat\ndef add : ℕ → ℕ → ℕ \n| n 0     := n \n| n (m+1) := succ (add n m)\n\n#eval add 15 34  -- outputs 49', 'Alice has a number 15. She wants to add another number to it, which is a two-digit number. The tens digit of this number is 3 and the ones digit is 4. What is the sum of the two numbers?', "First, let's understand the place value of the two-digit number. The tens digit is 3 and the ones digit is 4. So, this number is 34. \nNow, let's add the number 15 and 34. The sum is 49."), ("import data.real.basic\n\n-- defining John's ratio\nnoncomputable def johns_ratio : ℝ := 5 / 2\n\n-- defining Mary's ratio\nnoncomputable def marys_ratio : ℝ := 10 / 4\n\n-- proof that John and Mary are using the same ratio\nexample : johns_ratio = marys_ratio :=\nbegin\n  unfold johns_ratio,\n  unfold marys_ratio,\n  norm_num,\nend", 'John and Mary are making lemonade to sell at a lemonade stand. John uses 5 lemons and 2 cups of sugar for every batch of lemonade he makes. Mary uses 10 lemons and 4 cups of sugar for every batch of lemonade she makes. Are John and Mary using lemons and sugar in the same proportion for their lemonade?', "To determine if John and Mary are using lemons and sugar in the same proportion, we need to set up a ratio and simplify it. \n\nJohn's ratio of lemons to sugar is 5 lemons to 2 cups of sugar, or 5/2. \n\nMary's ratio of lemons to sugar is 10 lemons to 4 cups of sugar, or 10/4. \n\nWhen we simplify Mary's ratio, it becomes 2.5, which is the same as John's ratio. \n\nTherefore, John and Mary are using lemons and sugar in the same proportion for their lemonade."), ('import data.real.basic\n\nexample : (7.89 - 3.45 = 4.44) :=\nbegin\n  norm_num,\nend', 'If you subtract 3.45 from 7.89, what would be the result?', 'To solve this problem, we subtract the smaller decimal number from the larger one. We line up the decimals and subtract as we would with whole numbers. \n\nSubtract the hundredths: 9 - 5 = 4.\nNext, subtract the tenths: 8 - 4 = 4.\nFinally, subtract the ones: 7 - 3 = 4.\n\nSo, 7.89 - 3.45 = 4.44.'), ("-- First, we'll define a point in the plane.\nstructure point :=\n(x : ℤ) \n(y : ℤ)\n\n-- A rotation is simply a function from points to points.\ndef rotation := point → point\n\n-- We'll define the 90 degree counterclockwise rotation.\ndef rotate90 : rotation :=\nλ p, ⟨-p.y, p.x⟩\n\n-- Now we can prove that rotating the points gives the correct results.\nexample : rotate90 ⟨2, 2⟩ = ⟨-2, 2⟩ := rfl\nexample : rotate90 ⟨2, 5⟩ = ⟨-5, 2⟩ := rfl\nexample : rotate90 ⟨5, 5⟩ = ⟨-5, 5⟩ := rfl\nexample : rotate90 ⟨5, 2⟩ = ⟨-2, 5⟩ := rfl", "In a coordinate plane, a square ABCD has vertices at A(2, 2), B(2, 5), C(5, 5), and D(5, 2). Square ABCD is then rotated 90 degrees counterclockwise about the origin to form square A'B'C'D'. What are the coordinates of A', B', C', and D'?", "In a counterclockwise rotation of 90 degrees about the origin, the coordinates (x, y) are transformed into (-y, x). Therefore, the transformed coordinates of the square's vertices are as follows:\n\nA'(2, 2) -> A'(-2, 2)\nB'(2, 5) -> B'(-5, 2)\nC'(5, 5) -> C'(-5, 5)\nD'(5, 2) -> D'(-2, 5)"), ("open nat\n\n-- Let's represent the number of apples John originally had, the number of apples he bought, \n-- and the number of apples he gave to his friend as natural numbers\ndef john_apples : ℕ := 5\ndef bought_apples : ℕ := 7\ndef given_apples : ℕ := 3\n\n-- Now, we can calculate the number of apples John has after buying and giving away some\ndef john_apples_now : ℕ := john_apples + bought_apples - given_apples\n\n-- We can see that John now has 9 apples\nexample : john_apples_now = 9 := by refl", 'John has 5 apples and he buys 7 more. After that, he gives 3 apples to his friend. How many apples does John have now?', 'First, we need to find out how many apples John has after he buys more. We do this by adding the 5 apples he originally had to the 7 he bought. This gives us 12 apples. Then, we subtract the 3 apples he gave to his friend from the 12 he had. This results in 9 apples. So, John now has 9 apples.'), ('import data.real.basic\n\ntheorem quadrilateral_is_parallelogram (AB CD AD BC : ℝ) \n(h1 : AB = CD) (h2 : AD = BC) : \nAB = CD ∧ AD = BC :=\nbegin\n   have opposite_sides_equal : AB = CD ∧ AD = BC, from and.intro h1 h2,\n   exact opposite_sides_equal,\nend', 'In a quadrilateral ABCD, if AB = CD and AD = BC, prove that the quadrilateral ABCD is a parallelogram.', 'A quadrilateral is a parallelogram if and only if the opposite sides are equal. In quadrilateral ABCD, given AB = CD and AD = BC, it means the opposite sides of the quadrilateral are equal. Thus, according to the definition of a parallelogram, quadrilateral ABCD is a parallelogram.'), ("import data.real.basic\n\n-- Let's denote the two equations as follows:\n-- eq1: log₂(x) = 5\n-- eq2: logₓ(32) = 2\n\n-- Now, let's rewrite eq1 as 2^5 = x, hence x = 32\ndef eq1_solution : ℝ := 2^5\n\n-- We will check if eq1_solution (which is 32) satisfies eq2.\n-- To do this, we need to rewrite eq2 as x² = 32.\n-- If 32² = 32 (which is not the case), then eq1_solution would satisfy eq2. \ndef check_eq2 (x : ℝ) : Prop := x^2 = 32\n\n-- We can now state that eq1_solution does not satisfy eq2.\ntheorem no_common_solution : ¬ check_eq2 eq1_solution :=\nbegin\n  unfold eq1_solution check_eq2,\n  norm_num,\nend", 'Given the logarithmic equations log₂(x) = 5 and logₓ(32) = 2, find the value of x.', 'To solve these logarithmic equations, you need to remember that log base b of a equals n can be rewritten as bⁿ = a. \n\nFor the first equation log₂(x) = 5, we can rewrite it as 2^5 = x. So, x = 32.\n\nFor the second equation logₓ(32) = 2, we can rewrite it as x² = 32. \n\nNow, we can substitute x = 32 from the first equation into the second equation to check if it holds true. If we substitute x = 32 into x² = 32, we get 32² = 1024, not 32. So, we know there is no solution to the second equation given x = 32 from the first equation. \n\nThus, there is no value of x that satisfies both equations simultaneously.'), ('def johns_money (x : ℕ) : ℕ := 2*x + 15', 'John has $15 more dollars than twice what his friend Bob has. Let "x" represent the amount of money that Bob has. Can you write an algebraic expression to represent the amount of money John has?', 'Since John has $15 more than twice what Bob has, we can write this as an algebraic expression. The amount of money Bob has is represented by "x". Twice Bob\'s money would be "2x". Now, because John has $15 more than that, we add $15 to "2x". Therefore, the algebraic expression representing the amount of money John has is "2x + 15".'), ('import data.real.basic\n\n-- defining the sides of the triangle\ndef AB : ℝ := 7\ndef BC : ℝ := 10\ndef AC : ℝ := 8\n\n-- stating the problem\ntheorem not_right_triangle : BC^2 ≠ AB^2 + AC^2 :=\nbegin\n  -- substituting the given lengths\n  unfold AB BC AC,\n  -- simplifying the equation\n  norm_num,\nend', 'In a triangle ABC, side AB is 7 units long, side BC is 10 units long, and side AC is 8 units long. Is triangle ABC a right triangle?', 'By the Pythagorean Theorem, in a right triangle, the square of the length of the hypotenuse (the side opposite the right angle) is equal to the sum of the squares of the lengths of the other two sides. \n\nIn triangle ABC, if it is a right triangle, then the longest side, BC, should be the hypotenuse. So, we need to check if BC² = AB² + AC². \n\nSubstituting the given lengths, we have 10² = 7² + 8², which simplifies to 100 = 49 + 64. As 100 is not equal to 113, triangle ABC is not a right triangle.'), ('import data.real.basic\nimport data.nat.basic\n\n-- define the quadratic equation\ndef quadratic_eq (x : ℝ) : Prop := x^2 - 4*x + 4 = 0\n\n-- proof of the solutions to the quadratic equation\nlemma solve_quadratic_eq : ∃ x : ℝ, quadratic_eq x :=\nbegin\n  use 2,\n  unfold quadratic_eq,\n  norm_num,\nend\n\n-- define the chi-square test\ndef chi_square_test (df : ℕ) (test_stat : ℝ) : Prop := df = 3 ∧ test_stat = 7.815\n\n-- proof of the result of the chi-square test\nlemma result_chi_square_test : ∀ (df : ℕ) (test_stat : ℝ), chi_square_test df test_stat → ¬ (test_stat > 7.815) :=\nbegin\n  intros df test_stat h,\n  cases h with h1 h2,\n  linarith,\nend', 'Suppose we have a chi-square test with 3 degrees of freedom, where our test statistic is 7.815. Also, consider a quadratic equation x^2 - 4x + 4 = 0. Find the solutions to the quadratic equation and state whether or not we can reject the null hypothesis in the chi-square test at the 0.05 significance level.', "First, we solve the quadratic equation. This is a perfect square trinomial, it can be factored as (x-2)^2 = 0. Solving for x gives us x = 2.\n\nFor the Chi-square test, the critical value for 3 degrees of freedom at 0.05 significance level is approximately 7.815. If our test statistic is equal to the critical value, it means we're on the borderline of our rejection region. Therefore, we do not reject the null hypothesis since we usually only reject when the test statistic is strictly greater than the critical value."), ('import data.real.basic\n\ndef f (x : ℝ) : ℝ := 2*x + 3\ndef g (x : ℝ) : ℝ := f (x - 2) + 1\n\n-- show that g(x) = 2x\nexample (x : ℝ) : g x = 2*x :=\nbegin\n  unfold g f,  -- expands out the function definitions\n  ring,        -- simplifies the expression\nend\n\n-- show that g(4) = 8\nexample : g 4 = 8 :=\nbegin\n  unfold g f,  -- expands out the function definitions\n  ring,        -- simplifies the expression\nend', 'Let f(x) = 2x + 3 be a function. Find the transformed function g(x) = f(x - 2) + 1, and evaluate g(4).', 'First, substitute x - 2 for x in the original function f(x) to find g(x):\ng(x) = f(x - 2) + 1 = 2(x - 2) + 3 + 1 = 2x - 4 + 3 + 1 = 2x.\nThen, substitute 4 for x in the transformed function to find g(4):\ng(4) = 2 * 4 = 8.'), ('import data.nat.basic\nimport data.nat.pow\n\n-- Define x and y as positive integers\nvariables (x y : ℕ)\n\n-- Define the area function\ndef area (x y : ℕ) : ℕ := 2^x * 3^y\n\n-- State the problem\ntheorem find_exponents : area 6 1 = 192 := \nbegin\n    dsimp [area],\n    refl,\nend', 'If the dimensions of a rectangle are 2^x cm and 3^y cm, where x and y are positive integers, and the area of the rectangle is 192 cm^2, find the values of x and y.', 'The area of a rectangle is calculated by multiplying the lengths of its sides. In this case, the area is (2^x cm) * (3^y cm) = 192 cm^2. \n\nWe can start by prime factorizing 192, which gives us 2^6 * 3^1. Comparing this with the equation (2^x) * (3^y) = 192, we can see that x must be 6 and y must be 1.'), ('import data.nat.basic\n\nopen nat\n\ndef groups_of_ten (n : ℕ) : ℕ := n / 10\ndef leftover (n : ℕ) : ℕ := n % 10\n\nexample : groups_of_ten 28 = 2 ∧ leftover 28 = 8 :=\nbegin\n  split,\n  { refl },\n  { refl }\nend', 'Mary has 28 marbles in her collection. She sorts them into groups of 10. How many groups of 10 does she have? How many marbles does she have left over?', 'First, we can find out the number of groups of 10 by dividing the total number of marbles by 10. 28 divided by 10 is 2 with a remainder of 8. Therefore, Mary has 2 groups of 10 marbles and 8 marbles left over.'), ('def calculate_book_cost (S : ℕ) (B : ℕ) : Prop := B = 3 * S \ndef proof : ∀ (S B : ℕ), calculate_book_cost S B → S = 30 → B = 90\n| S B H1 H2 := \n  have H3: B = 3 * 30, from eq.subst H2 H1,\n  show B = 90, from eq.trans H3 (nat.mul_comm 3 30)', 'John and Mary went to a local bookstore to buy some books and stationery. The total cost of books was three times the cost of the stationery. If the total cost of stationery was $30, and the total amount they spent was $120. How much did they spend on books?', 'Let B represent the cost of books and S represent the cost of stationery. We know from the problem that B = 3S and S = $30. We can substitute S = $30 into the first equation to find the cost of books. So, B = 3 * $30 = $90.'), ('import data.real.basic\n\nexample : (0.6 * 10 : ℝ) = 6 :=\nbegin\n  norm_num,\nend', 'If we have a decimal number 0.6 and we multiply it by 10, what is the result?', 'When we multiply a decimal number by 10, we move the decimal point one place to the right. So, if we multiply 0.6 by 10, we move the decimal point one place to the right, and the result is 6.'), ('def calc_rate : ℕ → ℕ → ℕ\n| total_volume total_time := total_volume / total_time\n\n#eval calc_rate 120 4', 'John started to fill a water tank at 10:00 AM, and the tank was completely filled by 2:00 PM. The tank can hold 120 liters of water. What is the rate at which John filled the tank (in liters per hour)?', "John filled the tank from 10:00 AM to 2:00 PM - that's a total of 4 hours. The tank can hold 120 liters of water. Therefore, to find the rate at which John filled the tank, we divide the total volume of water by the total time. So, 120 liters divided by 4 hours is 30 liters per hour. Therefore, John filled the tank at a rate of 30 liters per hour."), ('import data.int.basic\n\ndef calculate_remaining_money (initial_money : ℤ) (cost1 : ℤ) (cost2 : ℤ) : ℤ :=\ninitial_money - cost1 - cost2\n\ndef calculate_savings (remaining_money : ℤ) (months : ℤ) : ℤ :=\nremaining_money * months\n\n#eval calculate_remaining_money 15 7 3  -- returns 5\n#eval calculate_savings 5 4  -- returns 20', 'John has $15. He spends $7 on a toy car and $3 on candies. How much money does John have left? If he saves that amount for 4 months, how much money will he have?', 'First, we need to find out how much money John has after buying the toy car and candies. We can do this by subtracting the cost of the toy car and candies from the initial amount of money John has. So, $15 - $7 - $3 = $5.\n\nThen, we need to find out how much money John will have after saving for 4 months. Since John saves the same amount of money each month, we can find the total amount of money he saves by multiplying the amount he saves each month by the number of months. So, $5 * 4 = $20.\n\nTherefore, John will have $20 after saving for 4 months.'), ('import data.real.basic\n\ntheorem my_add_zero (a : ℝ) : a + 0 = a :=\nbegin\n    rw add_zero a,\nend', "Prove that for any real number 'a', a + 0 = a.", "This is a basic property of real numbers called the identity property of addition. According to this property, when any real number is added to 0, the result is the number itself. So, if we take a real number 'a' and add 0 to it, we will still get 'a'."), ("import data.real.basic\n\n-- Let's define the equation\ndef equation (x : ℝ) := 3*x - 7 = 14\n\n-- Now we want to find the value of x.\nlemma find_x : ∃ x : ℝ, equation x :=\nbegin\n  use 7,\n  unfold equation,\n  norm_num,\nend", 'If 3x - 7 = 14, what is the value of x?', 'To solve for x, we first need to isolate x on one side of the equation. We can do this by adding 7 to both sides of the equation to get rid of the -7 next to the 3x. This gives us:\n\n3x = 14 + 7\n\nwhich simplifies to:\n\n3x = 21\n\nNext, we need to get rid of the 3 that is being multiplied by x. We can do this by dividing both sides of the equation by 3:\n\nx = 21 / 3\n\nThis simplifies to:\n\nx = 7\n\nSo, the solution to the equation 3x - 7 = 14 is x = 7.'), ('import data.real.basic\n\n-- Define the function f(x) = x^3 - 3x + 2\ndef f (x : ℝ) := x^3 - 3*x + 2\n\n-- Define the integral of f(x) from a to b\nnoncomputable def integral (a b : ℝ) : ℝ :=\n  b^4 / 4 - 1.5 * b^2 + 2 * b - (a^4 / 4 - 1.5 * a^2 + 2 * a)\n\n-- Calculate the definite integral of f(x) from 1 to 3\nexample : integral 1 3 = 12 :=\nbegin\n  -- Simplify the integral\n  unfold integral,\n  -- Calculate the values at the limits of integration\n  norm_num,\nend', 'Given the function f(x) = x^3 - 3x + 2 on the interval [1, 3]. Find the area under the curve of the function on this interval.', 'The area under the curve of a function on a given interval can be found by integrating the function over that interval. In this case, we are asked to find the area under the curve of the function f(x) = x^3 - 3x + 2 on the interval from x = 1 to x = 3.\n\nWe can do this by calculating the definite integral of f(x) from 1 to 3. \n\n∫ from 1 to 3 of (x^3 - 3x + 2) dx = [0.25x^4 - 1.5x^2 + 2x] from 1 to 3\n= (0.25 * 3^4 - 1.5 * 3^2 + 2 * 3) - (0.25 * 1^4 - 1.5 * 1^2 + 2 * 1)\n= (20.25 - 13.5 + 6) - (0.25 - 1.5 + 2)\n= 12.75 - 0.75\n= 12\n\nSo, the area under the curve of the function f(x) = x^3 - 3x + 2 from x = 1 to x = 3 is 12 square units.'), ('import data.real.basic\n\ndef square (x : ℝ) : ℝ := x^2\ndef perimeter (x : ℝ) : ℝ := 4*x\n\ntheorem fence_needed : perimeter (square 5) = 100 :=\nbegin\n  unfold square,\n  unfold perimeter,\n  norm_num,\nend', 'In a square garden, each side measures 5^2 units. Mike wants to build a fence around the garden. How many units of fencing does Mike need?', 'The perimeter of a square is calculated by multiplying the length of one side by 4. Since each side of the square is 5^2 units, we first calculate the value of 5^2 which equals 25. Then we multiply 25 by 4 which equals 100. Therefore, Mike needs 100 units of fencing to build a fence around the garden.'), ("import data.real.basic\n\n-- The area of a rectangle is length times width\ndef rectangle_area (length width : ℝ) : ℝ := length * width\n\n-- Now we prove that the area of John's rectangle is 24\nexample : rectangle_area 6 4 = 24 :=\nbegin\n  unfold rectangle_area,       -- By definition of rectangle_area\n  norm_num,                     -- simplify the multiplication\nend", "John has a rectangle with a length of 6 units and a width of 4 units. He wants to know the area of his rectangle. What is the area of John's rectangle?", "The area of a rectangle can be found by multiplying the length and the width of the rectangle. In this case, John's rectangle has a length of 6 units and a width of 4 units. By multiplying these two together, we get an area of 24 square units. Therefore, the area of John's rectangle is 24 square units."), ('import data.real.basic\n\n-- Defining the polynomial f(x) = x^3 - 6x^2 + 11x - 6\ndef f (x : ℝ) : ℝ := x^3 - 6*x^2 + 11*x - 6\n\n-- A lemma stating that the polynomial factors as (x - 1)(x - 2)(x - 3)\nlemma factorization (x : ℝ) : f x = (x - 1) * (x - 2) * (x - 3) :=\nbegin\n  unfold f,\n  ring,\nend\n\n-- The roots of the polynomial are x = 1, x = 2, and x = 3\nexample : ∃ x, f x = 0 := ⟨1, by rw factorization; simp⟩\nexample : ∃ x, f x = 0 := ⟨2, by rw factorization; simp⟩\nexample : ∃ x, f x = 0 := ⟨3, by rw factorization; simp⟩', 'Consider the polynomial function, f(x) = x^3 - 6x^2 + 11x - 6. By using polynomial factorization, find the x-intercepts of the graph of this function.', 'To find the x-intercepts of the graph of the function, we need to find the roots of the polynomial, that is, the values of x for which f(x) = 0. In other words, we have to solve the equation x^3 - 6x^2 + 11x - 6 = 0.\n\nThe polynomial x^3 - 6x^2 + 11x - 6 can be factored into (x - 1)(x - 2)(x - 3). Therefore, the roots of the polynomial are x = 1, x = 2, and x = 3. These are the x-intercepts of the graph of the function.'), ('import data.real.basic\n\ntheorem algebraic_expressions (a b c : ℝ) (h : a = b + c) : a - b = c :=\nbegin\n  rw h,\n  simp,\nend', 'Prove that for any real numbers a, b, and c, if a = b + c, then a - b = c.', 'Assume that a, b, and c are real numbers and a is equal to b + c. We can subtract b from both sides of the equation, a = b + c, to isolate a - b on the left side of the equation. Subtracting b from the right side of the equation, b + c - b, leaves us with c. Hence, a - b = c.'), ('import data.real.basic\n\n-- define the length and width of the rectangle\ndef length : ℝ := 10\ndef width : ℝ := 5\n\n-- define the function to calculate the perimeter of a rectangle\ndef perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- calculate the perimeter\n#eval perimeter length width  -- output is 30', 'John has a rectangle garden with a length of 10 meters and width of 5 meters. He wants to build a fence around his garden. How many meters of fencing does John need?', 'To find the total amount of fencing John needs, we need to calculate the perimeter of the rectangle. The perimeter of a rectangle is calculated by adding the lengths of all four sides. Since a rectangle has two equal length sides and two equal width sides, we can also calculate the perimeter by doubling the sum of the length and the width. Therefore, the total amount of fencing John needs is (10 + 5) * 2 = 30 meters.'), ('import data.real.basic\n\ntheorem neg_mul_neg_is_pos : ∀ (a b : ℝ), a < 0 → b < 0 → a * b > 0 :=\nbegin\n  intros a b ha hb,\n  have h : 0 < -a, from neg_pos.mpr ha,\n  have i : 0 < -b, from neg_pos.mpr hb,\n  have j : 0 < (-a) * (-b), from mul_pos h i,\n  rwa neg_mul_neg at j,\nend', 'Show that the product of two negative numbers is a positive number. Specifically, prove that for any two negative real numbers a and b, the product a*b is positive.', "Let's consider two negative real numbers, a and b. By definition, a negative number is less than zero. So, we can say that both a and b are less than zero. When we multiply a and b, there are two negative signs, one from a and one from b. According to the properties of multiplication, the product of two negative numbers results in a positive number. So, the product a*b is greater than zero, which means it is a positive number."), ('import data.real.basic\n\nopen real\n\n-- declare variables\nvariables (length1 : ℝ) (width1 : ℝ) (length2 : ℝ) (width2 : ℝ)\n\n-- state the problem\nexample (h1 : length1 = 5.9) (h2 : width1 = 3.2) (h3 : length2 = 2.7) (h4 : width2 = 1.5) \n: length1 * width1 - length2 * width2 = 14.83 :=\nbegin\n  -- substitute the values of the variables\n  rw [h1, h2, h3, h4],\n  -- perform the calculation\n  norm_num,\nend', 'John found a rectangular piece of wood that was 5.9 feet long and 3.2 feet wide. He cut a 2.7 feet long and 1.5 feet wide piece from it. What is the area in square feet of the remaining piece of wood?', 'First, we have to find the area of the original piece of wood. This is done by multiplying the length and the width of the rectangle, which gives 5.9 feet * 3.2 feet = 18.88 square feet. Next, we find the area of the piece that John cut off. This is done by multiplying the length and width of the cut piece, which gives 2.7 feet * 1.5 feet = 4.05 square feet. To find the area of the remaining piece of wood, we subtract the area of the cut piece from the area of the original piece. This gives 18.88 square feet - 4.05 square feet = 14.83 square feet. Therefore, the area of the remaining piece of wood is 14.83 square feet.'), ('import data.real.basic\n\n-- Define the length and width of the garden\nnoncomputable def length : ℝ := 3 / 4\nnoncomputable def width  : ℝ := 2 / 3\n\n-- Define the area of the garden as the product of its length and width\nnoncomputable def area : ℝ := length * width\n\n-- Prove that the area is 1/2\ntheorem area_of_garden : area = 1 / 2 :=\nbegin\n  unfold area length width,  -- Replace `area`, `length`, `width` with their definitions\n  norm_num,                  -- Do the arithmetic to prove the equality\nend', "John has a rectangular garden with a length of 3/4 meters and a width of 2/3 meters. What is the area of John's garden in square meters?", "The area of a rectangle is given by the product of its length and its width. Therefore, in order to find the area of John's garden, we multiply 3/4 (the length) by 2/3 (the width). This multiplication gives us 1/2. Hence, the area of John's garden is 1/2 square meters."), ('import data.real.basic\n\n-- Definitions\nnoncomputable def triangle_area (base : ℝ) (height : ℝ) : ℝ := 0.5 * base * height\nnoncomputable def height (area : ℝ) (base : ℝ) : ℝ := 2 * area / base\n\n-- Base and area\ndef B : ℝ := 20\ndef A : ℝ := 50\n\n-- The height of the triangle\nnoncomputable def H := height A B\n\n-- Proving that the height of the triangle is 5 units\nexample : H = 5 :=\nbegin\n  unfold H,\n  unfold height,\n  rw [A, B],\n  norm_num,\nend', 'A triangle is inscribed in a semicircle with a radius of 10 units. The triangle is not a right triangle, and its sides are tangent to the boundary of the semicircle at three points. The side of the triangle along the diameter of the semicircle is the base (20 units). The height of the triangle from the base to the apex is unknown. If the area of the triangle is 50 square units, what is the height?', 'The area of a triangle is calculated as 1/2 * base * height. In this case, the base is 20 units, and the area is 50 square units. We can substitute these values into the formula and solve for the height.\n\n1/2 * base * height = area\n1/2 * 20 * height = 50\nheight = 50 / (1/2 * 20) = 5 units\n\nTherefore, the height of the triangle is 5 units.'), ('def time_to_school : ℕ → ℕ → ℕ\n| 8 15 := 30\n| _ _ := 0\n\n#eval time_to_school 8 15  -- output: 30', 'Johnny leaves his house to go to school at 7:45 a.m. and arrives at school at 8:15 a.m. How long does it take Johnny to get to school?', 'To find out how long it takes Johnny to get to school, we subtract the time he left his house from the time he arrived at school. That is, 8:15 a.m. - 7:45 a.m. = 30 minutes. Therefore, it takes Johnny 30 minutes to get to school.'), ('def calculate_apples (total_apples : ℕ) (apples_given_to_friend : ℕ) (apples_given_to_sister : ℕ) (apples_eaten : ℕ) : ℕ :=\ntotal_apples - apples_given_to_friend - apples_given_to_sister - apples_eaten\n\nexample : calculate_apples 12 3 2 1 = 6 :=\nrfl', 'John has 12 apples. He gave 3 apples to his friend and 2 apples to his sister. Then he ate 1 apple. How many apples does John have now?', 'Originally, John had 12 apples. He gave away 3 apples to his friend, so he was left with 12 - 3 = 9 apples. Then he gave 2 apples to his sister, so he had 9 - 2 = 7 apples. Finally, he ate 1 apple, so he was left with 7 - 1 = 6 apples. So, John has 6 apples now.'), ('def sequence (n : ℕ) : ℕ := 5 + (n-1)*3\n\nexample : sequence 10 = 32 :=\nbegin\n  unfold sequence,\n  simp,\n  refl,\nend', 'The first term of a sequence is 5, and each subsequent term is 3 more than the previous term. What is the value of the 10th term in the sequence?', 'To find the 10th term of the sequence, we can use the formula for the nth term of an arithmetic sequence, which is a + (n-1)d. Here, a is the first term (5), n is the term number (10), and d is the common difference (3). Plugging these values into the formula, we get 5 + (10-1)*3 = 5 + 27 = 32. So the 10th term of the sequence is 32.'), ('import data.real.basic\n\n-- set up necessary definitions and facts\ndef circle_eq (x y r : ℝ) : Prop := x^2 + y^2 = r^2\n\n-- proof that the point (3, 4) satisfies the circle equation for r = 5\nexample : circle_eq 3 4 5 :=\nbegin\n  unfold circle_eq,\n  norm_num,\nend', 'A circle is centered at the origin (0, 0) and has a radius of 5 units. A point (3, 4) lies on the circle. Prove that the point (3, 4) satisfies the equation of the circle.', 'The equation of a circle centered at the origin (0, 0) with radius r is given by the equation x² + y² = r². In our case, the radius r is 5, so the equation of the circle is x² + y² = 25.\n\nWe are asked to prove that the point (3, 4) satisfies this equation. To do this, we substitute x = 3 and y = 4 into the equation and see if both sides are equal:\n\n(3)² + (4)² = 9 + 16 = 25.\n\nSince 25 = 25, we can see that the point (3, 4) does indeed satisfy the equation of the circle, and so the point (3, 4) lies on the circle.'), ('import data.real.basic\n\nopen real\n\n#check (2^3 * 3^2 - 4^2 + 5 : ℝ)\n\nexample : (2^3 * 3^2 - 4^2 + 5 : ℝ) = 61 :=\nbegin\n  norm_num,\nend', 'Simplify the expression: 2^3 * 3^2 - 4^2 + 5.', 'First, we simplify the expression within the parentheses by following the order of operations, which is parentheses, exponents, multiplication and division (from left to right), addition and subtraction (from left to right). This is often remembered by the acronym PEMDAS.\n\nThe given expression has no parentheses but has exponents. So we compute those first: 2^3 = 8 and 3^2 = 9, and 4^2 = 16. So the expression becomes 8 * 9 - 16 + 5.\n\nNext, we perform the multiplication: 8 * 9 = 72. So the expression becomes 72 - 16 + 5.\n\nThen, we perform the subtraction: 72 - 16 = 56. So, the expression becomes 56 + 5.\n\nFinally, we perform the addition: 56 + 5 = 61. Therefore, the simplified value of the given expression is 61.'), ('import data.real.basic\n\n-- define the function that represents the cost of the computer\ndef cost (x : ℝ) := 800 - 20*x\n\n-- verify that the cost is $700 when John waits for 5 weeks\nexample : cost 5 = 700 :=\nbegin\n  unfold cost,\n  norm_num,\nend', "John is planning to buy a new computer. He finds a store that sells the computer for $800. However, the store offers a discount of $20 for each week you wait to buy the computer. If John waits for 'x' weeks, how much will the computer cost? Write down the equation that represents this situation and find out the cost of the computer if John waits for 5 weeks.", "We can represent the situation with a linear equation. The cost of the computer without any wait is $800, and each week that John waits, the cost is reduced by $20. Therefore, the cost 'y' after waiting 'x' weeks is given by the equation y = 800 - 20x. If John waits for 5 weeks, we substitute x = 5 into the equation to find out the cost: y = 800 - 20*5 = 800 - 100 = $700. So, if John waits for 5 weeks, the computer will cost him $700."), ('import data.nat.basic\n\nopen nat\n\n-- define the number of boxes and the number of chocolates in each box\ndef boxes : ℕ := 4\ndef chocolates_per_box : ℕ := 5\n\n-- calculate the total number of chocolates\ndef total_chocolates := boxes * chocolates_per_box\n\n-- prove that Mary has 20 chocolates in total\nexample : total_chocolates = 20 :=\nbegin\n  unfold total_chocolates,\n  exact mul_comm chocolates_per_box boxes ▸ rfl,\nend', 'Mary has 4 boxes of chocolates. Each box contains 5 chocolates. How many chocolates does Mary have in total?', 'Since each box contains 5 chocolates and Mary has 4 boxes, to find the total number of chocolates Mary has, we need to multiply the number of boxes by the number of chocolates in each box. So, 4 boxes * 5 chocolates/box = 20 chocolates. Therefore, Mary has 20 chocolates in total.'), ('import data.real.basic\n\n-- Defining the total number of students\ndef total_students : ℝ := 30\n\n-- Defining the number of students who chose blue\ndef blue_students : ℝ := 10\n\n-- Defining the number of students who chose red\ndef red_students : ℝ := 8\n\n-- Defining the probability function\nnoncomputable def prob (favorable : ℝ) (total : ℝ) : ℝ := favorable / total\n\n-- Proving the problem\nexample : prob (blue_students + red_students) total_students = 0.6 :=\nbegin\n  unfold prob,\n  unfold blue_students, \n  unfold red_students,\n  unfold total_students,\n  norm_num,\nend', "In a class of 30 students, the teacher conducted a survey to find out the favorite color of each student. The survey results are as follows: 10 students chose blue, 8 students chose red, 7 students chose green, and 5 students chose yellow. \n\nThe question is, if a student is chosen randomly, what is the probability that the student's favorite color is either blue or red?", "The probability of an event can be calculated by dividing the number of favorable outcomes by the total number of outcomes. In this case, the total number of outcomes is the total number of students in the class, which is 30. \n\nThe number of favorable outcomes is the number of students whose favorite color is either blue or red. According to the survey, the number of students who chose blue is 10 and the number of students who chose red is 8. Therefore, the number of favorable outcomes is 10 + 8 = 18.\n\nSo, the probability that a randomly chosen student's favorite color is either blue or red is 18 / 30 = 0.6."), ('import data.real.basic\n\n-- Defining the fractions\nnoncomputable def john_pizza : ℝ := 3 / 8\nnoncomputable def jane_pizza : ℝ := 2 / 4\n\n-- Proving that Jane ate more pizza\nexample : jane_pizza > john_pizza :=\nbegin\n  unfold john_pizza jane_pizza,\n  norm_num,\nend', 'In a pizza shop, there are two different sizes of pizza. The larger one has 8 slices and the smaller one has 4 slices. If John ate 3 slices from the larger pizza and Jane ate 2 slices from the smaller pizza, who ate more pizza?', 'First, we need to convert the number of slices eaten into fractions of a whole pizza. \n\nFor John, he ate 3 out of 8 slices, which is 3/8 of a pizza. \n\nFor Jane, she ate 2 out of 4 slices, which is 2/4 of a pizza. \n\n2/4 can be simplified to 1/2, as two is half of four. \n\nComparing the fractions, 1/2 is greater than 3/8. \n\nTherefore, Jane ate more pizza.'), ('import data.nat.basic\n\nopen nat\n\n-- define the total number of students, the number of students in the math club, and the number of students in the science club\ndef total_students : ℕ := 200\ndef math_club : ℕ := 140\ndef science_club : ℕ := 120\n\n-- define the function for the number of students in both clubs\ndef both_clubs (total math science : ℕ) : ℕ := math + science - total\n\n-- prove that the number of students in both clubs is 60\nexample : both_clubs total_students math_club science_club = 60 :=\nbegin\n  unfold both_clubs,\n  exact rfl,\nend', 'In a school, there are 200 students. Each student is either in the mathematics club, the science club, or both. If there are 140 students in the mathematics club and 120 students in the science club, how many students are in both clubs?', 'To solve this problem, we can use the principle of inclusion and exclusion in combinatorics. According to this principle, the total number of students in the school is equal to the number of students in the mathematics club plus the number of students in the science club, minus the number of students who are in both clubs. So, we can write this relationship as an equation: Total number of students = number of students in math club + number of students in science club - number of students in both clubs. Plugging in the numbers given in the problem, we get: 200 = 140 + 120 - number of students in both clubs. Solving this equation for the number of students in both clubs, we get 60. So, there are 60 students who are in both clubs.'), ('def rect_perimeter (length width : ℕ) : ℕ := 2 * (length + width)\ndef rect_area (length width : ℕ) : ℕ := length * width\n\ndef garden_problem : ℕ :=\n  let width := 36 / 6 in\n  let length := 2 * width in\n  rect_area length width\n\n#eval garden_problem  -- returns 72', 'John has a rectangular garden. The length of the garden is twice the width. If the perimeter of the garden is 36 meters, what is the area of the garden?', 'First, we need to establish the relationship between the length and width of the garden. The problem states that the length is twice the width. \n\nNext, we deal with the concept of perimeter. The perimeter of a rectangle is given by the formula 2*(length + width). We know from the problem that the perimeter is 36 meters. So, we can set up the equation 2*(length + width) = 36.\n\nSubstituting the relationship we established earlier (length = 2 * width), we can replace "length" in our equation with "2 * width". That gives us 2*(2*width + width) = 36. Simplifying this equation gives us 6*width = 36. Solving for width, we get width = 6 meters.\n\nNow that we know the width, we can find the length by multiplying the width by 2. That gives us length = 12 meters.\n\nFinally, we can find the area of the garden by multiplying the length and width. That gives us area = length * width = 12 meters * 6 meters = 72 square meters. So, the area of the garden is 72 square meters.'), ('import data.real.basic\n\n-- define the fraction of the plot that Class A and Class B planted\nnoncomputable def class_A_planted := (2 : ℝ) / 5\nnoncomputable def class_B_planted := (3 : ℝ) / 5\n\n-- total planting in both classes\nnoncomputable def total_planted := class_A_planted + class_B_planted\n\n-- total number of plots\ndef total_plots := 2\n\n-- fraction of total two plots that Class A and Class B students planted flowers in\nnoncomputable def fraction_planted := total_planted / total_plots\n\n-- proof that the fraction is 1/2\nexample : fraction_planted = 1/2 :=\nbegin\n  unfold fraction_planted,\n  unfold total_planted,\n  unfold class_A_planted,\n  unfold class_B_planted,\n  unfold total_plots,\n  norm_num,\nend', 'In a school, there are 7 classes and each class has a garden plot for planting flowers. Each class garden plot is divided into 5 equal parts. One day, the students in Class A planted flowers in 2/5 of their plot, and the students in Class B planted flowers in 3/5 of their plot. What fraction of the total two plots did the Class A and Class B students plant flowers in?', 'First, we need to find out what fraction of a single plot both Class A and Class B planted. Class A planted flowers in 2/5 of their plot, and Class B planted flowers in 3/5 of their plot. So together, they planted flowers in (2/5 + 3/5) = 1 plot.\n\nNow, since each class has a plot, and there are two classes, the total number of plots is 2. Hence, the fraction of the total two plots that Class A and Class B students planted flowers in is 1/2.'), ('import data.real.basic\n\n-- defining the variable\ndef x := 5\n\n-- checking the solution\nexample : 3 * x + 5 = 20 := \nbegin\n  -- substituting the definition of x\n  rw x,\n  -- performing the calculation\n  norm_num,\nend', 'Solve the following equation for x: 3x + 5 = 20.', 'To solve for x in the equation 3x + 5 = 20, you should first isolate the term with x on one side of the equation. This can be done by subtracting 5 from both sides of the equation, which gives 3x = 20 - 5, or 3x = 15. Then you can solve for x by dividing both sides of the equation by 3, so x = 15 / 3, or x = 5.'), ('import data.real.basic\n\ndef miles_driven (speed : ℝ) (time : ℝ) : ℝ := speed * time\n\ntheorem John_drives : ∀ (speed time : ℝ), speed = 120 / 2 → time = 5 → miles_driven speed time = 300 :=\nbegin\n  intros speed time h1 h2,\n  have h3 : miles_driven speed time = speed * time, from rfl,\n  subst h1,\n  subst h2,\n  simp [miles_driven, div_mul_eq_mul_div],\n  norm_num,\nend', 'John is driving a car and travels at a constant speed. He drives 120 miles in 2 hours. If he maintains the same speed, how many miles can he drive in 5 hours?', 'Since John is driving at a constant speed, the distance he drives is directly proportional to the time he spends driving. Therefore, we can set up a proportion to solve this problem. The proportion is 120 miles/2 hours = x miles/5 hours. Solving for x (the number of miles John can drive in 5 hours), we get x = (120 miles/2 hours) * 5 hours = 300 miles. So, John can drive 300 miles in 5 hours at the same speed.'), ('import data.real.basic \n\n-- defining the variables\ndef length := (6 : ℝ) \ndef width := (4 : ℝ) \n\n-- defining the function for the perimeter of a rectangle\ndef perimeter := λ length width : ℝ, 2*(length + width) \n\n-- calculating the perimeter\n#eval perimeter length width ', 'John has a rectangular garden that is 6 meters long and 4 meters wide. He wants to build a fence around the garden. How many meters of fencing does he need?', 'To find out the amount of fencing needed, we have to calculate the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2*(length + width). So, we substitute the given values into the formula: 2*(6m + 4m) = 2*10m = 20m. Therefore, John needs 20 meters of fencing.'), ("-- Define variable for John's height\ndef john_height : ℕ := 150\n-- Define variable for the difference in heights\ndef height_diff : ℕ := 10\n-- Define variable for Mary's height \ndef mary_height : ℕ := john_height + height_diff\n-- Check that Mary's height is 160 cm\n#eval mary_height -- output should be 160", "John and Mary are comparing their heights. John is 150 cm tall. The difference between Mary's height and John's height is 10 cm. If Mary is taller than John, how tall is Mary?", "If Mary is taller than John by 10 cm, then we can find Mary's height by adding the difference of their heights to John's height. Therefore, Mary's height is 150 cm + 10 cm = 160 cm."), ('import data.real.basic\n\ndef S (a d n : ℕ) : ℕ := n/2 * (2*a + (n - 1)*d)\n\n#eval S 1 2 10', 'John is saving for a new bike. The first week he saves 1 dollar. Every week after that, he saves 2 more dollars than he did the previous week. How much money will he have saved after 10 weeks?', 'This is a problem of arithmetic series where the first term (a) is 1, the common difference (d) is 2, and the number of terms (n) is 10. The sum of an arithmetic series can be found using the formula S_n = n/2 * (2a + (n - 1)d). Plugging in the given values, we get S_10 = 10/2 * (2*1 + (10 - 1)*2) = 5 * (2 + 18) = 5 * 20 = 100. So, John will have saved 100 dollars after 10 weeks.'), ('import data.real.basic\n\nopen_locale classical\n\n-- Define the equation\ndef eqn (x : ℝ) : Prop := 5*x - 2 = 3*x + 6\n\n-- Prove that the solution is x = 4\nexample : ∃ x, eqn x :=\nbegin\n  use 4,\n  unfold eqn,\n  linarith,\nend\n\n-- Verify that x = 4 is the only solution\nexample (x : ℝ) (h : eqn x) : x = 4 :=\nbegin\n  unfold eqn at h,\n  linarith,\nend', 'Solve for x in the equation 5x - 2 = 3x + 6.', 'To solve for x, we first need to get all terms with x on one side of the equation and constants on the other side. We can start by subtracting 3x from both sides to get:\n\n5x - 3x = 2 + 6,\n\nwhich simplifies to\n\n2x = 8.\n\nThen, we divide both sides by 2 to solve for x, giving us\n\nx = 8 / 2,\n\nwhich simplifies to\n\nx = 4.\n\nSo, the solution to the equation 5x - 2 = 3x + 6 is x = 4.'), ("import data.real.basic\n\n-- let's declare our variables \nvariables (length_of_garden : ℝ) (width_of_garden : ℝ) (width_of_pathway : ℝ)\n\n-- this is our assumption about the problem\ndef garden (length_of_garden : ℝ) (width_of_garden : ℝ) : ℝ := length_of_garden * width_of_garden\ndef garden_with_pathway (length_of_garden : ℝ) (width_of_garden : ℝ) (width_of_pathway : ℝ) : ℝ := (length_of_garden + 2 * width_of_pathway) * (width_of_garden + 2 * width_of_pathway)\ndef pathway (length_of_garden : ℝ) (width_of_garden : ℝ) (width_of_pathway : ℝ) : ℝ := garden_with_pathway length_of_garden width_of_garden width_of_pathway - garden length_of_garden width_of_garden\n\n-- now let's prove our problem\nexample : pathway 20 15 2 = 156 :=\nbegin\n  unfold pathway garden_with_pathway garden,\n  norm_num,\nend", 'Tom has a garden that is 20 feet long and 15 feet wide. He plans to build a pathway around the garden that is 2 feet wide. What is the area of the pathway?', 'The area of the garden is 20 feet times 15 feet, which is 300 square feet. When Tom builds a pathway around the garden, the length and width of the garden plus the pathway are each increased by 2 feet on each side, which makes the length 24 feet and the width 19 feet. The area of the garden plus the pathway is 24 feet times 19 feet, which equals 456 square feet. The area of the pathway is the area of the garden plus the pathway subtracted by the area of the garden, which is 456 square feet minus 300 square feet, equaling 156 square feet.'), ('import data.nat.basic\n\nopen nat \n\ndef a_n (a1 d n : ℕ) : ℕ := a1 + d*(n-1)\n\ndef sum_arithmetic_sequence (a1 an n : ℕ) : ℕ := n/2 * (a1 + an)\n\ndef total_shots := \n  let a1 := 5,\n      d := 2,\n      n := 20,\n      an := a_n a1 d n\n  in sum_arithmetic_sequence a1 an n\n\n#eval total_shots \n--output: 480', 'John is a basketball player. He has recorded his shooting statistics for the past 20 games. John made 5 shots in the first game, 7 shots in the second game, 9 shots in the third game, and so on, increasing by 2 shots each game. What is the total number of shots John made in the 20 games?', 'This is an arithmetic sequence problem. The first term of the sequence is 5 (the number of shots John made in the first game) and the common difference is 2 (the increase in the number of shots from one game to the next). \n\nThe formula for the sum of an arithmetic sequence is: \n\nSum = n/2 * (a1 + an)\n\nWhere n is the number of terms (games in this case), a1 is the first term, and an is the last term. \n\nIn this case, n = 20, a1 = 5, and we need to find an. Since the sequence increases by 2 each game, we can find an by adding 2*19 to the first term (a1). That gives us: \n\nan = a1 + 2*(n-1) = 5 + 2*19 = 43\n\nSo the total number of shots John made is:\n\nSum = n/2 * (a1 + an) = 20/2 * (5 + 43) = 10 * 48 = 480\n\nSo, John made 480 shots in 20 games.'), ('import data.int.basic\n\ntheorem neg_of_neg_is_pos : ∀ (a : ℤ), a < 0 → -a > 0 :=\nbegin\n  intros a h,\n  have h1 : 0 < -a, from int.neg_pos_of_neg h,\n  exact h1,\nend', 'If a is a negative number, prove that -a is a positive number.', 'By definition, a negative number means it is less than zero. The negative sign in front of a negative number makes it the opposite of the negative number, which is a positive number. So, if a is a negative number, then -a would be a positive number.'), ('import data.real.basic\n\ndef S (n : ℕ) (a : ℕ) (d : ℕ) : ℕ := n * (2*a + (n-1)*d) / 2\n\ntheorem sum_of_arithmetic_series : S 50 3 5 = 6275 :=\nbegin\n  unfold S,\n  norm_num,\nend', "The sum of the first n terms of an arithmetic series is given by the formula S = n/2(2a + (n-1)d), where 'a' is the first term and 'd' is the common difference. Show that the sum S of the first 50 terms of an arithmetic series, where the first term a is 3 and the common difference d is 5, is equal to 6350.", 'Given the formula for the sum of an arithmetic series S = n/2(2a + (n-1)d), we can substitute the given values into the formula. We are given that n = 50, a = 3, and d = 5. Substituting these values, we get:\n\nS = 50/2(2*3 + (50-1)*5) \n= 25*(6 + 49*5) \n= 25*(6 + 245) \n= 25*251 \n= 6275 \n\nTherefore, the sum S of the first 50 terms of this arithmetic series is 6275, not 6350.'), ('open nat\n\n-- define the initial number of apples\ndef apples_initial : ℕ := 45\n\n-- define the number of apples given away\ndef apples_given : ℕ := 20\n\n-- define the number of apples bought\ndef apples_bought : ℕ := 35\n\n-- calculate the number of apples after giving some away\ndef apples_after_given : ℕ := apples_initial - apples_given\n\n-- calculate the final number of apples after buying more\ndef apples_final : ℕ := apples_after_given + apples_bought\n\n-- prove that the final number of apples is 60\nexample : apples_final = 60 :=\nbegin\n  unfold apples_final,\n  unfold apples_after_given,\n  have h1 : apples_initial - apples_given = 25, by refl,\n  rw h1,\n  have h2 : 25 + apples_bought = 60, by refl,\n  rw h2,\nend', 'If you have 45 apples and you give away 20, then you buy 35 more, how many apples do you have now?', 'You start with 45 apples, and after giving away 20, you are left with 45 - 20 = 25 apples. Then, you buy 35 more apples, which means you add these to the apples you already have. So, you now have 25 + 35 = 60 apples.'), ('import data.real.basic\n\n-- declare variables\nvariables (original_price : ℝ) (first_discount : ℝ) (second_discount : ℝ)\n\n-- state the problem\ndef discounted_price (original_price : ℝ) (first_discount : ℝ) (second_discount : ℝ) : ℝ :=\n  original_price - original_price * first_discount - (original_price - original_price * first_discount) * second_discount\n\n-- declare a lemma\nlemma final_price : discounted_price 50 0.2 0.15 = 34 :=\nbegin\n  unfold discounted_price,\n  norm_num,\nend', 'If a shirt is discounted 20% off its original price of $50, and then there is an additional discount of 15% off the discounted price, what is the final price of the shirt?', 'First, we calculate the initial 20% off from the original price. 20% of $50 is $10. So, after the first discount, the shirt costs $50 - $10 = $40. \n\nNext, we calculate the additional 15% off from the discounted price. 15% of $40 is $6. Therefore, after the additional discount, the shirt finally costs $40 - $6 = $34.'), ('import data.real.basic\n\ntheorem mul_eq_mul (a b c : ℝ) : a = b → a * c = b * c :=\nbegin\n  intro h,\n  rw h,\nend', 'If a = b, then for any number c, ac = bc. Prove this theorem.', "Let's assume that a equals to b, which is given in the problem. If we multiply both sides of this equation by the same number, c, the equality should still hold because both sides are equally affected by this multiplication. Therefore, ac should equal to bc."), ('import data.real.basic\n\n-- defining the initial length, breadth, area and perimeter of the rectangle\ndef length_initial : ℝ := 10\ndef breadth_initial : ℝ := 5\ndef area_initial := length_initial * breadth_initial\ndef perimeter_initial := 2 * (length_initial + breadth_initial)\n\n-- defining the new length, breadth, area and perimeter of the rectangle after changes\ndef length_new := length_initial - 2\ndef breadth_new := breadth_initial + 2\ndef area_new := length_new * breadth_new\ndef perimeter_new := 2 * (length_new + breadth_new)\n\n-- proving that the area has increased by 6 square units\nexample : area_new = area_initial + 6 :=\nbegin \n  rw [area_new, area_initial, length_new, breadth_new, length_initial, breadth_initial],\n  norm_num\nend\n\n-- proving that the perimeter remains the same\nexample : perimeter_new = perimeter_initial :=\nbegin \n  rw [perimeter_new, perimeter_initial, length_new, breadth_new, length_initial, breadth_initial],\n  norm_num\nend', 'Consider a rectangle with length 10 units and breadth 5 units. If the breadth is increased by 2 units and length is decreased by 2 units, how does the area and perimeter of the rectangle change?', 'The area of a rectangle is given by the formula: Area = length x breadth. The initial area of the rectangle is 10 units x 5 units = 50 square units. \n\nWhen the breadth is increased by 2 units and length is decreased by 2 units, the new dimensions of the rectangle are 8 units (length) and 7 units (breadth). The new area is 8 units x 7 units = 56 square units.\n\nSo, the area has increased by 6 square units.\n\nThe perimeter of a rectangle is given by the formula: Perimeter = 2(length + breadth). The initial perimeter of the rectangle is 2(10 units + 5 units) = 30 units. \n\nWith the new dimensions, the perimeter is 2(8 units + 7 units) = 30 units.\n\nSo, the perimeter remains the same.'), ('import data.real.basic\n\n-- defining the function for the nth term of an arithmetic series\ndef nth_term (a : ℝ) (d : ℝ) (n : ℕ) : ℝ := a + ((n - 1) : ℝ) * d\n\n-- proof that the GPA in the 5th year is 3.3\nexample : nth_term 2.5 0.2 5 = 3.3 :=\nbegin\n  -- simplifying the right side of the equation\n  unfold nth_term,\n  -- simplifying the calculation\n  norm_num,\nend', "Suppose that in a high school statistics study, the researchers are observing the cumulative GPA of students over the years. They found out that the GPA of each student follows a series, where the GPA of each subsequent year is an increment of 0.2 over the previous year's GPA. If a student's GPA in the first year was 2.5, what will be the student's GPA in the 5th year?", "This is an arithmetic series problem. An arithmetic series is a sequence of numbers in which each term after the first is obtained by adding a constant difference to the preceding term. In this case, the constant difference is 0.2. \n\nTo find the GPA in the 5th year, we can use the formula for the nth term of an arithmetic series: \n\na_n = a + (n - 1) * d \n\nwhere a is the first term (2.5 in this case), n is the term number (5 in this case) and d is the common difference (0.2 in this case). \n\nSubstituting these values into the formula, we get:\n\na_5 = 2.5 + (5 - 1) * 0.2 = 3.3\n\nSo the student's GPA in the 5th year will be 3.3."), ("import data.real.basic\n\n-- Let's represent the problem in Lean 3\nvariable (x : ℝ) -- cost of a chocolate bar\nvariable (y : ℝ) -- cost of a gummy bear\n\n-- Let's represent the two equations in Lean\ndef equation1 := 5*x + 3*y = 23 \ndef equation2 := 2*x + 4*y = 14 \n\n-- We solve equation 2 for x\ndef solve_for_x := x = 7 - 2*y\n\n-- Substitute this into equation 1\ndef substitute := 5*(7 - 2*y) + 3*y = 23 \n\n-- Solve for y\ndef solve_for_y := y = 1\n\n-- Substitute y = 1 into equation 2\ndef substitute_y := 2*x + 4 = 14 \n\n-- Solve for x\ndef solve_for_x2 := x = 5\n\n-- Thus, the cost of each chocolate bar is 5 dollars and each gummy bear is 1 dollar.", 'John and his sister Mary went to a candy store. John bought 5 chocolate bars and 3 gummy bears, and Mary bought 2 chocolate bars and 4 gummy bears. If the total amount John spent was 23 dollars and Mary spent 14 dollars, how much does each chocolate bar and each gummy bear cost?', "Let's say the cost of a chocolate bar is x dollars and the cost of a gummy bear is y dollars. Using the information given in the problem, we can set up two equations:\n\n5x + 3y = 23 (equation 1 - John's purchases)\n\n2x + 4y = 14 (equation 2 - Mary's purchases)\n\nWe can solve this system of equations by substitution or elimination.\n\nLet's use substitution. First, solve equation 2 for x: \n\nx = 7 - 2y\n\nSubstitute this into equation 1: \n\n5(7 - 2y) + 3y = 23\n\nSolve for y: \n\ny = 1\n\nSubstitute y = 1 into equation 2: \n\n2x + 4 = 14\n\nSolve for x: \n\nx = 5\n\nSo, each chocolate bar costs 5 dollars and each gummy bear costs 1 dollar."), ('import data.real.basic\n\nnoncomputable theory\n\n-- Define the function f(x) = x^2\ndef f (x : ℝ) : ℝ := x^2\n\n-- Define the antiderivative F(x) = (1/3)x^3\ndef F (x : ℝ) : ℝ := (1/3)*x^3\n\n-- Now we can compute the area under the curve by substituting the values of F(2) and F(0) in the theorem.\ntheorem result : F 2 - F 0 = 8/3 :=\nbegin\n    unfold F,\n    norm_num,\nend', "Let's consider the function `f(x) = x^2` on the interval `[0, 2]`. Compute the area under the curve of this function over the given interval.", 'The area under the curve of a function from `a` to `b` can be found by calculating the definite integral from `a` to `b` of the function.\n\nIn this case, we want to find the integral from `0` to `2` of the function `f(x) = x^2`. \n\nWe start by finding the antiderivative of `f(x)`, which is `(1/3)x^3`. \n\nThen we evaluate this antiderivative at `2` and `0` and subtract the two results to get the definite integral. \n\nSo, the area under the curve is `(1/3)*2^3 - (1/3)*0^3 = 8/3`.'), ('import data.real.basic\n\n-- defining the rectangle as a structure\nstructure rectangle :=\n(length : ℝ) (width : ℝ)\n\n-- defining the area of the rectangle\ndef rectangle.area (r : rectangle) : ℝ := r.length * r.width\n\n-- defining the operation of increasing the length and width of the rectangle\ndef rectangle.increase (r : rectangle) (l : ℝ) (w : ℝ) : rectangle :=\n{ length := r.length + l, width := r.width + w }\n\n-- proving the problem\nexample : rectangle.area (rectangle.increase (rectangle.mk 7 3) 5 2) = 60 :=\nbegin\n  -- unfolding definitions\n  have r := rectangle.mk 7 3,\n  rw rectangle.area,\n  rw rectangle.increase,\n  \n  -- calculation\n  norm_num,\nend', "Let's say that you have a rectangle with the length of 7 units and the width of 3 units. If you increase the length by 5 units and the width by 2 units, how much area does the new rectangle have?", 'First, we calculate the area of the original rectangle. The area of a rectangle is found by multiplying its length by its width, which in this case is 7 units * 3 units = 21 square units.\n\nNext, we calculate the dimensions of the new rectangle. The length is increased by 5 units, making it 7 units + 5 units = 12 units. The width is increased by 2 units, making it 3 units + 2 units = 5 units.\n\nFinally, we find the area of the new rectangle by multiplying the new length by the new width, which is 12 units * 5 units = 60 square units.'), ('import data.real.basic\n\n-- defining the variables\nvariables (x : ℝ)\n\n-- defining the equation\ndef eqn := 2 * (x + 2 * x) = 120\n\n-- solution of the equation\ndef sol : ℝ := 20\n\n-- proof that the solution is correct\nexample : (eqn sol) = true :=\nbegin\n  unfold eqn,\n  unfold sol,\n  simp,\n  norm_num,\nend\n\n-- defining the length and the width\ndef width : ℝ := sol\ndef length : ℝ := 2 * sol\n\n-- proof that the length and the width are correct\nexample : (length = 40) ∧ (width = 20) :=\nbegin\n  unfold length,\n  unfold width,\n  unfold sol,\n  simp,\n  norm_num,\nend', 'In a rectangular park, the length is twice as long as the width. The perimeter of the park is 120 meters. What are the length and the width of the park?', "Let's denote the width of the park as x (in meters). According to the problem, the length of the park is twice the width, so it can be represented as 2x.\nThe perimeter of a rectangle is calculated by the formula: 2*(length + width). In our case, the perimeter is 120 meters, so we can set up the following equation: 2*(x + 2x) = 120. \nSolving this equation, we get x = 20. Therefore, the width of the park is 20 meters, and the length is 2*20 = 40 meters."), ('import data.real.basic\n\ndef circle (x y : ℝ) := x^2 + y^2\n\ntheorem circle_eq : ∀ x y : ℝ, circle x y = 25 ↔ x^2 + y^2 = 25 :=\nbegin\n  intros,\n  split,\n  { intro h,\n    unfold circle at h,\n    assumption },\n  { intro h,\n    unfold circle,\n    assumption }\nend', 'Consider a circle in a plane with a center at the origin (0,0) and a radius of 5. What is the equation of this circle?', 'The equation of a circle in a plane with its center at the origin (0,0) is given by the equation x² + y² = r², where r is the radius of the circle. Since the radius of the circle in this problem is 5, the equation of the circle is x² + y² = 25.'), ('import data.nat.basic\n\nlemma place_value_of_3_in_534 : 3 * 10 = 30 :=\nbegin\n    rw mul_comm,\n    refl,\nend', "What is the place value of the digit '3' in the number 534?", "In the number 534, the digit '3' is in the tens place. Hence, its place value is 3*10 = 30."), ('import data.real.basic\n\nopen real\n\n-- define the volume of a rectangular prism\ndef volume (length width height : ℝ) : ℝ := length * width * height\n\n-- prove the theorem\nexample : volume 5 4 3 - volume 3 2 2 = 48 :=\nbegin\n  unfold volume,\n  norm_num,\nend', 'A rectangular prism has a length of 5 cm, a width of 4 cm, and a height of 3 cm. A smaller rectangular prism is cut from it, with a length of 3 cm, a width of 2 cm, and a height of 2 cm. What is the volume of the remaining prism?', 'First, we need to find the volume of the original prism. The volume of a rectangular prism is given by the formula Length * Width * Height. So, the volume of the original prism is 5 cm * 4 cm * 3 cm = 60 cubic cm. \n\nNext, we find the volume of the smaller prism that was cut out. Its volume is 3 cm * 2 cm * 2 cm = 12 cubic cm. \n\nTo find the volume of the remaining prism, we subtract the volume of the smaller prism from that of the original prism. Therefore, the volume of the remaining prism is 60 cubic cm - 12 cubic cm = 48 cubic cm.'), ('import data.real.basic\n\nopen function\n\ndef f : ℝ → ℝ := λ x, 2*x + 3\ndef g : ℝ → ℝ := λ x, 4*x - 5\ndef h : ℝ → ℝ := g ∘ f\n\nexample : ∃ h_inv : ℝ → ℝ, left_inverse h_inv h ∧ right_inverse h_inv h :=\nbegin\n  use λ x, (x - 7) / 8,\n  split,\n  { intro x,\n    change (4 * (2 * x + 3) - 5 - 7) / 8 = x,\n    linarith },\n  { intro x,\n    change 4 * (2 * ((x - 7) / 8) + 3) - 5 = x,\n    field_simp,\n    linarith }\nend', "A high school is conducting a study on the relationship between students' sleeping hours and their academic performance. They collect data from 100 students. The school's statistician decides to use a composite function to model the relationship, where the inner function represents the average sleeping hours (f(x)) and the outer function represents the academic performance (g(x)). It is found out that the function for sleeping hours is f(x) = 2x + 3 and the function for academic performance is g(x) = 4x - 5. After conducting the study, the statistician wants to find the inverse of the composite function to understand how academic performance affects sleeping hours. What is the inverse function of the composite function, g(f(x))?", 'The composite function g(f(x)) = g(2x + 3) = 4(2x + 3) - 5 = 8x + 7. To find the inverse of g(f(x)), we need to interchange the x and y in the equation and solve for y. So, we get x = 8y + 7. Solving for y, we get y = (x - 7) / 8. Hence, the inverse function of the composite function g(f(x)) is (x - 7) / 8.'), ('import data.real.basic\n\n-- Definitions\nnoncomputable def rectangle_area := λ(length width : ℝ), length * width\nnoncomputable def triangle_area := λ(base height : ℝ), 1/2 * base * height\n\n-- Theorem\ntheorem triangle_sum_equals_rectangle : ∀ (length width : ℝ), \n    2 * (triangle_area length width) = rectangle_area length width :=\nbegin\n    intros,\n    unfold rectangle_area triangle_area,\n    simp,\n    ring,\nend\n\n-- Apply the theorem for the problem\nexample : 2 * (triangle_area 15 8) = rectangle_area 15 8 :=\nbegin\n    apply triangle_sum_equals_rectangle,\nend', "Let's consider a rectangle with a length of 15 units and a width of 8 units. Now, imagine a line is drawn from one corner to the opposite corner, dividing the rectangle into two right triangles. What is the area of each triangle, and does the sum of their areas equal to the area of the rectangle?", 'First, to find the area of the rectangle, we multiply the length by the width. So, the area of the rectangle is 15 units * 8 units = 120 square units.\n\nNext, to find the area of each triangle, we use the formula 1/2 * base * height, where the base and height are the length and width of the rectangle. So, the area of each triangle is 1/2 * 15 units * 8 units = 60 square units.\n\nFinally, adding the areas of the two triangles, we get 60 square units + 60 square units = 120 square units. Thus, the sum of the areas of the two triangles equals the area of the rectangle.'), ('import data.real.basic\n\n-- Define the problem\ndef equation := λ x : ℝ, 3*x - 7 = 8\n\n-- The solution to the equation\ndef solution := 5\n\n-- Proof that the solution is correct\nlemma solution_is_correct : equation solution :=\nbegin\n  unfold equation solution,\n  simp,\n  norm_num,\nend', 'Given the equation 3x - 7 = 8, find the value of x.', 'To solve for x, we should first move the -7 to the other side of the equation by adding 7 to both sides. This gives 3x = 8 + 7, which simplifies to 3x = 15. Then, we divide both sides of the equation by 3 to solve for x. This gives x = 15/3, so x = 5.'), ('import data.real.basic\n\n-- Defining the area of a rectangle\ndef rectangle_area (length width : ℝ) : ℝ := length * width\n\n-- Proving the problem\nexample : (rectangle_area 8 6) - (rectangle_area 6 4) = 24 :=\nbegin\n  -- Compute the area of the room\n  have h1 : rectangle_area 8 6 = 48, \n    { unfold rectangle_area, norm_num, },\n  -- Compute the area of the rug\n  have h2 : rectangle_area 6 4 = 24, \n    { unfold rectangle_area, norm_num, },\n  -- Compute the area of the room not covered by the rug\n  rw [h1, h2],\n  norm_num,\nend', 'A rectangular room has a length of 8 meters and a width of 6 meters. A rectangular rug is placed inside the room. The rug has a length of 6 meters and a width of 4 meters. What is the area of the floor that is not covered by the rug?', 'The area of a rectangle is given by the product of its length and width. We first find the area of the entire room by multiplying its length (8 meters) by its width (6 meters), which gives us 48 square meters. \n\nNext, we find the area of the rug by multiplying its length (6 meters) by its width (4 meters), which gives us 24 square meters.\n\nFinally, we find the area of the floor not covered by the rug by subtracting the area of the rug from the area of the room. Thus, 48 square meters - 24 square meters = 24 square meters. Therefore, the area of the floor that is not covered by the rug is 24 square meters.'), ('import data.real.basic\n\n-- Define the function\ndef f (x : ℝ) := 3*x^2 - 6*x + 5\n\n-- Statement of the problem\nlemma non_neg_at_one : f 1 ≥ 0 :=\nbegin\n  -- Calculation\n  unfold f,\n  norm_num,\nend', 'A tank of water is being filled at a rate of r(t) = 3t^2 - 6t + 5 gallons per minute, where t is the time in minutes. What is the total volume of water that enters the tank from t = 1 to t = 4 minutes?', 'Given the rate function r(t) = 3t^2 - 6t + 5, we need to find the total volume of water that enters the tank from t = 1 to t = 4. This is a problem of integration, specifically definite integration, where we integrate the rate function from the lower limit t = 1 to the upper limit t = 4. \n\nThe total volume of water is given by the integral ∫ from 1 to 4 of r(t) dt = ∫ from 1 to 4 of (3t^2 - 6t + 5) dt. \n\nPerforming the integration, we get [t^3 - 3t^2 + 5t] evaluated from 1 to 4. Substituting the limits of integration, we get (64 - 48 + 20) - (1 - 3 + 5) = 36 gallons. \n\nSo, the total volume of water that enters the tank from t = 1 to t = 4 minutes is 36 gallons.'), ("import data.real.basic\n\n-- The line is represented by the equation y = 2x + 3\ndef line (x : ℝ) : ℝ := 2*x + 3\n\n-- We want to find the y-coordinate when x = 4\ndef x := 4\n\n-- Substituting x into the equation gives y = 2(4) + 3\ntheorem find_y : line x = 11 :=\nbegin\n  unfold line, -- unroll the definition of 'line'\n  unfold x, -- unroll the definition of 'x'\n  norm_num, -- simplify the arithmetic to conclude y = 11\nend", 'Given a line in the xy-plane represented by the equation y = 2x + 3, calculate the y-coordinate of a point that lies on the line when x = 4.', 'To find the y-coordinate of the point that lies on the line when x = 4, we substitute x = 4 into the equation of the line. The equation of the line is y = 2x + 3. Substituting x = 4 into the equation, we have y = 2(4) + 3, which simplifies to y = 8 + 3, and further simplifies to y = 11. Therefore, the y-coordinate of the point that lies on the line when x = 4 is 11.'), ('import data.real.basic\n\n-- set up the variables\nnoncomputable def john := (3.5 : ℝ)\nnoncomputable def mary := (1.2 : ℝ)\n\n-- prove the statement\nexample : john + mary = 4.7 :=\nbegin\n  rw john,\n  rw mary,\n  norm_num,\nend', 'John and Mary are in a race. John ran 3.5 miles and Mary ran 1.2 miles. How many total miles did they run?', 'To find the total miles that John and Mary ran, we simply need to add the miles that John ran to the miles that Mary ran. John ran 3.5 miles and Mary ran 1.2 miles. So, their total distance is 3.5 miles + 1.2 miles = 4.7 miles.'), ('import data.list.basic\n\ndef count_books_read : ℕ → list ℕ → ℕ\n| _ [] := 0\n| n (m :: ms) := (if n = m then 1 else 0) + count_books_read n ms\n\n#eval count_books_read 5 [4, 5, 5, 4, 3, 5, 4, 4, 5, 3, 6, 5, 4, 5, 4, 3, 5, 4, 5, 5] -- output should be 8', 'The teacher asked the students in a class to note down the number of books each one read in the past month. The data collected was as follows: 4, 5, 5, 4, 3, 5, 4, 4, 5, 3, 6, 5, 4, 5, 4, 3, 5, 4, 5, 5. The teacher then drew a line plot to represent the data. How many students read 5 books in the past month according to the line plot?', "From the given data, we can see that the number '5' appears 8 times. Therefore, according to the line plot, 8 students read 5 books in the past month."), ('def calculate_area (length : ℕ) (width : ℕ) : ℕ := length * width\ndef subtract_areas (area1 : ℕ) (area2 : ℕ) : ℕ := area1 - area2\n\nopen nat\n#check calculate_area\n#check subtract_areas\n\nexample : subtract_areas (calculate_area 7 4) (calculate_area 3 2) = 22 :=\nbegin\n  rw calculate_area,\n  rw subtract_areas,\n  refl,\nend', 'Emma has a rectangular garden that is 7 feet long and 4 feet wide. She wants to add a similar, but smaller rectangular flower bed inside her garden. The flower bed is 3 feet long and 2 feet wide. What is the remaining area in her garden after she adds the flower bed?', "To find the remaining area in Emma's garden after she adds the flower bed, we first need to calculate the area of the garden and the flower bed separately. The area of a rectangle is found by multiplying its length by its width. Therefore, the area of the garden is 7 feet * 4 feet = 28 square feet, and the area of the flower bed is 3 feet * 2 feet = 6 square feet. Then, we subtract the area of the flower bed from the area of the garden to find the remaining area, which is 28 square feet - 6 square feet = 22 square feet. So, the remaining area in Emma's garden after she adds the flower bed is 22 square feet."), ('import data.real.basic\nimport data.complex.exponential\n\nopen real\n\n-- Given values\ndef μ := 100 -- mean arrivals per hour\ndef σ := 10 -- standard deviation per hour\ndef h := 5 -- number of hours\n\n-- Mean arrivals in 5 hours\ndef μ_total : ℝ := μ * h\n\n-- Standard deviation for 5 hours\nnoncomputable def σ_total : ℝ := σ * sqrt(h)\n\n-- 95% confidence interval for normal distribution\nnoncomputable def CI : ℝ × ℝ := (μ_total - 1.96 * σ_total, μ_total + 1.96 * σ_total)\n\n-- Print CI\n#check CI', 'To determine the confidence interval, we first need to find the mean and standard deviation for the total number of arrivals in 5 hours. \n\nThe mean number of arrivals in 5 hours is simply 5 times the mean number of arrivals per hour, or 5 * 100 = 500 people. \n\nThe standard deviation of the total number of arrivals in 5 hours is given by the standard deviation of the arrivals per hour multiplied by the square root of the number of hours, or 10 * sqrt(5). \n\nThe 95% confidence interval for a normal distribution is given by the formula mean ± 1.96 * standard deviation. \n\nSo, the confidence interval for the number of arrivals is 500 ± 1.96 * 10 * sqrt(5).', "```lean\nline 1 import data.real.basic\nline 2 import data.complex.exponential\nline 3 \nline 4 open real\nline 5 \nline 6 -- Given values\nline 7 def μ := 100 -- mean arrivals per hour\nline 8 def σ := 10 -- standard deviation per hour\nline 9 def h := 5 -- number of hours\nline 10 \nline 11 -- Mean arrivals in 5 hours\nline 12 def μ_total : ℝ := μ * h\nline 13 \nline 14 -- Standard deviation for 5 hours\nline 15 def σ_total : ℝ := σ * sqrt(h)\nline 16 \nline 17 -- 95% confidence interval for normal distribution\nline 18 def CI : ℝ × ℝ := (μ_total - 1.96 * σ_total, μ_total + 1.96 * σ_total)\nline 19 \nline 20 #reduce CI\n```\nThis Lean 3 code will output the confidence interval for the number of arrivals in the next 5 hours.\n\n    # Error messages for Formal proof (1) from Lean prover:\n    line 15, column 4: missing 'noncomputable' modifier, definition 'σ_total' depends on 'real.sqrt'\n\nline 18, column 4: missing 'noncomputable' modifier, definition 'CI' depends on 'real.division_ring'\n\nline 20, column 0: (deterministic) timeout\n\n    # Formal proof (2) in Lean 3:"), ('def calculate_area (length : ℕ) (width : ℕ) : ℕ := length * width\ndef double_area (area : ℕ) : ℕ := area * 2\n\ndef jenny_garden : ℕ :=\nlet length := 23 in\nlet width := 31 in\nlet current_area := calculate_area length width in\ndouble_area current_area\n-- returns 1426', 'Jenny has a rectangular garden that is 23 feet long and 31 feet wide. She wants to double the size of her garden. How many square feet will her garden be if she doubles its size?', "First, we need to find the current area of Jenny's garden. The area of a rectangle can be calculated by multiplying the length by the width. So, we multiply 23 feet by 31 feet, which gives us 713 square feet. \n\nJenny wants to double the size of her garden, so we multiply the current area by 2. That gives us 1426 square feet. So, if Jenny doubles the size of her garden, it will be 1426 square feet."), ("import data.real.basic\n\n-- Define the profit function\ndef P (x : ℝ) := 5 * x\n\n-- Define the derivative of the profit function\ndef P' (x : ℝ) := 5\n\n-- Proof that the derivative is always positive\nlemma derivative_positive : ∀ x : ℝ, P' x > 0 :=\nbegin\n  intro x,\n  unfold P',\n  linarith,\nend\n\n-- Proof that the profit function is increasing\nlemma profit_increasing : ∀ x y : ℝ, x < y → P x < P y :=\nbegin\n  intros x y h,\n  unfold P,\n  linarith,\nend\n\n-- Proof that to maximize profit, the company should produce and sell as many widgets as possible\ntheorem maximize_profit : ∀ x y : ℝ, x ≤ y → P x ≤ P y :=\nbegin\n  intros x y h,\n  by_cases h' : x < y,\n  { exact le_of_lt (profit_increasing x y h') },\n  { have h'' : x = y := le_antisymm h (le_of_not_gt h'),\n    rw h'',\n  },\nend", 'A company produces widgets at a cost of $5 per widget. The company sells the widgets for $10 each. If the company produces and sells `x` widgets, then its profit `P(x)` is given by `P(x) = 10x - 5x`. The company wants to maximize its profit. Find the number of widgets `x` that the company should produce and sell to maximize its profit.', "The company's profit function is `P(x) = 5x`. To find the maximum profit, we need to find the derivative of the profit function and set it equal to zero. The derivative of `P(x)` is `P'(x) = 5`, which is a constant and does not equal to zero for any `x`. Hence, there are no critical points. \n\nSince the derivative is positive for all `x`, the function `P(x)` is increasing for all `x`. Thus, the company's profit increases as the number of widgets it produces and sells increases. Hence, to maximize its profit, the company should produce and sell as many widgets as possible."), ('import data.real.basic\n\n-- defining the function for distance traveled based on time\ndef distance_traveled (speed : ℝ) (time : ℝ) : ℝ := speed * time\n\n-- defining the speed based on given data\nnoncomputable def speed : ℝ := 80 / 2\n\n-- proof begins here\nexample (time : ℝ) (h_time : time = 5) : distance_traveled speed time = 200 :=\nbegin\n  rw h_time, -- replace time with 5\n  unfold distance_traveled, -- replace distance_traveled with speed * time\n  unfold speed, -- replace speed with 80 / 2\n  norm_num, -- simplifies the numerical calculation\nend', 'If a car travels at a constant speed, the distance it travels is directly proportional to the time it travels. If the car travels 80 miles in 2 hours, how far will it travel in 5 hours?', "The speed of the car is constant. So it travels at the same rate for every hour. This means the distance it travels is directly proportional to the time it travels. If the car travels 80 miles in 2 hours, it's traveling at a rate of 80 miles / 2 hours = 40 miles per hour. Therefore, in 5 hours, the car will travel 40 miles/hour * 5 hours = 200 miles."), ('import data.real.basic\n\n-- define the function f\ndef f (x : ℝ) : ℝ := 3*x + 2\n\n-- calculate f(4) and f(2)\ndef f4 := f 4 -- this is 14\ndef f2 := f 2 -- this is 8\n\n-- prove that f(4) - f(2) = 6\nexample : f4 - f2 = 6 :=\nbegin\n  unfold f4,\n  unfold f2,\n  unfold f,\n  norm_num,\nend', "Let's define a function f(x) = 3x + 2. What is the value of f(4) - f(2)?", 'To solve this problem, first we need to substitute x = 4 into the function f(x), we get f(4) = 3*4 + 2 = 14. Then we substitute x = 2 into the function f(x), we get f(2) = 3*2 + 2 = 8. Finally, we subtract f(2) from f(4), which is 14 - 8 = 6. So f(4) - f(2) = 6.'), ("import data.real.sqrt\nimport data.real.basic\n\nopen real\n\n-- let's define the variables\nnoncomputable def mean := (4:ℝ)\nnoncomputable def std_dev := (1.5:ℝ)\nnoncomputable def alice_hobby_time := sqrt 3\n\n-- calculating the number of standard deviations\nnoncomputable def number_of_std_devs := (mean - alice_hobby_time) / std_dev\n\n-- displaying the result using print statement\n#check number_of_std_devs", "In a high school, a survey was conducted among the students to find out how much time they spend daily on their hobbies. The survey results showed that the mean time spent is 4 hours and the standard deviation is 1.5 hours. Alice, a high school student, spends √3 hours daily on her hobbies. How many standard deviations is Alice's hobby time away from the mean?", "To find how many standard deviations Alice's hobby time is away from the mean, we first need to calculate the difference between Alice's hobby time and the mean, which is 4 - √3 hours. Then, we divide this difference by the standard deviation, which is 1.5 hours. So, Alice's hobby time is (4 - √3) / 1.5 standard deviations away from the mean."), ('import data.real.basic\n\ndef distance (x₁ y₁ x₂ y₂ : ℝ) : ℝ := ((x₂ - x₁) ^ 2 + (y₂ - y₁) ^ 2) ^ 0.5\n\nexample : distance (-3) 4 5 (-6) = (164) ^ 0.5 :=\nbegin\n  unfold distance,\n  norm_num,\nend', 'In a coordinate plane, point A is at (-3, 4) and point B is at (5, -6). Calculate the distance between point A and B.', 'To find the distance between two points on a coordinate plane, we use the distance formula derived from the Pythagorean theorem. The distance between point A(x₁, y₁) and point B(x₂, y₂) is given by √[(x₂ - x₁)² + (y₂ - y₁)²]. \n\nHere, x₁ = -3, y₁ = 4, x₂ = 5, and y₂ = -6.\n\nSubstituting these values into the distance formula, we get:\n√[(5 - (-3))² + (-6 - 4)²] = √[(8)² + (-10)²] = √[64 + 100] = √164. \n\nSo, the distance between point A and point B is √164.'), ('def rectangle_perimeter (length : ℕ) (width : ℕ) : ℕ := 2 * (length + width)\n\ndef solve : ℕ :=\nlet length := 7 in\nlet width := 5 in\nrectangle_perimeter length width\n#eval solve  -- output is 24', 'Amy has a rectangular garden with a length of 7 feet and a width of 5 feet. How much fencing does she need to surround the garden completely?', 'To find out how much fencing Amy needs, we need to calculate the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2 * (length + width). So, we substitute the given values into the formula: 2 * (7 feet + 5 feet) = 2 * 12 feet = 24 feet. Therefore, Amy needs 24 feet of fencing to surround her garden completely.'), ('import data.real.basic\n\n-- define the initial amount of money, the cost of the toy car, and the number of people to split the remaining money\nnoncomputable def initial_amount : ℝ := 7.5\nnoncomputable def cost_of_toy : ℝ := 3.2\nnoncomputable def number_of_people : ℝ := 2\n\n-- calculate the amount of money each person gets\nnoncomputable def amount_each_gets : ℝ := (initial_amount - cost_of_toy) / number_of_people\n\n-- prove that each person gets 2.15 dollars\nexample : amount_each_gets = 2.15 :=\nbegin\n  unfold amount_each_gets,\n  unfold initial_amount,\n  unfold cost_of_toy,\n  unfold number_of_people,\n  norm_num,\nend', 'John has 7.5 dollars in his pocket. He spends 3.2 dollars on a toy car and then he equally splits the remaining money with his younger brother. How much money does each brother get?', "First, let's subtract the cost of the toy car from the total amount of money John has. This gives 7.5 - 3.2 = 4.3 dollars. Then, when John splits the remaining money with his brother, each of them gets 4.3 / 2 = 2.15 dollars. Therefore, each brother gets 2.15 dollars."), ('def total_students : ℕ := 25\ndef apple_lovers : ℕ := 7\ndef banana_lovers : ℕ := 5\ndef orange_lovers : ℕ := 6\ndef grape_lovers : ℕ := total_students - (apple_lovers + banana_lovers + orange_lovers)\n\n#eval grape_lovers \n-- output is 7', "In Ms. Brown's 3rd-grade class, there are 25 students. She asked her students to pick their favorite fruit from a list containing apples, bananas, oranges, and grapes. 7 students picked apples, 5 picked bananas, 6 picked oranges, and the rest picked grapes. How many students picked grapes as their favorite fruit?", 'To find out how many students picked grapes as their favorite fruit, we need to subtract the number of students who picked apples, bananas, and oranges from the total number of students in the class. The total number of students who picked apples, bananas, or oranges is 7 + 5 + 6 = 18. Subtraction of 18 from the total number of students (25) gives us 7. Therefore, 7 students picked grapes as their favorite fruit.'), ("import data.real.basic\n\nlemma diff_eq_solution_constant (x : ℝ) (y : ℝ) (h : 2*y*(x/y) = 2*x) : \n  ∃ C : ℝ, y^2 = x^2 + C :=\nbegin\n  use y^2 - x^2,\n  rw add_sub_cancel'_right,\nend\n\nlemma constant_proof (C : ℝ) (x : ℝ) (h : C = C) : C = C :=\nbegin\n  exact rfl,\nend", 'If the solution to the differential equation dy/dx = x/y is y^2 = x^2 + C, then demonstrate that C is a constant.', 'The solution to the differential equation dy/dx = x/y is given as y^2 = x^2 + C. To prove that C is a constant, we can take the derivative of both sides of this equation with respect to x. \nOn the left side, using the chain rule, we get 2y*(dy/dx). On the right side, we get 2x. Substituting dy/dx = x/y into the left side, we get 2y*(x/y), which simplifies to 2x. Since the derivative of C with respect to x is zero (because C is a constant), we can see that the equation holds true, thus proving that C is indeed a constant.'), ('import data.real.basic\n\nopen real\n\n#check mul_neg\n\nexample : (-0.25 : ℝ) * 4 = -1 :=\nbegin\n  norm_num,\nend', 'John has -$0.25 in his pocket. He found a magical money multiplier that multiplies the amount of money in his pocket by 4. How much money does he have after using the magical money multiplier?', 'To find out how much money John has after using the magical money multiplier, we need to calculate -$0.25 times 4. Multiplying a negative number by a positive number gives a negative result. Therefore, John will have -$1.00 after using the magical money multiplier.'), ('open nat\n\n-- Define the total number of apples\ndef total_apples : ℕ := 36\n\n-- Define the total number of friends\ndef total_friends : ℕ := 6\n\n-- Prove that each friend gets 6 apples\nexample : total_apples / total_friends = 6 :=\nbegin\n  -- This is a direct computation,\n  -- so we can use the `refl` tactic\n  refl,\nend', 'John has 36 apples. He wants to divide them equally among his 6 friends. How many apples will each friend get?', 'If John has 36 apples and he divides them equally among his 6 friends, each friend will get 36 ÷ 6 = 6 apples.'), ('import data.real.basic\n\n-- Define the initial price and the discount\nnoncomputable def initial_price := (50 : ℝ)\nnoncomputable def discount := (20/100 : ℝ)\n\n-- Calculate the discount amount\nnoncomputable def discount_amount := initial_price * discount\n\n-- Calculate the final price\nnoncomputable def final_price := initial_price - discount_amount\n\nexample : final_price = 40 :=\nbegin\n  -- Simplify the definitions\n  unfold final_price, -- gives: final_price = initial_price - discount_amount\n  unfold discount_amount, -- gives: discount_amount = initial_price * discount\n  -- Substitute the definitions into the equation\n  rw [initial_price, discount],\n  -- Perform the calculation\n  norm_num, -- gives: final_price = 40\nend', "If a shirt costs $50 and there's a 20% discount on it, what is the final price?", 'We first need to find out how much money the 20% discount represents. We know that 20% of $50 is $10. Therefore, after the discount is applied, the shirt should cost $50 - $10 = $40.'), ('import data.real.basic\n\ndef rectangle_area (length width : ℝ) : ℝ := length * width\ndef square_area (side : ℝ) : ℝ := side * side\n\nopen_locale classical\n\nexample : rectangle_area 7.5 5.5 - square_area 2.5 = 35 :=\nbegin\n  unfold rectangle_area,\n  unfold square_area,\n  norm_num,\nend', 'Jenny has a rectangular garden with a length of 7.5 meters and a width of 5.5 meters. She also has a square sandbox with sides measuring 2.5 meters. She decided to place the sandbox in one corner of the garden. How much area (in square meters) of the garden is left uncovered by the sandbox?', "First, we need to calculate the area of the rectangular garden and the square sandbox separately. The area of a rectangle is calculated by multiplying its length by its width. Thus, the area of Jenny's garden is 7.5 meters * 5.5 meters = 41.25 square meters. The area of a square is calculated by squaring its side length. Therefore, the area of the sandbox is 2.5 meters * 2.5 meters = 6.25 square meters. To find the area of the garden left uncovered by the sandbox, we subtract the area of the sandbox from the area of the garden. Therefore, the area of the garden not covered by the sandbox is 41.25 square meters - 6.25 square meters = 35 square meters."), ('import data.real.basic\n\nnoncomputable def P_A := (300 : ℝ) / 500\nnoncomputable def P_B := (200 : ℝ) / 500\nnoncomputable def P_A_and_B := (50 : ℝ) / 500\nnoncomputable def P_A_or_B := P_A + P_B - P_A_and_B\n\nexample : P_A_or_B = 0.9 :=\nbegin\n  unfold P_A_or_B,\n  unfold P_A,\n  unfold P_B,\n  unfold P_A_and_B,\n  norm_num\nend', 'In a high school, there are 500 students. Among them, 300 students play soccer, 200 students play basketball, and 50 students play both sports. \n\nWe define the following events:\n- Event A: a randomly chosen student plays soccer.\n- Event B: a randomly chosen student plays basketball.\n\nFind the probability of the union of events A and B (P(A ∪ B)).', 'For the union of two events, we can apply the formula: P(A ∪ B) = P(A) + P(B) - P(A ∩ B).\n\nIn this problem, we can calculate:\n- P(A): the probability that a randomly chosen student plays soccer, which is 300/500 = 0.6.\n- P(B): the probability that a randomly chosen student plays basketball, which is 200/500 = 0.4.\n- P(A ∩ B): the probability that a randomly chosen student plays both sports, which is 50/500 = 0.1.\n\nSubstitute these values into the formula, we get P(A ∪ B) = 0.6 + 0.4 - 0.1 = 0.9. \n\nSo, the probability that a randomly chosen student plays either soccer or basketball or both is 0.9.'), ('import data.real.basic\n\nopen real\n\n-- Definitions\nnoncomputable def money_in_pocket : ℝ := 2.75\nnoncomputable def money_on_street : ℝ := 1.25\n\n-- Theorem\ntheorem total_money : money_in_pocket + money_on_street = 4.00 :=\nbegin\n    have h1 : money_in_pocket = 2.75, by refl,\n    have h2 : money_on_street = 1.25, by refl,\n    rw [h1, h2],\n    norm_num,\nend', 'If you have $2.75 in your pocket and then you find $1.25 on the street, how much money do you have in total?', 'To find out how much money you have in total, you need to add $2.75 and $1.25 together. When adding these two amounts, you add the cents to the cents and the dollars to the dollars. So, $0.75 + $0.25 equals $1.00 and $2.00 + $1.00 equals $3.00. Therefore, you have $3.00 + $1.00 which is $4.00 in total.'), ("import data.real.basic\n\nopen real\n\n-- defining the function f(x) = 3x^2 + 5x + 2\ndef f (x : ℝ) : ℝ := 3*x^2 + 5*x + 2\n\n-- defining the derivative of the function f(x)\ndef f' (x : ℝ) : ℝ := 6*x + 5\n\n-- proof that the derivative of f at 1 is 11\nexample : f' 1 = 11 :=\nbegin\n  unfold f', -- expands the definition of f'\n  norm_num,  -- simplifies numerical calculations\nend", "Let's consider a function f(x) = 3x^2 + 5x + 2. Find the derivative of f(x) at x = 1.", 'The derivative of a function at a particular point can be found by using the power rule of differentiation, which states that the derivative of x^n with respect to x is n*x^(n-1), and the sum rule, which states that the derivative of a sum of functions is the sum of their derivatives.\n\nUsing these rules, we can find the derivative of f(x) = 3x^2 + 5x + 2. The derivative of 3x^2 with respect to x is 2*3x = 6x. The derivative of 5x with respect to x is 5. The derivative of a constant (in this case, 2) is 0. Therefore, the derivative of f(x) is 6x + 5.\n\nNow, we substitute x = 1 into the derivative function to find the derivative at x = 1. Substituting x = 1 gives us 6*1 + 5 = 11.\n\nTherefore, the derivative of f(x) at x = 1 is 11.'), ('import data.real.basic\n\nexample : (1 / 3) * (2 / 5) = 2 / 15 :=\nbegin\n  norm_num\nend', 'Prove that the result of multiplying 1/3 by 2/5 is 2/15.', 'First, we multiply the numerators of the fractions together. The numerator of our first fraction is 1 and the numerator of our second fraction is 2. When we multiply these two numbers together, we get 2. \n\nNext, we multiply the denominators together. The denominator of our first fraction is 3 and the denominator of our second fraction is 5. When we multiply these two numbers together, we get 15. \n\nSo, our final result is 2/15.'), ("import data.real.basic\n\n-- Let's denote the amount of money each person contributed as x\nvariable (x : ℝ)\n\n-- According to the problem, John and his 4 friends, 5 people in total, contributed $100\n-- So we have the equation: 5x = 100\ndef eqn (x : ℝ) : Prop := 5*x = 100\n\n-- To solve for x, we divide both sides of the equation by 5\ndef x_sol (x : ℝ) : Prop := x = 100 / 5\n\n-- Now we can declare that the solution to the equation is x = $20\ntheorem solution : ∀ (x : ℝ), x_sol x ↔ eqn x := \nbegin \n  intro x,\n  split,\n  { intro h1,\n    rw x_sol at h1,\n    rw eqn,\n    linarith, },\n  { intro h2,\n    rw eqn at h2,\n    rw x_sol,\n    linarith, },\nend", 'John and his friends are collecting funds for a charity event. Each of them contributed the same amount. If John and his 4 friends contributed a total of $100, how much did each person contribute?', "Let's denote the amount of money each person contributed as a variable x. According to the problem, John and his 4 friends, 5 people in total, contributed the same amount, which added up to $100. \n\nSo, we can set up the equation: 5x = 100. \n\nTo solve for x, we divide both sides of the equation by 5. This gives us x = 100 / 5 = $20. \n\nSo, each person contributed $20."), ('import data.real.basic\n\n-- The problem can be modeled as a linear equation\nexample : ∃ (x : ℝ), 5 * x - 3 * x = 24 ∧ 8 * x = 96 :=\nbegin\n  use 12,\n  split,\n  -- Proving the first part of the equation\n  { linarith, },\n  -- Proving the second part of the equation\n  { linarith, },\nend', 'In a certain class, the ratio of boys to girls is 5:3. If there are 24 more boys than girls, how many students are there in total in the class?', 'First, we know that the difference between the number of boys and girls is equal to the difference in the ratio multiplied by a common factor. We can express this as follows:\n\n5x - 3x = 24\n\nWhere x is the common factor. \n\nSolving for x, we get:\n\n2x = 24\n\nx = 12\n\nThe total number of students in the class is then calculated by adding the number of boys and girls together:\n\nTotal = 5x + 3x = 8x = 8 * 12 = 96\n\nSo, there are 96 students in total in the class.'), ('import data.real.basic\n\nexample : (0.12 : ℝ) + (0.21 : ℝ) = (0.33 : ℝ) :=\nbegin\n  norm_num,\nend', 'Given two decimal numbers, 0.12 and 0.21. Prove that the sum of these two numbers is equal to 0.33.', 'The sum of two decimal numbers is calculated by adding the corresponding place values together. For the given numbers, 0.12 and 0.21, we add the tenths place (0.1 and 0.2) and the hundredths place (0.02 and 0.01) separately. The sum of the tenths place values is 0.3 and the sum of the hundredths place values is 0.03. The total sum of these two numbers is therefore 0.33.'), ('def calculate_volume (length : ℕ) (width : ℕ) (height : ℕ) : ℕ := length * width * height\n\n#eval calculate_volume 10 8 5 ', 'Sally has a fish tank that is 10 inches long, 8 inches wide, and 5 inches high. She wants to know the volume of her fish tank. What is the volume of the fish tank in cubic inches?', 'The volume of a rectangular prism (like the fish tank in this case) can be found by multiplying the length, width, and height together. So, in this case, the volume of the fish tank is 10 inches (length) times 8 inches (width) times 5 inches (height), which equals 400 cubic inches. Therefore, the volume of the fish tank is 400 cubic inches.'), ('import data.real.basic\n\n-- defining the problem\ndef problem (x : ℝ) := 2*x - 3 > 1 ∧ x + 4 < 8\n\n-- defining the solution\ndef solution (x : ℝ) := 2 < x ∧ x < 4\n\n-- proving the problem is equivalent to the solution\nexample : ∀ x, problem x ↔ solution x :=\nbegin\n  intro x,\n  -- unfolding the definitions\n  unfold problem solution,\n  -- splitting the conjunctions into separate goals\n  split,\n  { rintro ⟨h1, h2⟩,\n    -- solving the inequalities separately\n    split,\n    { linarith, },\n    { linarith, }, },\n  { rintro ⟨h1, h2⟩,\n    split,\n    { linarith, },\n    { linarith, }, },\nend', 'If 2x - 3 > 1 and x + 4 < 8, find the solution set for x.', 'We can start solving the inequalities separately. \n\nFor the inequality 2x - 3 > 1, we can first add 3 to both sides to isolate the term with x, resulting in 2x > 4. Then, we divide both sides by 2 to solve for x, which gives us x > 2.\n\nFor the second inequality x + 4 < 8, we can subtract 4 from both sides to isolate x, which gives us x < 4.\n\nSo, the solution set for x is the intersection of x > 2 and x < 4, which is 2 < x < 4.'), ('import data.nat.basic\n\n-- Define the exponential function\ndef exp (x : ℕ) := 2^x\n\n-- Prove the problem\nexample : exp 6 = 64 :=\nbegin\n  -- This follows directly from the definition of exponentiation\n  rw exp,\n  exact rfl,\nend', 'If a bacterium can double every 10 minutes in ideal conditions, how many bacteria will there be after 1 hour, if we start with one bacterium?', 'The problem describes a situation of exponential growth where the quantity doubles every certain amount of time. In this case, the number of bacteria doubles every 10 minutes. \n\nSince there are 6 intervals of 10 minutes in 1 hour, the bacterium will double 6 times. If we start with one bacterium, after 1 hour there will be 2^6 = 64 bacteria.'), ('import data.real.basic\n\nexample (x : ℝ) (h : x = 4) : 2 * x - 3 = 5 :=\nbegin\n  rw h,\n  norm_num,\nend', 'Let x be a real number. Prove that if x = 4, then the expression 2x - 3 equals 5.', 'If we substitute x = 4 into the expression 2x - 3, we get 2*4 - 3, which equals 8 - 3, and that equals 5. So, the expression 2x - 3 equals 5 when x equals 4.'), ('def convert_feet_to_inches (ft : ℕ) : ℕ := ft * 12\n\nexample : convert_feet_to_inches 15 = 180 := rfl\nexample : convert_feet_to_inches 12 = 144 := rfl', 'Jenny has a rectangular garden that is 15 feet long and 12 feet wide. She wants to convert the measurements to inches to work on a detailed plan for planting. How many inches long and wide is her garden?', 'To convert the measurements from feet to inches, we need to know that 1 foot equals 12 inches. Thus, to find out how many inches long her garden is, we multiply the length in feet by 12. So, 15 feet equals 180 inches. Similarly, to find out the width in inches, we multiply the width in feet by 12. So, 12 feet equals 144 inches. Therefore, her garden is 180 inches long and 144 inches wide.'), ('import data.real.basic\n\n-- define the function\ndef f (x : ℝ) := 3 * x^2\n\n-- define the antiderivative\ndef F (x : ℝ) := x^3\n\n-- proof\nexample : (F 3 - F 0) = 27 :=\nbegin\n  -- calculate the difference\n  calc F 3 - F 0 = 3^3 - 0^3 : rfl\n  ... = 27 : by norm_num,\nend', 'Given the continuous function f(x) = 3x^2 on the interval [0, 3], calculate the area under the curve from x = 0 to x = 3.', 'The area under the curve of a function from a to b can be calculated by the definite integral from a to b of the function. Therefore, the area under the curve of f(x) = 3x^2 from x = 0 to x = 3 is calculated by ∫ from 0 to 3 of 3x^2 dx. \n\nThe antiderivative of 3x^2 is x^3. Evaluating x^3 from 0 to 3 gives 3^3 - 0^3 = 27. Thus, the area under the curve is 27.'), ('variables (Tom John : ℕ)\n\n-- Tom has 20 apples\ndef Tom_apples := 20\n\n-- John has 50% more apples than Tom\ndef John_apples := Tom_apples + Tom_apples / 2\n\nexample : John_apples = 30 :=\nbegin\n  unfold John_apples,\n  rw Tom_apples,\n  exact dec_trivial,\nend', 'John has 50% more apples than Tom. If Tom has 20 apples, how many apples does John have?', 'Since John has 50% more apples than Tom and Tom has 20 apples, we can calculate the number of apples John has by adding 50% of 20 to 20. 50% of 20 is 10, so John has 20 + 10 = 30 apples.'), ('import data.real.basic\n\nvariables (a b : ℝ) (ha : a ≠ 0) \nvariables (f : ℝ → ℝ) (h : ∀ x, f x = a * x + b)\nvariables (x1 x2 : ℝ) (h12 : x1 ≠ x2)\n\ninclude ha h h12\n\ntheorem slope_formula : f x2 - f x1 = a * (x2 - x1) :=\nbegin\n  rw [h x2, h x1],\n  ring,\nend', "Given a linear function f(x) = ax + b, where a and b are real numbers, and a ≠ 0. Let the slope of this function be m (i.e., m = a). Prove that for any two different real numbers x1 and x2, the difference in the function's values at these points is proportional to the difference in these points, and the coefficient of proportionality equals the slope of the function. In other words, prove that f(x2) - f(x1) = m * (x2 - x1).", "The slope of a linear function is defined as the change in the function's value divided by the change in x, or (f(x2) - f(x1)) / (x2 - x1). Since m is the slope of the function, we have m = (f(x2) - f(x1)) / (x2 - x1). Multiply both sides of this equation by (x2 - x1), we get m * (x2 - x1) = f(x2) - f(x1), which is what we set out to prove."), ('import data.real.basic\n\n-- Define the linear function\ndef f (x : ℝ) : ℝ := 3*x + 2\n\n-- Prove the statement\nexample : f 4 = 14 :=\nbegin\n  -- Compute the value of the function\n  rw f,\n  -- Simplify the expression\n  norm_num,\nend', 'If you have a linear equation y = 3x + 2, what is the value of y when x = 4?', 'To solve this problem, we just need to replace x with 4 in the equation, and then do the calculation. \n\nStep 1: Replace x with 4 in the equation, we get y = 3*4 + 2.\nStep 2: Carry out the multiplication and addition, we get y = 12 + 2.\nStep 3: Finally, we get y = 14.\n\nSo, when x = 4, y = 14.'), ('import data.real.sqrt\n\n-- Proportion of students studying science\nnoncomputable def P : ℝ := 120 / 200\n\n-- Standard error of the proportion\nnoncomputable def SE : ℝ := real.sqrt (P * (1 - P) / 200)\n\n-- Z-score for a 95% confidence interval\nnoncomputable def Z : ℝ := 1.96\n\n-- Lower and upper bounds of the 95% confidence interval\nnoncomputable def CI_L : ℝ := P - Z * SE\nnoncomputable def CI_U : ℝ := P + Z * SE', 'Given a sample data set of 200 students, 120 of whom are studying science. What is the proportion of students studying science, and what is the 95% confidence interval for this proportion?', 'The proportion of students studying science can be calculated by dividing the number of science students by the total number of students, which is 120/200 = 0.60.\n\nTo calculate the 95% confidence interval for this proportion, we first need to calculate the standard error of the proportion. The standard error (SE) is calculated by the formula √[ P(1 - P) / n ], where P is the sample proportion and n is the sample size. Substituting the given values in, we get SE = √[ 0.60(1 - 0.60) / 200 ] = 0.035.\n\nThe 95% confidence interval is calculated by the formula P ± Z*SE, where Z is the Z-score for a 95% confidence interval, which is approximately 1.96. Substituting the values in, we get 0.60 ± 1.96*0.035 = (0.53, 0.67). Therefore, we are 95% confident that the true proportion of students studying science is between 0.53 and 0.67.'), ('import data.real.basic\nimport data.int.basic\n\n-- defining the initial conditions\ndef initial_classes : ℕ := 3\ndef students_per_initial_class : ℕ := 30\n\n-- defining the final conditions\ndef students_per_final_class : ℕ := 25\n\n-- calculating the total number of students\ndef total_students : ℕ := initial_classes * students_per_initial_class\n\n-- calculating the total number of final classes\ndef final_classes : ℕ := total_students / students_per_final_class + \n  if total_students % students_per_final_class > 0 then 1 else 0\n\n-- calculating the number of new classes formed\ndef new_classes : ℕ := final_classes - initial_classes\n\n-- output: 1\n#eval new_classes', 'A school has 3 classes for 8th grade, each class has 30 students. The school decides to reduce the number of students per class to increase individual attention. After the rearrangement, each class now has 25 students. How many new classes have been formed?', 'Initially, there were 3 classes of 30 students each, so there were 3*30 = 90 students in total. After the rearrangement, each class now has 25 students. So, the total number of classes now is 90/25 = 3.6. Since the number of classes cannot be a decimal, we must round up to the nearest whole number. Therefore, 4 classes have been formed after the rearrangement. \n\nHence, the school created 4 - 3 = 1 new class.'), ("import data.nat.basic\n\nopen nat\n\n-- define the initial number of apples Sarah has\ndef sarah_apples_init : ℕ := 7\n-- define the number of apples Sarah gave to her friend\ndef sarah_apples_given : ℕ := 3\n-- define the number of apples Sarah's mom gave to her\ndef sarah_apples_from_mom : ℕ := 5\n\n-- calculate the number of apples Sarah has after giving some to her friend\ndef sarah_apples_after_giving : ℕ := sarah_apples_init - sarah_apples_given\n-- calculate the final number of apples Sarah has after receiving some from her mom\ndef sarah_apples_final : ℕ := sarah_apples_after_giving + sarah_apples_from_mom\n\n-- The final number of apples Sarah has is 9\nexample : sarah_apples_final = 9 :=\nbegin\n  unfold sarah_apples_final,\n  unfold sarah_apples_after_giving,\n  rw add_comm,\n  refl,\nend", 'Sarah has 7 apples. She gave 3 apples to her friend and then her mom gave her 5 more. How many apples does Sarah have now?', 'Initially, Sarah has 7 apples. When she gave 3 apples to her friend, she then had 7 - 3 = 4 apples left. After her mom gave her 5 more apples, she ended up with 4 + 5 = 9 apples. Therefore, Sarah now has 9 apples.'), ('def Sam_money (s : ℕ) := s \ndef John_money (s : ℕ) := 2 * s + 7', 'John has $7 more than twice the amount of money that his friend Sam has. If we denote the amount of money Sam has as "s", express the amount of money John has in terms of "s".', 'If Sam has "s" dollars, then twice the amount of money Sam has is "2s". John has $7 more than this, so the amount of money John has is "2s + 7".'), ('open nat\ndef number_of_packs : ℕ := 5\ndef cards_in_each_pack : ℕ := 7\ndef total_cards := number_of_packs * cards_in_each_pack \n#eval total_cards \n-- Output: 35', 'Billy has 5 packs of baseball cards. Each pack contains 7 cards. How many baseball cards does Billy have in total?', 'To find out how many baseball cards Billy has in total, we need to multiply the number of packs Billy has by the number of cards in each pack. So, we take the number of packs, which is 5, and multiply it by the number of cards in each pack, which is 7. Therefore, 5 packs times 7 cards equals 35 cards. So, Billy has 35 baseball cards in total.'), ('import data.real.basic\n\nexample : (4^2 + 3^2 : ℝ) = 25 :=\nbegin\n  norm_num,\nend', "Let's use the following exponential expressions and order of operations to solve this problem:\n\n4^2 + 3^2 = ?", 'First, we calculate the exponential expressions. 4^2 equals 16, and 3^2 equals 9. \n\nThen, we add the two results together. \n\n16 + 9 equals 25.\n\nSo, 4^2 + 3^2 equals 25.'), ('import data.real.basic\n\ndef f (x : ℝ) : ℝ := 3*x + 5\n\n#eval f 2\n-- output: 11', "Let's consider a function f(x) = 3x + 5. What is the value of f(2)?", 'To find the value of the function f(x) at x = 2, we substitute x = 2 into the function. That is, we calculate f(2) = 3*2 + 5 = 6 + 5 = 11.'), ('import data.real.basic\n\ntheorem double_side_length_four_times_area \n  (a : ℝ) (h : a > 0) : (2 * a) ^ 2 = 4 * a ^ 2 :=\nbegin\n  rw mul_pow,\n  norm_num,\nend', 'Suppose we have a square with side length `a`. Show that if we double the side length of the square, the resulting area is 4 times the original area. Assume that `a` is a positive real number.', 'The area of a square is calculated by squaring the length of its side. So, the area of the original square is `a²`. If we double the side length, the new side length is `2a`. So, the area of the new square is `(2a)²`. \n\nWhen we square `2a`, we use the rule of exponents that `(2a)² = 2² * a² = 4 * a²`. This is 4 times the area of the original square, which is `a²`. Therefore, when we double the side length of a square, the resulting area is 4 times the original area.'), ('def num_beads_per_bracelet := 3\ndef num_bracelets_per_friend := 2\ndef num_friends := 5\n\ndef total_bracelets := num_bracelets_per_friend * num_friends\ndef total_beads := num_beads_per_bracelet * total_bracelets\n\n#eval total_beads  -- returns 30', 'Jenny is making bracelets for her friends. She uses 3 beads to make a single bracelet. If she decides to make 2 bracelets each for her 5 friends, how many beads will she need in total?', 'First, we need to find the total number of bracelets Jenny is making. As she is making 2 bracelets for each of her 5 friends, she will be making 2*5 = 10 bracelets in total. \nEach bracelet requires 3 beads, so to make 10 bracelets, she will need 3*10 = 30 beads in total.'), ('open int\n#check (-200 : ℤ) + (300 : ℤ) -- The result will be 100', 'John has a debt of $200. He just found a job that pays him $300 per month. How much money will he have after working for one month?', 'John starts with a debt of $200, which can be represented as -200. After earning $300, we have to add this amount to his current debt. So, we add -200 (his debt) and 300 (his earning) which equals 100. This means that after one month of work, John will have $100.'), ('def calculate_perimeter (length : ℕ) (width : ℕ) : ℕ := \n2 * (length + width)\n\nexample : calculate_perimeter 5 3 = 16 :=\nrfl', 'Jane has a rectangular garden which is 5 meters long and 3 meters wide. She wants to build a fence around it. How many meters of fencing will she need?', 'To find out how many meters of fencing Jane will need, we need to calculate the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2 * (length + width). In this case, the length is 5 meters and the width is 3 meters. So, the perimeter is 2 * (5 + 3) = 16 meters. Therefore, Jane will need 16 meters of fencing.'), ('import data.real.basic\n\n-- defining conversion factors\ndef liter_to_ml : ℝ := 1000\ndef cup_to_ml : ℝ := 250\n\n-- defining the volume of the container and the cup\ndef container_volume_l : ℝ := 5\ndef cup_volume_c : ℝ := 1\n\n-- converting the volumes to milliliters\ndef container_volume_ml : ℝ := container_volume_l * liter_to_ml\ndef cup_volume_ml : ℝ := cup_volume_c * cup_to_ml\n\n-- calculate the number of cups needed to fill the container\nnoncomputable def cups_needed : ℝ := container_volume_ml / cup_volume_ml\n\nexample : cups_needed = 20 :=\nbegin\n  unfold cups_needed,\n  unfold container_volume_ml,\n  unfold cup_volume_ml,\n  unfold container_volume_l,\n  unfold cup_volume_c,\n  unfold liter_to_ml,\n  unfold cup_to_ml,\n  norm_num,\nend', 'John has a container that can hold 5 liters of water. If he wants to fill the container with cups of water, and knowing that each cup can hold 250 milliliters, how many cups does John need to fill the container completely?', 'To solve this problem, we need to convert the liters to milliliters because the volume of the cup is given in milliliters. We know that 1 liter is equivalent to 1000 milliliters. Hence, the volume of the container in milliliters is 5 liters * 1000 milliliters/liter = 5000 milliliters. \n\nNext, we divide the total volume of the container by the volume of one cup to find out how many cups John needs: 5000 milliliters ÷ 250 milliliters/cup = 20 cups. Thus, John needs 20 cups to fill the container completely.'), ('import data.real.basic\n\nopen real\n\n-- Define the cost function C\ndef C (x : ℝ) : ℝ := 2 * x^2 + 3 * x + 1\n\n-- Define the units sold function S\ndef S (p : ℝ) : ℝ := 200 - p^2\n\n-- Define the revenue function R\ndef R (p : ℝ) : ℝ := p * S p\n\n-- Define the profit function P\ndef P (p : ℝ) : ℝ := R p - C (S p)\n\n-- Verify the relation between P, R, C, S\nexample (p : ℝ) : P p = R p - C (S p) := rfl', 'A company is producing a new product. The production cost C in thousands of dollars, associated with producing x units of a new product is given by the function C(x) = 2x^2 + 3x + 1. The company also estimates that the number of units sold is given by the function S(p) = 200 - p^2 where p is the price of each unit in hundreds of dollars. What is the price that the company should set to maximize its profit?', 'The profit P that the company makes is the difference between the revenue R and the cost C, i.e. P = R - C. The revenue R can be calculated by multiplying the price p per unit by the number of units sold S(p), i.e. R = pS(p). Substitute S(p) = 200 - p^2 into the equation of R, we get R = p(200 - p^2) = 200p - p^3. \n\nThe profit function P can be expressed as P = R - C = 200p - p^3 - (2x^2 + 3x + 1). However, since we know that the number of units sold x is equal to S(p), we can substitute S(p) into the equation of P, and get P = 200p - p^3 - (2(S(p))^2 + 3S(p) + 1). \n\nTo find the price that maximizes the profit, we need to take the derivative of the profit function P with respect to p, set it to 0, and solve for p. The critical points we get are the possible prices that could maximize or minimize the profit. By checking the second derivative of P at these critical points, we can determine whether the profit is maximized or minimized.'), ('import data.real.basic\n\nopen real\n\n-- Defining the sequence\ndef a_n (n : ℕ) : ℝ := 3*n + 2\n\n-- Defining the transformation\nnoncomputable def T (x : ℝ) : ℝ := x / 2\n\n-- Proving the problem\nexample : T (a_n 1) = 2.5 ∧ T (a_n 2) = 4 :=\nbegin\n  split,\n  -- Proving the first coordinate\n  { unfold T a_n, norm_num, },\n  -- Proving the second coordinate\n  { unfold T a_n, norm_num, },\nend', "Consider an infinite sequence {a_n} where a_n = 3n + 2 for all n is a positive integer. Also, let's define a transformation T: R^2 -> R^2 in the plane where the coordinates under the standard basis are transformed to a new basis B = {(2, 0), (0, 2)}. \n\nWhat is the transformation T applied to the coordinate (a_1, a_2)?", 'The given sequence a_n = 3n + 2 is an arithmetic sequence. We can find the first two terms of the sequence as follows:\n- a_1 = 3*1 + 2 = 5\n- a_2 = 3*2 + 2 = 8\n\nTherefore, the coordinate (a_1, a_2) is (5, 8).\n\nThe transformation T redefines the coordinates with respect to the new basis B = {(2, 0), (0, 2)}, so we divide each of the coordinates by 2 to get the transformed coordinates. Therefore, T(5, 8) = (5/2, 8/2) = (2.5, 4).'), ('import data.nat.basic\n\nopen nat\n\ndef crayons_in_box := 7\ndef boxes := 4\n\n#eval crayons_in_box * boxes', 'Alice has 4 boxes of crayons. Each box contains 7 crayons. How many crayons does Alice have in total?', 'To find out how many crayons Alice has in total, we need to multiply the number of boxes she has by the number of crayons in each box. We know that Alice has 4 boxes and each box has 7 crayons. So we multiply 4 by 7, which gives us 28. Therefore, Alice has 28 crayons in total.'), ('open nat\n\n-- define the number of apples that Mary, Tom and John have\ndef marys_apples : ℕ := 10\ndef toms_apples : ℕ := marys_apples - 4\ndef johns_apples : ℕ := toms_apples * 2\n\nexample : johns_apples = 12 :=\nbegin\n  unfold johns_apples, -- unfold the definition of johns_apples\n  unfold toms_apples,  -- unfold the definition of toms_apples\n  rw nat.mul_comm,     -- rewrite 2*6 as 6*2\n  reflexivity          -- the proof is done\nend', 'If John has twice as many apples as Tom, and Tom has 4 apples less than Mary, and Mary has 10 apples. How many apples does John have?', 'First, we know that Mary has 10 apples. Because Tom has 4 apples less than Mary, Tom has 10 - 4 = 6 apples. Because John has twice as many apples as Tom, John has 2 * 6 = 12 apples. So John has 12 apples.'), ('def rectangle_perimeter (length : ℕ) (width : ℕ) : ℕ := 2 * (length + width)\n\nexample : rectangle_perimeter 250 150 = 800 :=\nbegin\n  unfold rectangle_perimeter,\n  refl,\nend', 'A rectangular playground has a length of 250 meters and a width of 150 meters. If the school plans to build a fence around the playground by covering its perimeter, how many meters of fencing will they need?', 'The perimeter of a rectangle is calculated as 2 * (length + width). Given that the length is 250 meters and the width is 150 meters, we add these together to get 400 meters. Multiplying this by 2, we get a total of 800 meters. Therefore, they will need 800 meters of fencing.'), ("import data.nat.basic\n\nopen nat\n\n-- check that Lean 3 knows 15 + 15 = 30\nexample : 15 + 15 = 30 := \nbegin \n    refl,\nend\n\n-- Lean 3 doesn't have a built-in function for rounding to the nearest ten, but in this case, the number is already rounded to the nearest ten.\nexample : 30 = 30 := \nbegin \n    refl,\nend", "Let's suppose that Chloe has 25 candy bars, and she gives 10 candy bars to her friend. Later, she receives another 15 candy bars from her mom. How many candy bars does Chloe have in total? Estimate the number of candy bars Chloe has to the nearest ten.", "Chloe initially has 25 candy bars, and after giving 10 to her friend, she's left with 15 candy bars. When her mom gives her another 15 candy bars, the total becomes 15 + 15 = 30. Thus, Chloe has 30 candy bars. \n\nWhen we round 30 to the nearest ten, it remains 30."), ('import data.real.basic \n\ndef original_area (length : ℝ) (width : ℝ) : ℝ := length * width \ndef new_area (length : ℝ) (width : ℝ) (increase : ℝ) : ℝ := (length + increase) * (width + increase)\n\nexample : original_area 10 12 = 120 := by norm_num [original_area]\nexample : new_area 10 12 3 = 195 := by norm_num [new_area]', 'John has a rectangular garden that measures 10 feet by 12 feet. He wants to increase the size of his garden by increasing each side by the same length. If he increases each side by 3 feet, what will be the new area of his garden?', 'The original area of the garden is 10 feet times 12 feet, which equals 120 square feet. If John increases each side by 3 feet, the new dimensions will be 13 feet by 15 feet. The new area of the garden will be 13 feet times 15 feet, which equals 195 square feet.'), ('import data.real.basic\n\n-- Proof\nexample : (1/2) * (1/3) = 1/6 :=\nbegin\n  norm_num,\nend', 'Alice has a pizza that she wants to share with her friends. She first cut the pizza into 2 equal parts and gave one part to her friend Bob. Then she cut the remaining part into 3 equal parts and gave one part to her friend Charlie. What fraction of the original pizza did Charlie get?', "According to the problem, Alice first cut the pizza into 2 equal parts, so each part is 1/2 of the pizza. Then she took the remaining half and cut it into 3 equal parts. So each of these parts is 1/3 of the half pizza, which means it's 1/3 * 1/2 = 1/6 of the original pizza. So, Charlie got 1/6 of the original pizza."), ('import data.real.basic\n\nopen real\n\n-- declare the variables\nvariables (miles : ℝ) (hours : ℝ)\n\n-- state and prove the claim\nexample (miles : ℝ) (hours : ℝ) (h₁ : miles = 1.2) (h₂ : hours = 0.6) : (miles / hours) = 2 :=\nbegin\n  rw [h₁, h₂],\n  norm_num,\nend', 'If a toy car travels 1.2 miles in 0.6 hours, how many miles does it travel in 1 hour?', 'We can solve this problem by applying the basic concept of ratios. Since the toy car travels 1.2 miles in 0.6 hours, we can express this as a ratio of 1.2 miles per 0.6 hours. To find out how many miles the toy car travels in 1 hour, we just need to multiply this ratio by 1, which is the equivalent of dividing 1.2 by 0.6. The result is 2 miles, so the toy car travels 2 miles in 1 hour.'), ('def sequence (n : ℕ) : ℕ := 3 + 2 * (n - 1)\n\n#eval sequence 100  -- outputs 201', 'In a mathematical sequence, each number is 2 more than the previous number. If the first number of the sequence is 3, what is the 100th number in the sequence?', 'This is an arithmetic sequence where the common difference (d) is 2. The first term (a) is 3. We can find the 100th term (a_100) using the formula of the nth term of an arithmetic sequence, which is: a + (n - 1)d. Substituting the given values, we get: 3 + (100 - 1)*2 = 201.'), ('import data.real.basic\n\n-- defining the function area\ndef area (length width : ℝ) : ℝ := length * width\n\n-- defining the variables\ndef garden_length : ℝ := 5\ndef garden_width : ℝ := 3\n\n-- calculating the area\ndef garden_area := area garden_length garden_width\n\n-- print the area\n#eval garden_area', 'John has a rectangular garden that is 5 meters long and 3 meters wide. He wants to plant flowers in the entire garden. What is the area of the garden in square meters that John wants to plant the flowers in?', 'The area of a rectangle is calculated by multiplying the length by the width. In this case, the length of the garden is 5 meters and the width is 3 meters. Therefore, the area of the garden is 5 meters * 3 meters = 15 square meters.'), ('import data.real.basic\n\n-- Proof\nexample : (9.6 / 4 = 2.4) :=\nbegin\n  norm_num,\nend', 'John has 9.6 dollars and he wants to equally divide it to his 4 friends. How much will each friend receive?', 'To find out how much each friend will receive, we need to divide 9.6 by 4. Dividing 9.6 by 4 gives us 2.4. Therefore, each friend will receive 2.4 dollars.'), ('def students := 240\ndef sports_percentage := 0.75\ndef basketball_percentage := 0.6\n\n#check ((students * sports_percentage) * basketball_percentage) = 108', 'In a school, there are 240 students. 75% of these students play sports, and of those students, 60% play basketball. How many students play basketball?', 'First, we find out how many students play sports. Since 75% of the students play sports, we multiply the total number of students, which is 240, by 75% (or 0.75). We get 180 students.\n\nNext, we find out how many of these students play basketball. We know that 60% of the sports-playing students play basketball. So, we multiply the number of sports-playing students, which is 180, by 60% (or 0.6). We get 108 students.\n\nTherefore, 108 students in the school play basketball.'), ('import data.real.basic\n\ntheorem power_zero {a : ℝ} (h : a ≠ 0) : a^0 = 1 :=\nbegin\n  exact pow_zero a,\nend', 'Given that `a ≠ 0`, prove that `a^0 = 1`.', 'The property of exponents states that any nonzero number raised to the power of zero equals one. So, if `a` is any nonzero number, then `a^0` equals `1`.'), ('-- Lean does not directly support statistical proofs. However, we can outline how such a proof might be constructed in Lean.\n\n-- We would first need to define the concepts of mean, standard deviation, and confidence interval. \n\n-- Next, we would need to state and prove the formula for a confidence interval for a mean: CI = x̄ ± Z (σ/√n)\n\n-- Then, we would input the given data: x̄ = 60, Z = 1.96, σ = 10, n = 100.\n\n-- Finally, we would use the confidence interval formula to calculate the result: CI = 60 ± 1.96 (10/√100) = 60 ± 1.96 (1) = (58.04, 61.96)', 'A researcher wants to estimate the average height of a certain type of tree in a forest. The researcher randomly selects 100 trees and measures their heights. The mean height is found to be 60 feet with a standard deviation of 10 feet. \n\nWhat is the 95% confidence interval for the mean height of this type of tree in the forest? Assume the heights of the trees follow a normal distribution.', 'The confidence interval can be calculated using the formula for a confidence interval for a mean, which is:\n\nCI = x̄ ± Z (σ/√n)\n\nwhere x̄ is the sample mean, Z is the Z-score (which for a 95% confidence interval is approximately 1.96), σ is the standard deviation, and n is the sample size.\n\nSubstituting the given data into the formula, we get:\n\nCI = 60 ± 1.96 (10/√100)\n\nSolving, we get:\n\nCI = 60 ± 1.96 (1)\n\nSo, the 95% confidence interval for the mean height of this type of tree in the forest is 60 ± 1.96 feet, or (58.04 feet, 61.96 feet). This means we are 95% confident that the true average height of this type of tree in the forest is between 58.04 feet and 61.96 feet.'), ('import data.real.basic\n\nexample : ∀ x : ℝ, 2*x - 3 = 7 → x = 5 :=\nbegin\n  intros,\n  have h1 : 2*x = 10, {linarith},\n  have h2 : x = 5, {linarith},\n  exact h2,\nend', 'Solve the equation 2x - 3 = 7.', 'First, we can add 3 to both sides of the equation to get 2x = 10. Then, we can divide both sides by 2 to solve for x. This gives us x = 5.'), ('import data.real.basic\n\nexample : (34.5 - 29.3) + 29.3 = 34.5 :=\nbegin\n  norm_num,\nend', "Let's say we have two decimal numbers 34.5 and 29.3. If we subtract 29.3 from 34.5, and then add 29.3 to the result, will we get back the original number, 34.5?", "Yes, we will get back the original number, 34.5. Here's why: when we subtract 29.3 from 34.5, we get 5.2. When we add 29.3 to 5.2, we get 34.5. So, subtracting 29.3 from 34.5 and then adding 29.3 to the result gives us back the original number, 34.5. This happens because of the property of addition and subtraction which states that if you subtract a number and then add the same number, you get back the original number."), ('def seq : ℕ → ℕ \n| 0 := 1\n| (n + 1) := 2 * (seq n) + 1\n\n#eval seq 9  -- output is 1023', "Let's consider the pattern where every next term is twice the previous term plus a constant number. If the first term is 1, the second term is 3, and the third term is 7, find the 10th term in the sequence.", 'We can see that the next term in the sequence is always twice the previous term plus a constant. For example, the second term (3) is twice the first term (1) plus 1, and the third term (7) is twice the second term (3) plus 1. We can write this as an expression: `nth term = 2*(n-1th term) + 1`.\n\nUsing this expression, we can calculate the 10th term:\nFor n=4, 4th term = 2*(3rd term) + 1 = 2*7 + 1 = 15;\nFor n=5, 5th term = 2*(4th term) + 1 = 2*15 + 1 = 31;\nContinue this procedure until we get the 10th term. The 10th term is 1023.'), ('import data.real.basic\n\ndef P (x : ℝ) := 2*x^2 - 12*x + 20\ndef Q (x : ℝ) := 2*x^2 - 10*x + 20\n\n#eval Q 6', 'A company produces a certain product. The production volume of the company can be represented by a quadratic function P(x) = 2x^2 - 12x + 20, where x is the number of workers and P(x) is the number of products produced. \n\nThe company recently instituted a new training program and found that each worker now produces 2 more units than before. Represent this change using a new function Q(x). What is the new production volume if the company has 6 workers?', 'The new production volume per worker is 2 units more than before. This means we have to add 2 to the original function P(x) to obtain the new function Q(x). So, Q(x) = P(x) + 2x = 2x^2 - 12x + 20 + 2x = 2x^2 - 10x + 20.\n\nIf the company has 6 workers, then we substitute x=6 into Q(x), so Q(6) = 2*(6^2) - 10*6 + 20 = 32.\n\nSo, with 6 workers, the new production volume is 32 units.'), ('open nat\nexample : (5 * 7) = 35 :=\nbegin\n  exact rfl,\nend', 'John has 5 boxes, each containing 7 apples. How many apples does John have in total?', 'We can solve this problem by using 1-digit multiplication. Since each box contains 7 apples and John has 5 boxes, the total number of apples is 5 times 7, which equals to 35. Therefore, John has 35 apples in total.'), ('import data.nat.basic\n\ntheorem square_ge_n (n : ℕ) (h : n > 0) : n * n ≥ n :=\nbegin\n  cases n,\n  { exact absurd h dec_trivial, },\n  { apply nat.le_add_left }\nend', 'Prove that for any positive integer n, the square of n is greater than or equal to n.', 'If n is a positive integer, then n squared (n*n) is always greater than or equal to n. This is because any number (except 0 and 1) multiplied by itself will always be larger than the original number. For example, if n=2, n*n equals 4, which is larger than 2. If n=1, n*n equals 1, which is equal to 1. Therefore, the statement is true.'), ("import data.real.basic\n\n-- define the function\ndef f (x : ℝ) : ℝ := 2 * x^3 - 3 * x^2 + 5\n\n-- define the derivative\ndef f' (x : ℝ) : ℝ := 6 * x^2 - 6 * x\n\n-- prove that the derivative of f at x = 2 is 12\nexample : f' 2 = 12 :=\nbegin\n  -- apply the derivative function\n  unfold f',\n  -- now it's a matter of calculation\n  norm_num,\nend", 'Let f(x) = 2x^3 - 3x^2 + 5. Find the derivative of the function at the point x = 2.', "To find the derivative of the function f(x) at x = 2, we need to apply the power rule of derivatives.\n\nThe derivative of the function f(x) = 2x^3 - 3x^2 + 5 is f'(x) = 6x^2 - 6x. \n\nSubstituting x = 2 into the derivative, we get f'(2) = 6*(2)^2 - 6*2 = 12.\n\nSo, the derivative of the function at the point x = 2 is 12."), ("import data.int.basic\n\nopen int\n\n-- Define the length and width of the garden\ndef garden_length : ℤ := 12\ndef garden_width : ℤ := 8\n\n-- Define John's estimate\ndef john_estimate : ℤ := 40\n\n-- Define the actual amount of fencing material needed\ndef actual_fencing_needed : ℤ := 2 * (garden_length + garden_width)\n\n-- Prove that John's estimate is correct\ntheorem john_estimate_correct : john_estimate = actual_fencing_needed :=\nbegin\n  -- Calculate the actual amount of fencing material needed\n  have h : actual_fencing_needed = 2 * (garden_length + garden_width), from rfl,\n  -- Simplify the right-hand side\n  rw [garden_length, garden_width] at h,\n  -- Here we don't need simp tactic as the RHS is already simplified\n  -- Since John's estimate is 40m and the actual amount of fencing material needed is also 40m,\n  -- we can conclude that John's estimate is correct.\n  rw h,\n  exact rfl,\nend", 'John has a rectangular garden with a length of 12 meters and a width of 8 meters. He wants to build a fence around it. He estimates that he will need 40 meters of fencing material. Is his estimate correct?', "To determine the amount of fencing material John needs, we need to calculate the perimeter of the rectangular garden. The perimeter of a rectangle is determined by the formula 2*(length + width). Therefore, the perimeter of John's garden is 2*(12m + 8m) = 2*20m = 40m. So, John's estimate is correct."), ('import data.real.basic\n\nopen_locale classical\n\nnoncomputable def cake : ℝ := 3 / 4 \ndef people : ℝ := 2 \nnoncomputable def each_gets : ℝ := cake / people \n\nexample : each_gets = 3 / 8 :=\nbegin\n  unfold each_gets, \n  unfold cake,\n  unfold people,\n  norm_num, \nend', 'If 3/4 of a cake is shared evenly between 2 people, how much cake does each person get?', 'To find out how much cake each person gets, we need to divide the fraction 3/4 by 2. But dividing fractions is the same as multiplying by the reciprocal. So, we change the division to multiplication and flip the second fraction (which is 2/1 in this case) to get its reciprocal. That gives us 3/4 * 1/2. When we multiply the numerators (top numbers) together we get 3, and when we multiply the denominators (bottom numbers) together we get 8. So, each person gets 3/8 of the cake.'), ('import data.nat.basic\n\nopen nat\n\ndef bucket_capacity : ℕ := 2\ndef tank_capacity : ℕ := 60\n\n#check (tank_capacity / bucket_capacity)\n\nlemma fill_bucket_times : tank_capacity / bucket_capacity = 30 :=\nbegin\n  rw [bucket_capacity, tank_capacity],\n  exact dec_trivial,\nend', 'John has a tank that can hold 60 gallons of water. He has a bucket that can hold 2 gallons of water. How many times does John need to fill the bucket and empty it into the tank to fill the tank completely?', 'To solve this problem, we need to find out how many 2-gallon buckets of water can fill up a 60-gallon tank. By dividing the total capacity of the tank (60 gallons) by the capacity of the bucket (2 gallons), we get the number of times John needs to fill the bucket. Hence, 60 ÷ 2 = 30. So, John needs to fill the bucket 30 times to completely fill the tank.'), ('import data.nat.basic\n\nopen nat\n\n-- defining the problem parameters\ndef total_apples : ℕ := 60\ndef apples_per_basket : ℕ := 6\n\n-- defining the division operation\ndef baskets_needed (total_apples apples_per_basket : ℕ) : ℕ := total_apples / apples_per_basket\n\n-- proving the solution\nexample : baskets_needed total_apples apples_per_basket = 10 :=\nbegin\n  unfold baskets_needed,\n  exact nat.div_eq_of_eq_mul_right (show 6 > 0, from zero_lt_succ 5) (show 60 = 6 * 10, by refl),\nend', 'If we have 60 apples and each basket can hold 6 apples, how many baskets do we need in total?', 'In order to find out how many baskets we need, we need to divide the total number of apples by the number of apples that can fit in one basket. When we divide 60 by 6, we get 10. So we need 10 baskets in total.'), ('def scatter_plot_data : list (ℕ × ℕ) :=\n[(1, 65), (2, 70), (3, 75), (4, 80), (5, 85)]', 'In a high school, a teacher collected the data about the hours students studied and their scores on a test. The data is as follows: \n\n| Hours Studied | Test Score |\n| -- | -- |\n| 1 | 65 |\n| 2 | 70 |\n| 3 | 75 |\n| 4 | 80 |\n| 5 | 85 |\n\nThe teacher wants to create a scatter plot to represent this data. He wants to use the hours studied as the independent variable (x-axis) and the test score as the dependent variable (y-axis). \n\nWhat would be the coordinates of the points that he would plot?', 'The coordinates of the points would be based on the hours studied and the corresponding test score. This would give us the following points: \n\n(1, 65), (2, 70), (3, 75), (4, 80), (5, 85)'), ('import data.real.basic\n\n-- define the equation\ndef eqn (x : ℝ) : Prop := -3*x - 5 = 2*x + 7\n\n-- proof that x = -2.4 is a solution to the equation\nexample : eqn (-2.4) :=\nbegin\n  unfold eqn,\n  norm_num,\nend', 'Solve the equation: -3x - 5 = 2x + 7.', 'First, we want to isolate the x terms on one side of the equation and the constants on the other side. To do this, we add 3x to both sides of the equation, which gives us -5 = 5x + 7. Then, we subtract 7 from both sides, which gives us -12 = 5x. Finally, we divide both sides by 5 to solve for x, which gives us x = -12 / 5 = -2.4.'), ("-- We define John's initial apples, the apples given by John's mother, and the apples taken by John's brother\ndef johns_initial_apples := 580\ndef apples_given_by_mother := 300\ndef apples_taken_by_brother := 200\n\n-- We calculate the total number of apples after John's mother gives him more\ndef total_apples_after_given := johns_initial_apples + apples_given_by_mother\n\n-- We calculate the final number of apples after John's brother takes some away\ndef final_apples := total_apples_after_given - apples_taken_by_brother\n\n-- We assert that the final number of apples is 680\nexample : final_apples = 680 :=\nbegin\n  -- We calculate the total apples after given\n  have h1 : total_apples_after_given = 880, by refl,\n  -- We calculate the final number of apples\n  have h2 : final_apples = 680, by refl,\n  -- We conclude that the final number of apples is 680\n  exact h2,\nend", 'John has 580 apples. His mother gives him 300 more. Then his brother takes away 200. How many apples does John have now?', 'If John starts with 580 apples and his mother gives him 300 more, he will have 580 + 300 = 880 apples. Then if his brother takes away 200 apples, John will have 880 - 200 = 680 apples. So, John has 680 apples now.'), ('import data.fintype.basic\nimport data.int.basic\n\ndef dot_product (a b : fin 2 → ℤ) : ℤ := a 0 * b 0 + a 1 * b 1\n\ndef a : fin 2 → ℤ\n| ⟨0, _⟩ := 4\n| ⟨1, _⟩ := 3\n| ⟨n+2, _⟩ := 0\n\ndef b : fin 2 → ℤ\n| ⟨0, _⟩ := 2\n| ⟨1, _⟩ := 5\n| ⟨n+2, _⟩ := 0\n\n#eval dot_product a b  -- output should be 23', 'Given vectors `a = (4, 3)` and `b = (2, 5)`, determine the dot product of these two vectors.', 'The dot product (also known as the scalar product) of two vectors a and b can be calculated as follows:\n\na·b = |a||b|cos(θ)\n\nWhere |a| and |b| are the magnitudes of vectors a and b respectively, and θ is the angle between the vectors. But, in 2D, we can also calculate the dot product by simply multiplying the corresponding coordinates of the vectors and then summing those products. \n\nSo, for vectors `a = (4, 3)` and `b = (2, 5)`:\n\na·b = 4*2 + 3*5 = 8 + 15 = 23\n\nTherefore, the dot product of vectors `a` and `b` is 23.'), ('import data.real.basic\n\n-- defining the function for perimeter of a rectangle\ndef perimeter (l w : ℝ) : ℝ := 2*(l + w)\n\n-- defining the values for length and width\ndef length : ℝ := 9\ndef width : ℝ := 6\n\n-- the theorem stating the number of fence segments needed equals the perimeter\ntheorem number_of_fence_segments : perimeter length width = 30 :=\nbegin\n  unfold perimeter,\n  unfold length,\n  unfold width,\n  norm_num,\nend', 'Mary has a rectangular garden that is 6 feet wide and 9 feet long. She wants to put a fence around the garden. The fence is sold in segments that are 1 foot long. How many segments does she need to buy?', 'To find out how many segments Mary needs to buy, we need to calculate the perimeter of the garden. The perimeter of a rectangle is given by the formula 2*(length + width). In this case, the length of the garden is 9 feet and the width is 6 feet. So, the perimeter is 2*(9+6) = 30 feet. Therefore, Mary needs to buy 30 segments of fence.'), ('import data.real.basic\n\ndef volume_of_rectangular_prism (l w h : ℝ) : ℝ := l * w * h\n\nexample : volume_of_rectangular_prism 5 3 2 = 30 :=\nbegin\n  unfold volume_of_rectangular_prism,\n  norm_num,\nend', 'Given a rectangular prism with a length of 5 units, a width of 3 units, and a height of 2 units, what is the volume of the prism? Prove your answer.', 'The volume of a rectangular prism is given by the formula V = lwh, where l is the length, w is the width, and h is the height. Plugging in the given values, we have V = 5 units * 3 units * 2 units = 30 cubic units. Therefore, the volume of the given rectangular prism is 30 cubic units.'), ('import data.real.basic\n\nvariables (a b c d : ℝ)\ntheorem add_eq_add (h1 : a = b) (h2 : c = d) : a + c = b + d :=\nbegin\n  rw h1,\n  rw h2,\nend', 'Prove that for any real numbers a, b, c and d, if a = b and c = d, then a + c = b + d.', "We know that a is equal to b and c is equal to d. Therefore, if we add a and c together, it would be the same as adding b and d together, because we're adding the same things. So, a + c = b + d."), ('import data.real.basic\n\ntheorem add_less_add_right {a b c : ℝ} (h : a < b) : a + c < b + c :=\nbegin\n  apply add_lt_add_right,\n  exact h,\nend', 'Given the differential equation dy/dx = 2y, with the initial condition that y(0) = 1, find the function y = f(x) that satisfies these conditions.', 'This is a first-order linear differential equation. The general solution to this differential equation is y = Ce^(2x), where C is a constant. However, we also have the initial condition y(0) = 1. If we substitute x = 0 into the general solution, we get y = Ce^(2*0) = Ce^0 = C. Therefore, the constant C must be 1 to satisfy the initial condition. Thus, the function y = f(x) that satisfies the given conditions is y = e^(2x).'), ('import data.real.basic\n\nnoncomputable def midpoint (x₁ y₁ x₂ y₂ : ℝ) : ℝ × ℝ := ((x₁ + x₂) / 2, (y₁ + y₂) / 2)\n\nlemma midpoint_of_AB : midpoint 1 3 4 6 = (2.5, 4.5) :=\nbegin\nrw midpoint,\nsimp,\nsplit,\nnorm_num,\nnorm_num,\nend', 'Given the points A (1, 3) and B (4, 6) on the coordinate plane, prove that the mid-point of the line segment AB is (2.5, 4.5).', 'The mid-point of a line segment with endpoints (x₁, y₁) and (x₂, y₂) on the coordinate plane is given by the formula ((x₁ + x₂)/2, (y₁ + y₂)/2). Applying this formula to the endpoints of line segment AB, we get ((1 + 4)/2, (3 + 6)/2) = (2.5, 4.5), which proves our assertion.'), ('import data.real.basic\n\n-- Define the variables\ndef x := 6\ndef length := 4*x\ndef width := 3*x\ndef area := length * width\n\n-- Prove that the area is 432\ntheorem area_is_432 : area = 432 := \nbegin\n  unfold area length width x, \n  norm_num,\nend\n\n-- Prove that length and width are factors of 432\ntheorem length_is_factor : 432 % length = 0 :=\nbegin\n  unfold length x,\n  norm_num,\nend\n\ntheorem width_is_factor : 432 % width = 0 :=\nbegin\n  unfold width x,\n  norm_num,\nend', 'In a rectangular room, the ratio of the length to the width is 4:3. If the area of the room is 432 square feet, what are the length and width of the room? Also, show that the length and width are factors of 432.', 'First, we need to find the length and width of the room. Since the ratio of the length to the width is 4:3, we can let the length be 4x and the width be 3x. Given that the area of the room is 432 square feet, we can set up the equation 4x * 3x = 432 to represent the area of the room (since area = length * width). Solving this equation gives x^2 = 36, so x = 6. Therefore, the length of the room is 4*6 = 24 feet and the width is 3*6 = 18 feet.\n\nNext, we need to show that the length and width are factors of 432. A number is a factor of another if the second number can be divided by the first without leaving a remainder. Here, 432 divided by 24 gives 18 with no remainder, and 432 divided by 18 also gives 24 with no remainder. Therefore, both 24 and 18 are factors of 432.'), ('import data.real.basic\n\n-- Declaration of variables\nvariables (x y : ℝ)\n\n-- Definition of the system of equations\ndef eq1 := 2*x + 3*y = 20\ndef eq2 := 3*x - 2*y = 5\n\n-- Check if the solution satisfies the first equation\nexample : eq1 (55/13) (50/13) :=\nbegin\n  unfold eq1,\n  norm_num,\nend\n\n-- Check if the solution satisfies the second equation\nexample : eq2 (55/13) (50/13) :=\nbegin\n  unfold eq2,\n  norm_num,\nend', 'Solve the following system of equations: \n1. 2x + 3y = 20 \n2. 3x - 2y = 5', 'We can solve this system of equations using substitution or elimination. Here, we will use substitution.\n\nFirst, we solve the first equation for x: \n\n2x = 20 - 3y\nx = 10 - 1.5y \n\nNext, we substitute this into the second equation: \n\n3(10 - 1.5y) - 2y = 5 \n30 - 4.5y - 2y = 5\n30 - 6.5y = 5\n6.5y = 25\ny = 25 / 6.5\ny = 50 / 13\n\nFinally, we substitute y = 50/13 into the first equation:\n\n2x + 3(50/13) = 20\n2x + 150/13 = 20\n2x = 260/13 - 150/13\n2x = 110/13\nx = 55/13\n\nTherefore, the solution to the system of equations is x = 55/13 and y = 50/13.'), ('import data.real.basic\nimport data.matrix.basic\n\ndef dot_product (v w : fin 3 → ℝ) : ℝ :=\nfinset.univ.sum (λ i, v i * w i)\n\ndef v : fin 3 → ℝ\n| ⟨0, _⟩ := 1\n| ⟨1, _⟩ := 2\n| ⟨2, _⟩ := 3\n| ⟨_, _⟩ := 0\n\ndef w : fin 3 → ℝ\n| ⟨0, _⟩ := 4\n| ⟨1, _⟩ := 5\n| ⟨2, _⟩ := 6\n| ⟨_, _⟩ := 0\n\n#eval dot_product v w  -- prints 32', "Let's consider two vectors in R^3, v = [1, 2, 3] and w = [4, 5, 6]. Compute the dot product of these two vectors.", 'The dot product of two vectors can be computed by multiplying corresponding entries and then summing up those products. Therefore, the dot product of v and w is (1 * 4) + (2 * 5) + (3 * 6) = 4 + 10 + 18 = 32.'), ('def rectangle_perimeter : ℕ → ℕ → ℕ \n| length width := 2 * (length + width)\n\n#eval rectangle_perimeter 10 7  -- output will be 34', 'Mary has a rectangular garden. The length of the garden is 10 meters and the width is 7 meters. She wants to build a fence around the garden. How many meters of fencing will she need?', 'The perimeter of a rectangle is given by the formula 2*(length + width). Substituting the given length and width into the formula, we get 2*(10 + 7) = 34 meters. Therefore, Mary will need 34 meters of fencing.'), ('import data.real.basic\n\n-- Defining a structure for a point in 2D space\nstructure Point :=\n(x y : ℝ)\n\n-- Defining a structure for a circle \nstructure Circle :=\n(center : Point) (radius : ℝ)\n\n-- The distance between 2 points in 2D Euclidean space\ndef dist (P1 P2 : Point) : ℝ := \n((P2.x - P1.x)^2 + (P2.y - P1.y)^2)\n\n-- The circle equation\ndef circle_eq (C : Circle) (P : Point) : Prop :=\n(dist C.center P) = C.radius^2\n\ntheorem circle_eq_proof (C : Circle) (P : Point) : \n(circle_eq C P) ↔ (P.x - C.center.x)^2 + (P.y - C.center.y)^2 = C.radius^2 :=\nbegin\n  split,\n  { intro h,\n    rw circle_eq at h,\n    rw dist at h,\n    exact h },\n  { intro h,\n    rw circle_eq,\n    rw dist,\n    exact h },\nend', "Let's assume we have a circle with center point (h, k) and radius r. Prove that the equation of this circle is given by (x - h)² + (y - k)² = r².", 'The distance between any point (x, y) on the circle and the center (h, k) is given by the radius r. According to the Euclidean distance formula, this distance is sqrt((x - h)² + (y - k)²). Squaring both sides, we get that (x - h)² + (y - k)² = r², which is the equation of the circle.'), ("import data.real.basic\n\n-- let's define the amount of money Johnny has and the cost of the toy car\nnoncomputable def johnny_money : ℝ := 5.65\nnoncomputable def toy_car_cost : ℝ := 2.89\n\n-- now we subtract the cost of the toy car from the money Johnny has\nnoncomputable def money_left : ℝ := johnny_money - toy_car_cost\n\n-- we can confirm that the result is $2.76\nexample : money_left = 2.76 :=\nbegin\n  unfold money_left,   -- this replaces `money_left` with its definition\n  unfold johnny_money, -- this replaces `johnny_money` with its definition\n  unfold toy_car_cost, -- this replaces `toy_car_cost` with its definition\n  norm_num,            -- this simplifies the arithmetic expression\nend", 'Johnny has $5.65 in his piggy bank. He wants to buy a toy car which costs $2.89. How much money will Johnny have left after he buys the toy car?', "To find out how much money Johnny will have left after buying the car, we need to subtract the cost of the toy car from the amount of money Johnny has. So we subtract $2.89 from $5.65. First, we subtract the cents. We can't subtract 9 from 5 directly, so we borrow 1 from the 6 in the tens place of the cents, making it 15. Then we subtract 9 from 15 which equals 6. Then we subtract 8 from 5 (in the tens place), but again we can't do that directly so we borrow 1 from the 5 in the ones place of the dollars, making it 15. Subtracting 8 from 15 equals 7. Then we subtract 2 from 4 (in the ones place of the dollars) which equals 2. So, after buying the toy car, Johnny will have $2.76 left."), ('import data.nat.basic\n\ndef rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 7 4 = 28 := \nbegin\n    unfold rectangle_area,\n    rw nat.mul_comm,\n    exact rfl,\nend', 'Given a rectangle with a length of 7 units and a width of 4 units, what is the area of the rectangle?', 'The area of a rectangle is calculated by multiplying the length by the width. In this case, the length is 7 units and the width is 4 units. By multiplying 7 and 4, we get the area of the rectangle, which is 28 square units.'), ('import data.int.basic\n\nopen int\n\n-- Define the initial length of the ribbon\ndef ribbon_length : ℤ := 45\n-- Define the length of the ribbon used to make a bow\ndef used_length : ℤ := 30\n-- Prove that the remaining length of the ribbon is 15\nexample : ribbon_length - used_length = 15 :=\nbegin\n  -- Simplify the left-hand side\n  rw [ribbon_length, used_length],\n  -- Compute the result\n  exact rfl,\nend', 'Alice has a piece of ribbon that is 45 inches long. She uses 30 inches of the ribbon to make a bow. How much ribbon does Alice have left?', 'Alice starts with 45 inches of ribbon. She uses 30 inches of it, so we subtract the 30 inches she used from the 45 inches she had in total. This gives us 45 - 30 = 15. So, Alice has 15 inches of ribbon left.'), ('import data.real.basic\n\n-- Define the length and width as functions of x\ndef length (x : ℝ) : ℝ := 4*x + 3\ndef width (x : ℝ) : ℝ := 2*x - 1\n\n-- Define the perimeter function\ndef perimeter (x : ℝ) : ℝ := 2 * (length x + width x)\n\n-- Now we will show that the perimeter simplifies to 12x + 4\nexample (x : ℝ) : perimeter x = 12*x + 4 :=\nbegin\n  -- Expand the definition of perimeter\n  unfold perimeter,\n  -- Simplify inside the parentheses\n  rw [length, width],\n  -- Simplify the expression\n  ring,\nend', 'John has a rectangular garden. The length of the garden is represented by the algebraic expression `4x + 3` feet and the width is represented by `2x - 1` feet. John wants to build a fence around the garden. What is the length, in feet, of the fence John needs to build around the garden? Express your answer as an algebraic expression.', 'The length of the fence that John needs to build around the garden is equal to the perimeter of the garden. In a rectangle, the perimeter is given by the formula `2 * (length + width)`. Here, the length is `4x + 3` and the width is `2x - 1`. Substituting these values into the formula gives: `2 * ((4x + 3) + (2x - 1))`. Simplifying inside the parentheses first, we get `2 * (6x + 2)`. Then, distributing the 2 gives `12x + 4`. \n\nSo, the length of the fence John needs to build is `12x + 4` feet.'), ('-- defining the constants\ndef garden_length := 16\ndef garden_width := 12\n\n-- defining a function for area calculation\ndef rectangle_area (length width : ℕ) : ℕ := length * width\n\n-- calculating the total area\ndef total_area := rectangle_area garden_length garden_width\n\n-- defining a function for area division\ndef divide_area (area parts : ℕ) : ℕ := area / parts \n\n-- calculating the area of each part\ndef each_part_area := divide_area total_area 2\n\n-- Output: each_part_area = 96', 'Tom has a rectangular garden that measures 12 feet by 16 feet. He wants to divide it into two equal parts by putting a fence across its length. What is the area of each of the two parts?', "The area of a rectangle is given by the product of its length and width. So, the total area of Tom's garden is 12 feet times 16 feet, which equals to 192 square feet. Because he wants to divide the garden into two equal parts, the area of each part will be half of the total area. Hence, each part will have an area of 192 square feet divided by 2, which is 96 square feet."), ('import data.real.basic\n\n-- defining the variables\ndef john_speed : ℝ := 8\ndef mary_speed : ℝ := 10\ndef track_length : ℝ := 400\n\n-- defining the relative speed\ndef relative_speed : ℝ := mary_speed - john_speed\n\n-- defining the time needed for Mary to lap John\nnoncomputable def time_to_lap : ℝ := track_length / relative_speed\n\n-- proving the theorem\ntheorem time_to_lap_john : time_to_lap = 200 :=\nbegin\n  -- simplifying the expression\n  dsimp [time_to_lap, relative_speed, mary_speed, john_speed, track_length],\n  -- proving that the simplified expression equals 200\n  norm_num,\nend', 'John and Mary are both running on a circular track. The track has a circumference of 400 meters. John runs at a speed of 8 meters per second, while Mary runs at a speed of 10 meters per second. If they both start running at the same time from the same point, after how many seconds will Mary lap John (i.e., be 400 meters ahead of John)?', 'Firstly, we need to calculate the relative speed of Mary and John. Since Mary runs 10 m/s and John runs 8 m/s, the relative speed is 10 m/s - 8 m/s = 2 m/s. This means Mary is getting 2 meters ahead of John every second. Since the track is 400 meters, we divide 400 meters by the relative speed, 2 m/s, to find out how many seconds it will take for Mary to be 400 meters ahead of John. The result is 400 m / 2 m/s = 200 seconds. So, Mary will lap John after 200 seconds.'), ('-- We will first define a type to represent time\nstructure Time :=\n(hour : ℕ)\n(minute : ℕ)\n\n-- Now we will define a function to add time\ndef add_time (t1 t2 : Time) : Time :=\n{ hour := t1.hour + t2.hour + ((t1.minute + t2.minute) / 60),\n  minute := (t1.minute + t2.minute) % 60 }\n\n-- Now we can solve the problem\ndef johns_movie_end_time : Time :=\n  add_time { hour := 15, minute := 15 } { hour := 1, minute := 45 }\n\n#eval johns_movie_end_time  -- Returns { hour := 17, minute := 0 }', 'John starts a movie at 3:15pm. The movie is 1 hour and 45 minutes long. What time will the movie end?', "To solve this problem, we have to add the length of the movie to the time it started. The movie is 1 hour and 45 minutes long. First, let's add the hour. 3pm + 1 hour is 4pm. Then, let's add the minutes. 15 minutes + 45 minutes is 60 minutes, which is equivalent to 1 hour. So, the movie will end at 5pm."), ('import data.real.basic\n\n-- defining the fractions\nnoncomputable def initial_slices : ℝ := 3/8\nnoncomputable def additional_slices : ℝ := 2 * initial_slices\n\n-- defining total amount of pizza eaten\nnoncomputable def total_slices : ℝ := initial_slices + additional_slices\n\n-- proving that the total pizza eaten is more than one pizza\nexample : total_slices > 1 :=\nbegin\n  unfold total_slices,\n  unfold additional_slices,\n  unfold initial_slices,\n  norm_num,\nend', "Let's say there is a pizza that is divided into 8 equal slices. John eats 3 slices of the pizza and then he eats twice the amount he has already eaten. What fraction of the pizza has John eaten in total?", "First, we calculate the fraction of pizza that John initially ate, which is 3 out of 8 slices, or 3/8. Then John eats twice the amount he has already eaten. So, he eats another 2*(3/8) = 6/8 of the pizza. Adding the two fractions together, John ate a total of 3/8 + 6/8 = 9/8 = 1 1/8 pizzas. Since it's impossible for John to eat more than one pizza as there was only one pizza, there must be a mistake. The correct calculation should be that John ate another 2*(3/8) = 3/4 of the pizza. So in total, John ate 3/8 + 3/4 = 1 1/8 = 1.125 of the pizza, which is more than one pizza. Therefore, the problem is incorrect."), ('import data.real.basic\n\nvariables (SSG1 SSG2 SSG3 SST SSB : ℝ)\n\n-- SSB is non-negative\nvariable (H0 : 0 ≤ SSB)\n\n-- SST is equal to SSG1+SSG2+SSG3+SSB\nvariable (H1 : SST = SSG1 + SSG2 + SSG3 + SSB)\n\ninclude H0 H1\n\n-- Prove that SSG1+SSG2+SSG3 <= SST\ntheorem sum_squares_groups_le_total : SSG1 + SSG2 + SSG3 ≤ SST :=\nbegin\n  rw H1,\n  apply le_add_of_nonneg_right,\n  exact H0,\nend', 'Given three sets of data points with the same number of data points (n), namely Group 1, Group 2, and Group 3. The sum of squares for each group (SSG1, SSG2, SSG3) is known. The sum of squares for the total (SST) is also known. Prove that the sum of the sum of squares for each group is less than or equal to the sum of squares for the total, i.e., SSG1+SSG2+SSG3 <= SST.', 'In ANOVA, the sum of squares for the total (SST) is composed of the sum of squares within each group (SSW) and the sum of squares between groups (SSB). The sum of squares within each group (SSW) is the sum of the sum of squares for each group i.e., SSW = SSG1+SSG2+SSG3. The sum of squares between groups (SSB) is the variation due to the interaction between the groups, which is always non-negative. Hence, the sum of squares for the total (SST) is equal to the sum of squares within each group (SSW) plus the sum of squares between groups (SSB). Given that SSB is always non-negative, this implies that SSW (or SSG1+SSG2+SSG3) is always less than or equal to SST. Thus, SSG1+SSG2+SSG3 <= SST.'), ("import data.real.basic\n\n-- Let's define the functions C1 and C2\ndef C1 : ℝ → ℝ := λ x, 15 * x\ndef C2 : ℝ → ℝ := λ x, 15 * x\n\n-- Now let's calculate the cost for the original garden\ndef original_length : ℝ := 30\ndef original_width : ℝ := 20\ndef original_perimeter : ℝ := 2*original_length + 2*original_width\ndef original_cost : ℝ := C1(original_perimeter)\n#eval original_cost  -- output should be 1500\n\n-- Let's now calculate the new perimeter after the extension\ndef extension_length : ℝ := 10\ndef new_length : ℝ := original_length + extension_length\ndef new_perimeter : ℝ := 2*new_length + 2*original_width\ndef new_cost : ℝ := C2(new_perimeter)\n#eval new_cost  -- output should be 1800", 'John owns a rectangular garden with a length of 30 feet and a width of 20 feet. He wants to install a fence around his garden. The fence company charges $15 per foot for the fencing. Later on, John decides to extend his garden by adding another rectangular section to it. The section has a length of 10 feet and a width of 20 feet. After the extension, he needs to install additional fences. \n\nThe total cost of installing the fence before and after the extension can be modeled by two linear functions, C1(x) = 15x for the original garden, and C2(x) = 15x for the extended garden, where x represents the perimeter of the garden.\n\n1. Calculate the total cost of installing the fence for the original garden. \n2. Calculate the new perimeter of the garden after the extension.\n3. Calculate the total cost of installing the fence for the extended garden.', '1. The perimeter of the original garden is calculated by adding the lengths of all sides. For a rectangle, this is 2*length + 2*width. We substitute the given length and width into this formula: 2*30 + 2*20 = 60 + 40 = 100 feet. So, the total cost of installing the fence for the original garden is the cost per foot times the perimeter, which is C1(x) = 15*100 = $1500. \n\n2. After the extension, the garden is still rectangular, but one of its lengths is increased by the length of the added section. So the new perimeter is 2*(30+10) + 2*20 = 2*40+40 = 120 feet.\n\n3. Based on the new perimeter, the total cost of installing the fence for the extended garden is C2(x) = 15*120 = $1800.'), ('-- import the necessary libraries\nimport data.real.basic\nimport tactic.ring\n\n-- declare the variables\nvariables (x : ℝ)\n\n-- declare the functions\ndef f (x : ℝ) := 2*x^2 + 5*x - 3\ndef g (x : ℝ) := x^2 + 2*x - 1\ndef h (x : ℝ) := f(x) * g(x)\n\n-- show the proof\nexample : h(x) = 2*x^4 + 9*x^3 + 5*x^2 - 11*x + 3 :=\nbegin\n  -- unfold the definition of h\n  unfold h,\n  -- unfold the definitions of f and g\n  unfold f g,\n  -- perform the multiplication\n  ring,\nend', 'Given two quadratic expressions, f(x) = 2x^2 + 5x - 3 and g(x) = x^2 + 2x - 1. Find the product h(x) = f(x) * g(x), and then factorize h(x) if possible.', 'First, we perform multiplication of the two quadratic expressions: \n\nf(x) * g(x) = (2x^2 + 5x - 3) * (x^2 + 2x - 1). \n\nWe use the distributive property of multiplication over addition (a(b + c) = ab + ac) to multiply each term in the first polynomial by each term in the second polynomial. This gives: \n\nh(x) = 2x^4 + 4x^3 - 2x^2 + 5x^3 + 10x^2 - 5x - 3x^2 - 6x + 3. \n\nWe then combine like terms to simplify: \n\nh(x) = 2x^4 + 9x^3 + 5x^2 - 11x + 3.\n\nTo factorize h(x), we need to find the factors of the expression. As it is a quartic expression, it might not be possible to factorize it using common factoring techniques. Hence, h(x) = 2x^4 + 9x^3 + 5x^2 - 11x + 3 is the simplified and factorized form.'), ('import data.complex.basic\n\nopen complex\n\ntheorem linear_eq_in_terms_of_complex_nums (z1 z2 : ℂ) : \n  ∀ x : ℝ, (im z1 / re z1) * x + (re z2 - im z2) = (im z1 / re z1) * x + (re z2 - im z2) :=\nbegin\n  intros x,\n  -- the equation is true by reflexivity\n  exact rfl,\nend', "Let z1 and z2 be two complex numbers, where z1 = a + bi and z2 = c + di (a, b, c, d are real numbers). Let's say we have a linear equation in the form of y = m*x + b, where m is the slope and b is the y-intercept. Given that the slope m is equal to the imaginary part of z1 divided by the real part of z1, and the y-intercept b is equal to the real part of z2 minus the imaginary part of z2, prove that the linear equation can be written in terms of z1 and z2 as follows: y = (Im(z1)/Re(z1))*x + (Re(z2) - Im(z2)).", 'The problem gives us that the slope m is equal to the imaginary part of z1 divided by the real part of z1, and the y-intercept b is equal to the real part of z2 minus the imaginary part of z2. We know that the imaginary part of z1 is given by Im(z1) and the real part of z1 is given by Re(z1). Therefore, the slope m is equal to Im(z1)/Re(z1). \n\nSimilarly, we know that the real part of z2 is given by Re(z2) and the imaginary part of z2 is given by Im(z2). Therefore, the y-intercept b is equal to Re(z2) - Im(z2).\n\nBy substituting m and b into the equation of the line y = m*x + b, we get the equation of the line in terms of z1 and z2: y = (Im(z1)/Re(z1))*x + (Re(z2) - Im(z2)).'), ("import data.list.basic\nimport data.nat.basic\n\nopen list nat\n\ndef lucy_lemonade : ℕ → ℕ\n| 0     := 5\n| (n+1) := lucy_lemonade n + 2\n\n#eval ((list.range' 1 7).map lucy_lemonade).foldl (+) 0  -- output is 77", 'Lucy is running a lemonade stand. On the first day, she made $5. Each day after that, she made $2 more than the day before. If this pattern continues, how much money will Lucy have made after 7 days?', 'This problem can be understood as a linear function problem with the equation being y = 5 + 2(x - 1), where x is the day and y is the money Lucy makes. \n\nOn the first day, Lucy made $5. \nOn the second day, Lucy made $5 + $2 = $7. \nOn the third day, Lucy made $7 + $2 = $9. \nOn the fourth day, Lucy made $9 + $2 = $11.\nOn the fifth day, Lucy made $11 + $2 = $13.\nOn the sixth day, Lucy made $13 + $2 = $15.\nOn the seventh day, Lucy made $15 + $2 = $17.\n\nSo, after 7 days, Lucy will have made $5 + $7 + $9 + $11 + $13 + $15 + $17 = $77.'), ('import data.real.basic\n\nopen real\n\n-- defining the function area_of_rectangle\ndef area_of_rectangle (length width : ℝ) : ℝ := length * width\n\n-- defining the values \nnoncomputable def l : ℝ := 5.6\nnoncomputable def w : ℝ := 3.4\n\n-- stating and proving the theorem\ntheorem area_of_rectangle_eq : area_of_rectangle l w = 19.04 :=\nbegin\n  unfold area_of_rectangle, -- expanding the definition of area_of_rectangle function\n  rw [l, w], -- replacing l and w with their actual values\n  norm_num, -- simplifying the multiplication\nend', 'John has a rectangular piece of paper. The length of the paper is 5.6 cm, and the width is 3.4 cm. He wants to calculate the area of this rectangle. What is the area of the rectangle?', 'The area of a rectangle can be calculated by multiplying its length by its width. In this case, we would multiply the length of the rectangle, 5.6 cm, by the width of the rectangle, 3.4 cm. This gives us an area of 19.04 square cm.'), ('open nat\n\ndef multiply_two_digit_numbers (a b : ℕ) : ℕ := a * b\n\nexample : multiply_two_digit_numbers 45 32 = 1440 :=\nbegin\n  have h1 : 45 * 2 = 90, from rfl,\n  have h2 : 45 * 30 = 1350, from rfl,\n  have h3 : 90 + 1350 = 1440, from rfl,\n  rw multiply_two_digit_numbers,\n  rw ← h1 at *,\n  rw ← h2 at *,\n  rw ← h3 at *,\n  refl,\nend', 'Given two 2-digit numbers, 45 and 32. Calculate the product of these two numbers.', 'To multiply 45 by 32, we first multiply 45 by 2 (the number in the units place of 32). This gives us 90. \n\nNext, we multiply 45 by 3 (the number in the tens place of 32). However, since 3 is in the tens place, it actually represents 30, so we need to multiply 45 by 30, which gives us 1350. \n\nFinally, we add the two products together. 90 + 1350 = 1440. \n\nSo, 45 multiplied by 32 equals to 1440.'), ('import data.real.basic\n\nopen real\n\n-- define the function z\ndef z (x y : ℝ) : ℝ := 3*(x^2)*y + 4*x*(y^2)\n\n-- calculate the partial derivative of z with respect to x\ndef partial_deriv_z_x (x y : ℝ) : ℝ := 6*x*y + 4*(y^2)\n\n-- evaluate the partial derivative at the point (1, 2)\nnoncomputable def eval_partial_deriv_z_x : ℝ := partial_deriv_z_x 1 2\n\n-- proof that the partial derivative is 28\nexample : eval_partial_deriv_z_x = 28 :=\nbegin\n  unfold eval_partial_deriv_z_x,\n  unfold partial_deriv_z_x,\n  norm_num,\nend', 'Let z be a function of two variables x and y, such that z = 3x²y + 4xy². Calculate the partial derivative of z with respect to x at the point (x, y) = (1, 2) and interpret its meaning in the context of exploring one-variable quantitative data.', "Firstly, let's find the partial derivative of z with respect to x. The partial derivative of a function with respect to a variable is the derivative of the function with all other variables held constant.\n\nThe partial derivative of z with respect to x is therefore ∂z/∂x = 6xy + 4y². \n\nNext, we evaluate this derivative at the point (x, y) = (1, 2). Substituting these values into the derivative gives us 6(1)(2) + 4(2)² = 12 + 16 = 28. \n\nThis implies that if we were to increase x by a small amount while keeping y fixed at 2, the rate of change of z would be approximately 28. In the context of exploring one-variable quantitative data, this means that, on average, a unit increase in x (while keeping y constant) would correspond to an increase of approximately 28 units in z."), ('variables (additional_hour : ℕ) (increase_score : ℕ) (base_hour : ℕ) (base_score : ℕ) (target_hour : ℕ)\ndef score (additional_hour : ℕ) (increase_score : ℕ) (base_hour : ℕ) (base_score : ℕ) (target_hour : ℕ) : ℕ :=\nbase_score + (target_hour - base_hour) * increase_score\nexample : score 1 5 2 70 3 = 75 :=\nbegin\n  unfold score,\n  simp,\n  refl,\nend', "In a high school of 200 students, a survey was conducted to find out the correlation between the time spent on homework daily (in hours) and the grades scored in a Mathematics test. The scatterplot showed that for every additional hour spent on homework, a student's score increased on average by 5 points. If a student who spends 2 hours daily on homework scored 70 points on the test, how much would a student who spends 3 hours daily on homework score?", "According to the correlation shown by the scatterplot, for every additional hour spent on homework, a student's score increases by 5 points. Therefore, if a student who spends 2 hours daily on homework scored 70 points, then a student who spends 3 hours daily on homework, which is one hour more, would score 70 + 5 = 75 points."), ('import data.real.basic\n\n-- defining the parameters of the rectangle\ndef rectangle_length : ℝ := 10\ndef rectangle_width : ℝ := 5\n\n-- defining the formula for the perimeter of a rectangle\ndef rectangle_perimeter (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- proving that the perimeter of the rectangle is 30 cm\nexample : rectangle_perimeter rectangle_length rectangle_width = 30 :=\nbegin\n  unfold rectangle_perimeter,\n  unfold rectangle_length,\n  unfold rectangle_width,\n  norm_num,\nend', 'In a rectangle, the length of the longer side is 10 cm and the length of the shorter side is 5 cm. What is the perimeter of the rectangle?', "The perimeter of a rectangle is calculated by the formula 2*(length + width). Since the rectangle's longer side (length) is 10 cm and the shorter side (width) is 5 cm, you substitute these values into the formula and get 2*(10+5) = 30 cm. Hence, the perimeter of the rectangle is 30 cm."), ('-- Lean 3 does not currently support numerical computations involving complex numbers or real numbers, \n-- so it is not possible to compute this integral directly in Lean 3. The informal proof outlines the \n-- traditional approach to computing this probability using the properties of the standard normal distribution.', 'A group of high school students are conducting a survey on the daily screen time of students in their school. They hypothesize that the average screen time follows a normal distribution. They randomly select 100 students and record their screen time in hours. The data shows an average screen time of 6 hours with a standard deviation of 1.5 hours.\n\nNow, they want to study the proportion of students who use screens for more than 8 hours per day. To do this, they need to evaluate the area under the normal distribution curve from 8 hours to infinity. In mathematics, this area is obtained by integrating the normal distribution function from the given point (8 hours in this case) to infinity.\n\nThe probability density function of a normal distribution is given by:\n\nf(x) = (1/√(2πσ²)) * e^(-((x-μ)²/2σ²))\n\nwhere μ is the mean (6 hours) and σ is the standard deviation (1.5 hours).\n\nCan you calculate the integral ∫ from 8 to ∞ of f(x) dx?', 'The integral of a function represents the area under the curve of the function. In this case, we want to calculate the area under the normal distribution curve from 8 to infinity, which will give us the proportion of students who use screens for more than 8 hours per day.\n\nWe first standardize the distribution by subtracting the mean and dividing by the standard deviation. This means we will be integrating the standard normal distribution starting from (8-6)/1.5 = 1.33 to infinity.\n\nThe integral of the standard normal distribution from a to b is given by Φ(b) - Φ(a), where Φ is the cumulative distribution function of the standard normal distribution. Since we are going to infinity, Φ(∞) = 1. Thus, the integral becomes 1 - Φ(1.33).\n\nThe value of Φ(1.33) can be looked up in a standard normal distribution table or calculated using a calculator. The typical value is 0.907.\n\nSo, the integral becomes 1 - 0.907 = 0.093.\n\nTherefore, approximately 9.3% of students use screens for more than 8 hours per day.'), ('import data.real.basic\n\n-- Defining the values\nnoncomputable def alice_pizza := (0.5 : ℝ)\nnoncomputable def bob_pizza := (0.4 : ℝ)\n\n-- Proving the theorem\ntheorem pizza_total : alice_pizza + bob_pizza = 0.9 :=\nbegin\n  -- Adding the values\n  have h : alice_pizza + bob_pizza = 9 / 10,\n    { norm_num [alice_pizza, bob_pizza] },\n  -- Concluding the proof\n  exact h,\nend', 'Alice has 0.5 of a pizza and Bob has 0.4 of the same pizza. They decide to combine their pieces. How much of the pizza do they have in total?', 'To find out how much of the pizza Alice and Bob have in total, we simply need to add their individual parts together. Alice has 0.5 of the pizza and Bob has 0.4 of it. Adding these two decimals together, we get 0.5 + 0.4 = 0.9. Therefore, Alice and Bob together have 0.9 of the pizza.'), ('import data.real.basic\n\n-- The transformed function g\nnoncomputable def g (x : ℝ) := ((x-2)+2)/((x-2)-3) + 3\n\n-- Proof that the x-intercept of g is 15/4\nexample : ∃ x : ℝ, g x = 0 := \nbegin\n  use 15/4,\n  unfold g,\n  norm_num,\nend', "Let's consider a rational function f(x) = (x+2)/(x-3). Now, if we perform a transformation by shifting the function 2 units to the right and 3 units up, the transformed function will be g(x) = ((x-2)+2)/((x-2)-3) + 3. \n\nNow, find the x-intercept of the transformed function g(x).", 'The x-intercept of a function is the point where the function crosses the x-axis. This means that the output of the function, or y, is 0. \n\nSo to find the x-intercept of the function g(x), we set g(x) = 0 and solve for x:\n\n0 = ((x-2)+2)/((x-2)-3) + 3\n\nSubtract 3 from both sides:\n\n-3 = ((x-2)+2)/((x-2)-3)\n\nMultiply both sides by ((x-2)-3) to clear the fraction:\n\n-3((x-2)-3) = (x-2)+2\n\nExpand and simplify:\n\n-3x + 6 + 9 = x\n\nSolve for x:\n\n4x = 15\n\nx = 15/4\n\nTherefore, the x-intercept of the transformed function g(x) is x = 15/4.'), ('def calculate_parts (total_fruits : ℕ) (total_ratio_parts : ℕ) (orange_parts : ℕ) : ℕ :=\ntotal_fruits * orange_parts / total_ratio_parts\n\ndef calculate_oranges_in_basket : ℕ :=\nlet total_fruits := 120 in\nlet apple_to_orange := (3, 4) in\nlet orange_to_banana := (2, 5) in\nlet total_ratio := (apple_to_orange.1 * orange_to_banana.1, apple_to_orange.2 * orange_to_banana.1, apple_to_orange.2 * orange_to_banana.2) in\nlet total_ratio_parts := total_ratio.1 + total_ratio.2.1 + total_ratio.2.2 in\nlet orange_parts := total_ratio.2.1 in\ncalculate_parts total_fruits total_ratio_parts orange_parts\n\n#eval calculate_oranges_in_basket', 'In a fruit basket, there are apples, oranges, and bananas. The ratio of apples to oranges is 3:4 and the ratio of oranges to bananas is 2:5. How many oranges are there if the total number of fruits is 120?', "First we find out the total ratio by multiplying the two given ratios (3:4 and 2:5): \n- For apples to oranges, it's 3:4;\n- For oranges to bananas, it's 2:5;\nSo the ratio of apples to oranges to bananas becomes (3x2):(4x2):(4x5) = 6:8:20. \n\nNext, we add up all the parts of the ratio (6+8+20) to get 34. This means that out of 34 parts, 120 fruits are available. \n\nTo find out how many oranges there are, we need to calculate how much 1 part is worth. We do this by dividing the total number of fruits by the total parts of the ratio (120 ÷ 34 ≈ 3.53).\n\nFinally, we multiply the number of parts that represent oranges (8) by the value of 1 part (3.53) to get the number of oranges, which is about 28."), ('import data.real.basic\n\ndef volume_of_box (l w h : ℝ) : ℝ := l * w * h\n\ndef new_dimensions (x : ℝ) : ℝ := 2 * x\n\ndef new_volume (l w h : ℝ) : ℝ := volume_of_box (new_dimensions l) (new_dimensions w) (new_dimensions h)\n\nlemma volume_of_new_box :\n  new_volume 5 3 2 = 240 :=\nbegin\n  unfold new_volume,\n  unfold new_dimensions,\n  unfold volume_of_box,\n  norm_num,\nend', 'Sarah has a rectangular box with a length of 5 units, a width of 3 units, and a height of 2 units. She wants to create a new rectangular box, identical in shape but twice the size in each dimension. What would be the volume of the new box?', "In order to find the volume of the new box, we first need to find the volume of the initial box. The volume of a rectangular box can be found by multiplying its length, width, and height. So, the volume of Sarah's first box is 5 units * 3 units * 2 units = 30 cubic units. \n\nNow, for the new box, each dimension is twice the size of the original box. That means the length is 5 units * 2 = 10 units, the width is 3 units * 2 = 6 units, and the height is 2 units * 2 = 4 units. So, the volume of the new box is 10 units * 6 units * 4 units = 240 cubic units."), ('import data.real.basic\n\nexample : (3:ℝ)^4 > (4:ℝ)^3 :=\nbegin\n  have h1 : (3:ℝ)^4 = 81 := by norm_num,\n  have h2 : (4:ℝ)^3 = 64 := by norm_num,\n  rw h1,\n  rw h2,\n  norm_num,\nend', "Let's consider two numbers, 3 and 4. Now, let's raise 3 to the power of 4 (3^4) and raise 4 to the power of 3 (4^3). Can you determine if 3^4 is greater than, less than, or equal to 4^3?", "Let's calculate both expressions.\n\n3^4 = 3 * 3 * 3 * 3 = 81\n4^3 = 4 * 4 * 4 = 64\n\nTherefore, 3^4 is greater than 4^3."), ('import data.int.basic\nimport tactic.norm_num\n\nopen int\n\n-- defining the problem\ndef weeks_to_repay : ℤ → ℤ → ℤ :=\nλ debt weekly_repayment, debt / weekly_repayment\n\n-- proving the solution\nexample : weeks_to_repay (-50) (-5) = 10 :=\nbegin\n  unfold weeks_to_repay,\n  norm_num,\nend', 'John has a debt of $50 to his friend, Mike. He promised to pay back Mike $5 each week. How many weeks will it take for John to pay back all his debt to Mike?', 'John owes Mike $50, and he will pay back $5 each week. Therefore, to find out how many weeks it will take for John to repay all his debt, we need to divide his total debt by the amount he pays each week. So, we divide -50 (the amount of his debt) by -5 (the amount he pays each week). The answer is 50 / 5 = 10. Therefore, it will take John 10 weeks to repay Mike.'), ('import data.real.basic\n\n-- We first define the measures of the angles ABC and BCA\ndef ABC := 45\ndef BCA := 70\n\n-- We then define the measure of the angle BAC as the remainder of 180 after subtracting the measures of ABC and BCA\ndef BAC := 180 - ABC - BCA\n\n-- We can then calculate the measure of the angle BAC\n#eval BAC -- Outputs 65', 'In triangle ABC, ∠ABC = 45° and ∠BCA = 70°. Find the measure of ∠BAC.', 'In a triangle, the sum of the measures of the three angles is always 180 degrees. Therefore, we can find the measure of ∠BAC by subtracting the measures of ∠ABC and ∠BCA from 180. So, ∠BAC = 180 - 45 - 70 = 65°.'), ("open nat\n\n-- Let's declare the variables\ndef num_red_marbles : ℕ := 35\ndef num_blue_marbles : ℕ := 42\ndef num_green_marbles : ℕ := 21\n\n-- We want to find the total number of marbles\ndef total_marbles : ℕ := num_red_marbles + num_blue_marbles + num_green_marbles\n\n-- Now we can prove that the total number of marbles is 98\nexample : total_marbles = 98 :=\nbegin\n  -- Simplify to get the result\n  calc\n    total_marbles = num_red_marbles + num_blue_marbles + num_green_marbles : rfl\n               ... = 35 + 42 + 21 : by rw [num_red_marbles, num_blue_marbles, num_green_marbles]\n               ... = 98 : rfl\nend", 'Sally has a jar of marbles. In the jar, there are 35 red marbles, 42 blue marbles, and 21 green marbles. Sally wants to know how many marbles she has in total. Can you help her count the total number of marbles in the jar?', 'To find the total number of marbles in the jar, we should add the number of red marbles, blue marbles, and green marbles together. We know that Sally has 35 red marbles, 42 blue marbles, and 21 green marbles. If we add these numbers together, we get 35 + 42 + 21 = 98. So, Sally has 98 marbles in total.'), ('def exchange_candies (james_candies : ℕ) (tom_candies : ℕ) : ℕ :=\nlet james_hundreds := (james_candies / 100) % 10 in\nlet tom_hundreds := (tom_candies / 100) % 10 in\njames_candies - james_hundreds * 100 + tom_hundreds * 100\n\n#eval exchange_candies 2345 4567  -- output is 2545', 'James has 2,345 candies and his friend, Tom, has 4,567 candies. They decided to exchange their candies. How many candies would James have if he exchanged the candies in the hundreds place with Tom?', "James has 2,345 candies, which means he has 2 thousands, 3 hundreds, 4 tens, and 5 ones. Tom has 4,567 candies, which means he has 4 thousands, 5 hundreds, 6 tens, and 7 ones. \nIf James exchanges his hundreds place candy with Tom's, then James will give 300 candies to Tom and Tom will give 500 candies to James. \nSo, James would have 2,345 - 300 + 500 = 2,545 candies after the exchange."), ('import data.real.basic\n\n-- define the system of equations\ndef eq1 (x y : ℝ) : Prop := 3*x + 2*y = 13\ndef eq2 (x y : ℝ) : Prop := 2*x + 3*y = 14\n\n-- prove that (2.2, 3.2) is a solution to the system of equations\nexample : eq1 2.2 3.2 ∧ eq2 2.2 3.2 :=\nbegin\n  split,\n  { -- proof for eq1\n    unfold eq1,\n    norm_num, },\n  { -- proof for eq2\n    unfold eq2,\n    norm_num, },\nend', 'Solve the following system of equations:\n\n1. 3x + 2y = 13\n2. 2x + 3y = 14', "To solve the system of equations, we can use the method of substitution or elimination. In this case, we'll use elimination.\n\nFirst, we multiply the first equation by 2 and the second equation by 3 to make the coefficients of y the same in both equations:\n\n1. 6x + 4y = 26\n2. 6x + 9y = 42\n\nThen, we subtract the second equation from the first to eliminate y:\n\n(6x + 4y) - (6x + 9y) = 26 - 42\n\nThis simplifies to:\n\n-5y = -16\n\nDivide both sides by -5 to solve for y:\n\ny = 16 / 5 = 3.2\n\nSubstitute y = 3.2 into the first original equation:\n\n3x + 2(3.2) = 13\n\nThis simplifies to:\n\n3x = 13 - 6.4 = 6.6\n\nDivide both sides by 3 to solve for x:\n\nx = 6.6 / 3 = 2.2\n\nSo, the solution to the system of equations is x = 2.2 and y = 3.2."), ('import data.real.basic\n\n-- definition of the numbers\ndef total_students := 60\ndef boys_like_math := 10\n\n-- proof that the probability is 1/6\nexample : boys_like_math / total_students = 1/6 :=\nbegin\n  rw [boys_like_math, total_students],\n  norm_num,\nend', 'In a survey of 60 students about their favorite school subject, the results were displayed in a two-way table as follows:\n\n|           | Math | English | Science | Total |\n|-----------|------|---------|---------|-------|\n| Boys      | 10   | 5       | 5       | 20    |\n| Girls     | 10   | 15      | 15      | 40    |\n| Total     | 20   | 20      | 20      | 60    |\n\nBased on this table, prove that the probability of a randomly selected student being a boy who likes Math is 1/6.', 'According to the table, the total number of students surveyed is 60. The number of boys who like Math is 10. So the probability of a randomly selected student being a boy who likes Math is the number of boys who like Math divided by the total number of students. Hence, the probability is 10/60 = 1/6.'), ('def volume (length : ℕ) (width : ℕ) (height : ℕ) : ℕ := length * width * height\n#eval volume 5 3 2  -- output is 30', 'Tom has a box with a length of 5 units, a width of 3 units, and a height of 2 units. What is the volume of the box?', "To find the volume of a box (or a rectangular prism), you simply multiply its length, width and height. In this case, Tom's box has a length of 5 units, a width of 3 units, and a height of 2 units. So, the volume of Tom's box is 5 units * 3 units * 2 units = 30 cubic units."), ('open nat\n#eval 7 * 6  -- returns 42', 'Johnny has 7 boxes. Each box contains 6 apples. How many apples does Johnny have in total?', 'To find out the total number of apples Johnny has, we need to multiply the number of boxes by the number of apples in each box. So we do 7 (boxes) times 6 (apples per box) which equals 42. Therefore, Johnny has 42 apples in total.'), ('import data.real.basic\n\nlemma eq_frac : (3 : ℝ) / 6 = 1 / 2 :=\nbegin\n  norm_num,\nend', 'Prove that the fraction 3/6 is equivalent to the fraction 1/2.', 'To prove that two fractions are equivalent, we need to show that they represent the same quantity. We can do this by simplifying the fraction 3/6. If we divide both the numerator (3) and the denominator (6) by the greatest common divisor (which is 3), we get 1/2. Hence, the fraction 3/6 is equivalent to the fraction 1/2.'), ('import data.real.basic\n\ntheorem pizza_problem : (2/3) * (3/4) = 1/2 :=\nbegin\n  norm_num,\nend', 'If a pizza is divided into 2/3 slices, and you take 3/4 of those slices, how much of the pizza do you have?', 'To solve this problem, we multiply the fractions together. The resulting fraction will represent the part of the pizza you have. So, we multiply the fractions 2/3 (the slices you have) and 3/4 (the part of those slices you take) together. The multiplication of fractions is done by multiplying the numerators (the top numbers) together to get a new numerator, and the denominators (the bottom numbers) together to get a new denominator. In this case, (2*3)/(3*4) = 6/12, which simplifies to 1/2. Therefore, you have half of the pizza.'), ('import data.rat.basic\n\ndef count_females_who_prefer_vanilla : ℕ := 20\ndef total_females : ℕ := 40\n\ndef conditional_probability_vanilla_given_female : ℚ :=\n  count_females_who_prefer_vanilla / total_females \n\n#eval conditional_probability_vanilla_given_female  -- output should be 0.5', 'Consider a two-way table representing the favorite ice cream flavors of a group of 100 people. The flavors are Chocolate, Vanilla, and Strawberry. The table is as follows:\n\n|                | Chocolate | Vanilla | Strawberry | Total |\n|----------------|-----------|---------|------------|-------|\n| Male           | 20        | 25      | 15         | 60    |\n| Female         | 15        | 20      | 5          | 40    |\n| Total          | 35        | 45      | 20         | 100   |\n\nWhat is the conditional probability that a person chosen at random prefers Vanilla given that the person is Female?', 'Given the two-way table, we know that out of the 40 females, 20 prefer Vanilla. Therefore, to find the conditional probability that a person chosen at random prefers Vanilla given that the person is Female, we divide the number of females who prefer Vanilla by the total number of females. So, the conditional probability is 20/40 = 0.5, or 50%.'), ('import data.real.basic\n\n-- Defining the fractions\nnoncomputable def Alice := (2 : ℝ) / (6 : ℝ)\nnoncomputable def Bob := (1 : ℝ) / (3 : ℝ)\n\n-- Proving they are equal\ntheorem Alice_eats_same_as_Bob : Alice = Bob :=\nbegin\n  unfold Alice Bob, -- replacing Alice and Bob by their definitions\n  norm_num, -- simplifying the fractions\nend', 'Alice has a pie that she divided into 6 equal parts and she ate 2 parts. Bob has a pie that he divided into 3 equal parts and he ate 1 part. Who ate more pie: Alice or Bob, or did they eat the same amount?', 'We start by comparing the fractions of the pies that Alice and Bob ate. Alice ate 2/6 of her pie and Bob ate 1/3 of his pie. These fractions can be simplified: 2/6 simplifies to 1/3, which is the same as the fraction of the pie that Bob ate. Therefore, Alice and Bob ate the same amount of pie.'), ('import analysis.special_functions.integrals\n\nvariables {a b c : ℝ}\n\nlemma integral_of_constant_function : \n  ∫ x in a..b, c = (b - a) * c :=\nbegin\n  simp only [interval_integral.integral_const, algebra.id.smul_eq_mul, mul_comm],\nend', 'Prove that the integral of a constant function `f(x) = c`, over the interval `[a, b]`, is equal to `c*(b - a)`.', 'Since `f(x)` is a constant function, its value is `c` for all `x` in `[a, b]`. The area under this function from `a` to `b` forms a rectangle with length `b - a` and height `c`. Therefore, the area, which is the integral ∫ from `a` to `b` of `f(x) dx`, equals to `c*(b - a)`.'), ('import data.real.basic\nimport tactic.norm_num\n\ndef cups_sold_by_john (x : ℝ) (y : ℝ) : Prop := 2*x = 30/y\ndef cups_sold_by_mary (y : ℝ) : Prop := 15*y = 7.5\n\ntheorem john_and_mary : ∃ (x : ℝ) (y : ℝ), cups_sold_by_john x y ∧ cups_sold_by_mary y :=\nbegin\n  use 30,\n  use 0.5,\n  split,\n  { unfold cups_sold_by_john, norm_num, },\n  { unfold cups_sold_by_mary, norm_num, },\nend', 'John and Mary are selling lemonade in the park. John sold twice as many cups of lemonade as Mary did and he collected $30 in total. Mary sold 15 cups and made $7.5. How much are they charging for a cup of lemonade?', 'We can create two equations from the problem. Let x be the number of cups Mary sold and y be the price for a cup of lemonade. \n\nFrom the information given, we know that John sold twice as many cups of lemonade as Mary did, so we get the first equation: \n2x = 30/y.\n\nWe also know that Mary sold 15 cups of lemonade and made $7.5, so we get the second equation: \nx = 15 and 15y = 7.5.\n\nFirst, we solve the second equation for y, which gives y = 7.5 / 15 = $0.5. \nSubstitute y = 0.5 into the first equation, we get 2x = 30 / 0.5 = 60, which gives x = 30. \nSo, John sold 30 cups of lemonade and Mary sold 15 cups of lemonade. They were charging $0.5 for a cup of lemonade.'), ('import data.real.basic\n\nopen real\n\n-- defining the function f(x, y) = x^2 - 3x + 2y\ndef f (x y : ℝ) : ℝ := x^2 - 3*x + 2*y\n\n-- proving that f(2, 3) = 4\nexample : f 2 3 = 4 :=\nbegin\n  unfold f, -- replace f with its definition\n  -- now the goal is (2)^2 - 3*2 + 2*3 = 4\n  norm_num, -- simplify the arithmetic expression\nend', 'Consider a function f(x, y) = x^2 - 3x + 2y. What is the value of the function when x = 2 and y = 3?', 'We just need to substitute x = 2 and y = 3 into the function. So, f(2, 3) = (2)^2 - 3*(2) + 2*(3) = 4 - 6 + 6 = 4. Therefore, the value of the function when x = 2 and y = 3 is 4.'), ('import data.real.basic\n\nopen real\n\n-- defining the absolute value as a piecewise function\nnoncomputable def abs_piecewise (x : ℝ) : ℝ :=\nif x ≥ 0 then x else -x\n\n-- proving that the piecewise definition is equivalent to the standard definition\ntheorem abs_eq_abs_piecewise (x : ℝ) : abs x = abs_piecewise x :=\nbegin\n  unfold abs_piecewise,\n  by_cases h : x ≥ 0,\n  { -- case where x is nonnegative\n    rw if_pos h,\n    exact abs_of_nonneg h,\n  },\n  { -- case where x is negative\n    rw if_neg h,\n    exact abs_of_neg (lt_of_not_ge h),\n  },\nend', 'Prove that for all real numbers `x`, the absolute value of `x` can be expressed as a piecewise function.', 'The absolute value of a real number `x` is defined as `x` if `x` is greater than or equal to 0, and as `-x` if `x` is less than 0. This exactly represents the definition of a piecewise function, where different rules apply to different parts of the domain. Therefore, we can write the absolute value of `x` as a piecewise function as follows:\n\nabs(x) = \n{\n  x   if x ≥ 0\n  -x  if x < 0\n}'), ('import data.real.basic\n\n-- define the total number of students\ndef total_students : ℝ := 30\n\n-- define the number of students who like math\ndef math_students : ℝ := 18\n\n-- define the number of students who like science\ndef science_students : ℝ := 12\n\n-- define the number of students who like both math and science\ndef both_students : ℝ := 8\n\n-- define the number of students who like either math or science or both\ndef either_students : ℝ := math_students + science_students - both_students\n\n-- define the number of students who like neither math nor science\ndef neither_students : ℝ := total_students - either_students\n\n-- define the probability that a student chosen at random likes neither math nor science\nnoncomputable def prob_neither : ℝ := neither_students / total_students\n\n-- prove that the probability is approximately 0.267 (or exactly 8/30)\nexample : abs (prob_neither - 8 / 30) < 0.0001 :=\nbegin\n  unfold prob_neither,\n  unfold neither_students,\n  unfold either_students,\n  unfold total_students,\n  unfold math_students,\n  unfold science_students,\n  unfold both_students,\n  norm_num,\nend', 'In a class of 30 students, 18 students like math, 12 students like science, and 8 students like both math and science. What is the probability that a student chosen at random likes neither math nor science?', 'First, we need to find the number of students who like either math or science or both, which is 18 (math) + 12 (science) - 8 (both), because the students who like both are counted twice.\n\nSo, the number of students who like either math or science or both is 18 + 12 - 8 = 22.\n\nThen, we subtract this number from the total number of students to find the number of students who like neither math nor science, which is 30 (total) - 22 = 8.\n\nFinally, the probability that a student chosen at random likes neither math nor science is the number of students who like neither divided by the total number of students, which is 8/30 = 0.267, or 26.7%.'), ('import data.int.basic\n\nopen int\n\nlemma find_consecutive_integers : \n∃ (n m : ℕ), n > 0 ∧ m > 0 ∧ n ≠ m ∧ n * m = 42 ∧ nat.succ n = m :=\nbegin\n  use [6, 7],\n  split,\n  exact dec_trivial,\n  split,\n  exact dec_trivial,\n  split,\n  exact dec_trivial,\n  split,\n  exact dec_trivial,\n  exact dec_trivial,\nend', 'The product of two consecutive positive integers is 42. What are the two integers?', 'Since the two numbers are consecutive and their product is 42, we need to find two numbers that multiply to 42 and are also 1 unit apart. By factoring 42, we find that the pair of factors (6, 7) meet this requirement. Therefore, the two consecutive positive integers are 6 and 7.'), ('import data.real.basic\n\n-- define the equation\ndef equation (x : ℝ) := 5*x + 7 = 33\n\n-- prove the solution\ntheorem solution : ∃ x, equation x := \nbegin\n  use 5.2,\n  unfold equation,\n  norm_num,\nend', 'Let the equation be `5x + 7 = 33`. Solve the equation to find the value of `x`.', 'First, we can subtract 7 from both sides of the equation, which gives us `5x = 26`. Then, we divide both sides by 5 to isolate `x`. So, `x = 26/5 = 5.2`.'), ('import data.real.basic\n\n-- defining the points P1 and P2\ndef P1 : ℝ × ℝ := (2, 10)\ndef P2 : ℝ × ℝ := (5, 30)\n\n-- proving the slope of the line passing through P1 and P2 is 20 / 3\nexample : (P2.2 - P1.2) / (P2.1 - P1.1) = 20 / 3 :=\nbegin\n  unfold P1 P2,\n  norm_num,\nend', 'John is riding his bicycle along a straight road. He starts at a point A. After 2 hours, he reaches point B which is 10 miles away from A. He continues to ride and after 3 more hours, he reaches point C which is 20 miles away from B. If the distance is represented on the y-axis and time on the x-axis of a coordinate plane, what is the slope of the line passing through the points representing the distances John covered in the first 2 hours and the total 5 hours?', "The slope of a line is calculated by the change in y-values divided by the change in x-values between two points on the line. Let's denote the point representing the distance John covered in the first 2 hours as P1(2,10) and the point representing the total distance he covered in 5 hours as P2(5,30). The slope of the line passing through P1 and P2 is (30-10) / (5-2) = 20 / 3 = 6.67 (approximately). Therefore, the slope of the line is 6.67."), ('import data.int.basic\n\ntheorem neg_neg_eq_self (x : ℤ) : -(-x) = x :=\nbegin\n    rw neg_neg,\nend', 'Prove that for any integer x, the following equation holds true: -(-x) = x.', 'In mathematics, the negative of a negative is equivalent to a positive. This concept can be demonstrated intuitively by considering the number line. If you start at 0 and move x steps to the left, you end up at -x. If you then take another x steps to the left, you end up back at the starting point, 0. This implies that -(-x) = x.'), ("import data.int.basic\n\nopen int\n\n-- let's represent Jack's initial balance as a variable\ndef jack_initial_balance : ℤ := -50\n\n-- let's represent the amount Jack deposited as a variable\ndef jack_deposit : ℤ := 100\n\n-- Jack's new balance is the sum of his initial balance and his deposit\ndef jack_new_balance : ℤ := jack_initial_balance + jack_deposit\n\n-- we can now prove that Jack's new balance is $50\nexample : jack_new_balance = 50 :=\nbegin\n  -- unfold the definition of jack_new_balance\n  unfold jack_new_balance,\n  -- unfold the definition of jack_initial_balance and jack_deposit\n  unfold jack_initial_balance jack_deposit,\n  -- the goal is now to prove that -50 + 100 = 50, which Lean can do automatically\n  exact dec_trivial,\nend", "Jack has a bank account balance of -$50. He then deposits $100 into the account. What is Jack's new bank account balance?", "Jack's initial bank account balance is -$50. When he deposits $100 into the account, this is like adding $100 to -$50. So, we calculate -$50 + $100, which equals to $50. Therefore, Jack's new bank account balance is $50."), ('def rectangular_prism_volume (length : ℕ) (width : ℕ) (height : ℕ) : ℕ := length * width * height\n\nexample : rectangular_prism_volume 10 5 8 = 400 := rfl', 'A rectangular prism has a length of 10 units, a width of 5 units, and a height of 8 units. What is the volume of the rectangular prism?', 'The formula for the volume of a rectangular prism is length times width times height. In this case, the length is 10 units, the width is 5 units, and the height is 8 units. Therefore, the volume of the rectangular prism is 10 units * 5 units * 8 units = 400 cubic units.'), ('import data.real.basic\n\n-- defining the volume of a cube function\ndef volume_of_cube (a : ℝ) : ℝ := a^3\n\n-- calculating the volume of the cube with edge length 5\nexample : volume_of_cube 5 = 125 :=\nbegin\n  unfold volume_of_cube, -- expanding the volume_of_cube function\n  norm_num, -- simplifying the calculation\nend', 'Given a cube with an edge length of 5 units, what is the volume of the cube?', 'The volume of a cube is calculated by cubing the edge length. In this case, the edge length is 5 units. Therefore, the volume of the cube is 5^3 = 125 cubic units.'), ('import data.real.basic\n\nnoncomputable def proportion (fav : ℕ) (total : ℕ) : ℝ := fav / total\n\ndef problem : Prop := \nlet total_students := 1000,\n    grades := 4,\n    students_per_grade := total_students / grades,\n    fav_sport_9th := 230,\n    fav_sport_10th := 260,\n    fav_sport_11th := 250,\n    fav_sport_12th := 260 in\nlet prop_9th := proportion fav_sport_9th students_per_grade,\n    prop_10th := proportion fav_sport_10th students_per_grade,\n    prop_11th := proportion fav_sport_11th students_per_grade,\n    prop_12th := proportion fav_sport_12th students_per_grade in\nprop_10th = prop_12th ∧ prop_10th > prop_9th ∧ prop_10th > prop_11th', "In a high school of 1000 students, there are four grades: 9th, 10th, 11th, and 12th. The school conducted a survey on student's favorite sport. The result shows that 230 students in the 9th grade, 260 students in the 10th grade, 250 students in the 11th grade, and 260 students in the 12th grade prefer soccer over other sports. Calculate the proportion of students in each grade who prefer soccer, and find out which grade has the highest proportion.", 'First, we need to calculate the total number of students in each grade. Assume there are equal numbers of students in each grade, so we have 1000 students / 4 grades = 250 students/grade. \n\nNext, we calculate the proportion of students who prefer soccer in each grade by dividing the number of students who prefer soccer by the total number of students in that grade. \n\nFor the 9th grade, the proportion is 230 / 250 = 0.92 or 92%.\nFor the 10th grade, the proportion is 260 / 250 = 1.04 or 104%.\nFor the 11th grade, the proportion is 250 / 250 = 1 or 100%.\nFor the 12th grade, the proportion is 260 / 250 = 1.04 or 104%.\n\nSo, the 10th and 12th grades have the highest proportion of students who prefer soccer, which is 104%.'), ('import data.real.basic\n\n-- representing fractions as real numbers\nnoncomputable def pizza_left := (3 / 4 : ℝ) - (1 / 4 : ℝ)\n\n-- showing that the result is 1/2\ntheorem pizza_left_half : pizza_left = 1 / 2 :=\nbegin\n  unfold pizza_left,\n  norm_num,\nend', 'If a school cafeteria has 3/4 of a pizza left and a student eats 1/4 of a pizza, how much pizza is left?', 'To figure out how much pizza is left, we need to subtract the amount the student ate from the amount the cafeteria had to start with. That is, we need to subtract 1/4 from 3/4. To subtract fractions, we just subtract the numerators (the top numbers) and keep the same denominator. So, 3/4 - 1/4 = 2/4. However, 2/4 can be simplified to 1/2 by dividing both the numerator and the denominator by 2. Therefore, the cafeteria has 1/2 of a pizza left.'), ("import data.real.basic\n\n-- Let's define the measures of the angles in triangle ABC\ndef angle_BAC : ℝ := 35\ndef angle_BCA : ℝ := 45\ndef angle_ABC : ℝ := 180 - (angle_BAC + angle_BCA)\n\n-- Now, let's prove that the measure of angle ABC is 100 degrees\nexample : angle_ABC = 100 :=\nbegin\n  unfold angle_ABC,\n  unfold angle_BAC,\n  unfold angle_BCA,\n  norm_num,\nend", 'In triangle ABC, angle BAC is 35 degrees and angle BCA is 45 degrees. What is the measure of angle ABC?', 'In a triangle, the sum of the measures of the three angles is always 180 degrees. Given that angle BAC is 35 degrees and angle BCA is 45 degrees, we can add these two measures to get 80 degrees. To find the measure of the third angle ABC, we subtract the sum of the measures of the other two angles from 180 degrees. Thus, 180 degrees - 80 degrees = 100 degrees. Therefore, the measure of angle ABC is 100 degrees.'), ('import data.real.basic\n\n-- x is the cost of the juice\n-- 3x is the cost of the chocolate bar\n\n-- equation: x + 3x = 20\ndef eqn (x : ℝ) : Prop := x + 3*x = 20\n\n-- the cost of the juice\ndef juice_cost := 5\n\n-- the cost of the chocolate bar\ndef chocolate_bar_cost := 3 * juice_cost\n\n-- check the solution\nexample : juice_cost + chocolate_bar_cost = 20 :=\nbegin\n  rw [juice_cost, chocolate_bar_cost],\n  exact eq.refl 20,\nend', 'John wants to buy a chocolate bar and a bottle of juice. The cost of the chocolate bar is 3 times the cost of the juice. If John has exactly $20 and he wants to spend all of it, what is the cost of the juice and the chocolate bar?', "Let's set up an equation to solve this problem. Let x be the cost of the juice. The cost of the chocolate bar is then 3x. Since John wants to spend all of his $20, we can set up the following equation:\nx (cost of juice) + 3x (cost of chocolate bar) = $20\nSolving this equation gives us:\n4x = $20\nx = $20 / 4\nx = $5\nSo, the juice costs $5 and the chocolate bar costs 3 * $5 = $15."), ("import data.real.basic\n\n-- First, we'll prove that 3/4 and 6/8 are equivalent.\nexample : (3 : ℝ) / 4 = (6 : ℝ) / 8 :=\nbegin\n  norm_num,\nend\n\n-- Next, we'll prove that 3/4 is greater than 2/3.\nexample : (2 : ℝ) / 3 < (3 : ℝ) / 4 :=\nbegin\n  norm_num,\nend", 'If we have two fractions, 3/4 and 6/8, are these fractions equivalent? And which one is greater, 2/3 or 3/4?', "First, we'll check if 3/4 and 6/8 are equivalent. Equivalent fractions are fractions that may look different, but are actually the same size. To check if two fractions are equivalent, we can cross-multiply. If the two products are equal, then the fractions are equivalent. \n\nFor 3/4 and 6/8, we multiply 3 by 8 and 4 by 6. Both of these products equal 24, so 3/4 and 6/8 are equivalent fractions.\n\nNext, we'll compare 2/3 and 3/4 to see which one is greater. To compare fractions, we can convert them to have the same denominator, and then compare the numerators. \n\nFor 2/3 and 3/4, the least common denominator is 12. We convert 2/3 to 8/12 and 3/4 to 9/12. Since 9 is greater than 8, 3/4 is greater than 2/3."), ('import data.real.basic\n\n-- Define the side length of the square\ndef side_length_of_square : ℝ := 5\n\n-- Define the perimeter of the square\ndef perimeter_of_square (side_length : ℝ) : ℝ := 4 * side_length\n\n-- Prove that the perimeter of the square is 20 kilometers\nexample : perimeter_of_square side_length_of_square = 20 :=\nbegin\n  unfold perimeter_of_square,\n  unfold side_length_of_square,\n  norm_num,\nend', 'In a certain city, there are 4 streets arranged in a way that they form a square. The length of one side of the square is 5 kilometers. What is the total distance around the city, i.e., the perimeter of the square?', 'The perimeter of a square is calculated by adding up all its sides. Since a square has all sides of equal length, we can simply multiply the length of one side by 4. In this case, the length of one side of the square is 5 kilometers, so the total distance around the city is 5 kilometers * 4, which equals 20 kilometers.'), ('import data.nat.basic\n\nopen nat\n\ndef calculate_money (tens : ℕ) (ones : ℕ) : ℕ := tens * 10 + ones\n\nexample : calculate_money 3 4 = 34 :=\nbegin\n  unfold calculate_money,\n  rw mul_comm 3 10,\n  exact add_comm 30 4,\nend', 'John has 3 ten-dollar bills and 4 one-dollar bills. How much money does John have in total?', 'John has 3 ten-dollar bills, so he has 3 * 10 = 30 dollars. He also has 4 one-dollar bills, so he has 4 * 1 = 4 dollars. Adding these together, John has 30 + 4 = 34 dollars in total.'), ("import data.int.basic\nimport tactic.norm_num\n\nopen int\n\n-- Define the initial balance of John's bank account\ndef john_initial_balance : ℤ := -200\n\n-- Define the money John earns from his summer job\ndef john_earnings : ℤ := 300\n\n-- Define the final balance of John's bank account\ndef john_final_balance : ℤ := john_initial_balance + john_earnings\n\n-- Prove that the final balance of John's bank account is 100\nexample : john_final_balance = 100 :=\nbegin\n  unfold john_final_balance, -- expand the definition of john_final_balance\n  rw [john_initial_balance, john_earnings], -- replace john_initial_balance and john_earnings with their definitions\n  norm_num, -- simplifies numerical computations\nend", "John has a bank account with a balance of -$200. He then earns $300 from his summer job and deposits all of it in his bank account. Write an equation to represent this situation and solve it to find the final balance of John's bank account.", "Let's represent the initial balance of John's bank account as `-200`. Then, he earns `$300` and this can be represented as `+300`. The equation that represents this situation is `-200 + 300 = x`, where `x` is the final balance of John's bank account.\n\nTo solve this equation, we simply add `-200` and `300` to get `100`. Therefore, the final balance of John's bank account is `$100`."), ('def rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\nexample : rectangle_area 123 45 = 5535 :=\nbegin\n  unfold rectangle_area,\n  exact rfl,\nend', 'A rectangle has a length of 123 units and a width of 45 units. What is the area of the rectangle?', 'The area of a rectangle is found by multiplying the length by the width. In this case, the length is 123 units and the width is 45 units. By multiplying these two numbers together, we get the area of the rectangle, which is 5535 square units.'), ('def convert_to_seconds (min : ℕ) : ℕ := min * 60\ndef distance (speed : ℕ) (time : ℕ) : ℕ := speed * time \n\ndef john_run : ℕ := \nlet minutes := 15 in \nlet speed := 5 in \nlet time_in_seconds := convert_to_seconds minutes in \ndistance speed time_in_seconds\n#eval john_run -- output: 4500', 'John runs at a constant speed of 5 meters per second. If he wants to run for 15 minutes, how far will he run?', 'Firstly, we need to convert the running time from minutes to seconds because the speed is given in meters per second. We know that 1 minute equals 60 seconds, so 15 minutes is 15*60 = 900 seconds.\n\nSince John runs at a constant speed of 5 meters per second, in 900 seconds, he will run 5 * 900 = 4500 meters.'), ("import data.real.basic\n\n-- define the length of the diagonals\ndef length_of_diagonal (AB : ℝ) (BC : ℝ) : ℝ := (AB^2 + BC^2)^(1/2)\n\n-- state and prove the theorem\ntheorem length_of_diagonal_after_move (AB BC : ℝ) (move : ℝ) : \n  length_of_diagonal AB BC = length_of_diagonal AB (BC - move) :=\nbegin\n  -- the length of the diagonal in a rectangle doesn't change with a parallel move along the y-axis\n  -- so the proof is by reflexivity\n  refl,\nend\n\n-- apply the theorem to our specific problem\nexample : length_of_diagonal 6 8 = length_of_diagonal 6 (8 - 2) :=\nbegin\n  apply length_of_diagonal_after_move,\nend", 'In a rectangle ABCD, the length of side AB is 6 units and the length of diagonal AC is 10 units. The rectangle is moved in the direction of side AD by 2 units in the negative y-axis direction. If E is the new position for A and F is the new position for D, what is the length of the new diagonal EF?', 'In a rectangle, the diagonals are equal. Therefore, the length of the diagonal AC is equal to the length of the diagonal BD. The diagonal BD remains the same when the rectangle is moved along the y-axis. So, the length of the new diagonal EF is also 10 units, the same as the original diagonal AC.'), ('import data.int.basic\n\nopen int\n\ndef alice_initial_money : ℤ := 10\ndef toy_car_cost : ℤ := 3\ndef kite_cost : ℤ := 4\ndef ice_cream_cost : ℤ := 2\n\ntheorem alice_has_enough_money : alice_initial_money - toy_car_cost - kite_cost ≥ ice_cream_cost :=\nbegin\n  have h : alice_initial_money - toy_car_cost - kite_cost = 3, \n  { \n    apply sub_eq_of_eq_add,\n    apply eq.symm,\n    apply add_eq_of_eq_sub,\n    apply eq.symm,\n    exact dec_trivial,\n  },\n  rw h,\n  exact dec_trivial,\nend', 'Alice has $10. She buys a toy car for $3 and a kite for $4. If she also wants to buy an ice cream that costs $2, does she have enough money left?', 'Alice initially has $10. After buying the toy car and the kite, she spends a total of $3 + $4 = $7. So, she has $10 - $7 = $3 left. Since the ice cream costs $2, and $2 is less than $3, Alice does have enough money to buy the ice cream.'), ("open nat\n\n-- variables\ndef JohnsCars := 7 -- number of John's cars\ndef SamsCars := 2 -- number of Sam's cars\n\n-- theorem\ntheorem total_cars : JohnsCars + SamsCars = 9 :=\nbegin\n  refl, -- JohnsCars + SamsCars is indeed 9 by definition\nend", 'John has 5 more toy cars than Sam. If Sam has 2 toy cars, what is the total number of toy cars they have together?', "Since John has 5 more toy cars than Sam, that means John has 5 + 2 = 7 toy cars. In total, they have 7 (John's cars) + 2 (Sam's cars) = 9 toy cars."), ("import data.real.basic\n\n-- The statement of the problem is a direct consequence of the definition of radian measure.\n-- We don't need to make any assumptions about the specific values of r, s, or θ, \n-- except that r is positive (a radius can't be negative or zero) and θ is nonnegative \n-- (we're only considering nonnegative angles here).\n-- Thus, the formal statement of the problem is as follows:\n\ntheorem arc_length (r θ : ℝ) (h : r > 0) : r * θ = r * θ :=\nbegin\n  -- This is true by the reflexive property of equality.\n  reflexivity,\nend", 'In a circle of radius r, there is an inscribed angle subtended by an arc of length s. If the central angle subtended by the same arc is θ (in radians), prove that s = rθ.', 'The formula for the length of an arc in a circle is s = rθ, where s is the length of the arc, r is the radius of the circle, and θ is the central angle subtended by the arc measured in radians. This formula is derived from the fact that the circumference of a circle is 2πr, and an angle of θ radians in a circle of radius r subtends an arc of length s = rθ.'), ('import data.real.basic\n\n-- defining the variables\ndef length : ℝ := 4\ndef width : ℝ := 3\n\n-- defining the function for perimeter of rectangle\ndef perimeter_of_rectangle (length width : ℝ) : ℝ := 2 * (length + width)\n\n-- proof\nexample : perimeter_of_rectangle length width = 14 :=\nbegin\n  unfold perimeter_of_rectangle,\n  unfold length,\n  unfold width,\n  norm_num,\nend', 'John has a rectangular garden which is 4 meters long and 3 meters wide. He wants to build a fence around the garden. How many meters of fencing does John need?', 'To find out the total length of the fencing John needs, we need to calculate the perimeter of the rectangular garden. The perimeter of a rectangle is given by the formula 2 * (length + width). Substituting the given values, we get 2 * (4 + 3) = 14 meters. So, John needs 14 meters of fencing.'), ('import data.real.basic\n\nvariables (length : ℝ) (width : ℝ)\n\ndef Perimeter := 2 * (length + width)\ndef Area := length * width\n\n#eval Perimeter 15 10  -- output is 50, means the amount of fencing John needs is 50 meters.\n#eval Area 15 10  -- output is 150, means the area of grass John needs to plant is 150 square meters.', 'A rectangular garden has a length of 15 meters and a width of 10 meters. John wants to build a fence around the garden. He also plans to plant grass in the entire garden. Calculate the amount of fencing he needs (in meters) and the area of grass he needs to plant (in square meters).', 'To calculate the amount of fencing John needs, we need to find the perimeter of the rectangular garden. The formula for the perimeter of a rectangle is 2 * (length + width). So, the perimeter of the garden is 2 * (15m + 10m) = 50m. Therefore, John needs 50 meters of fencing.\n\nTo calculate the area of grass John needs to plant, we need to find the area of the rectangular garden. The formula for the area of a rectangle is length * width. So, the area of the garden is 15m * 10m = 150 square meters. Therefore, John needs to plant grass in an area of 150 square meters.'), ('import data.nat.basic\n\nopen nat \n\ndef apples_sold (initial_apples : ℕ) (apples_left : ℕ) : ℕ := initial_apples - apples_left \n\ndef total_apples (baskets : ℕ) (apples_per_basket : ℕ) : ℕ := baskets * apples_per_basket \n\nexample : apples_sold (total_apples 3 7) 14 = 7 :=\nbegin\n  simp [apples_sold, total_apples],\n  exact rfl,\nend', 'Jack has 3 baskets of apples. Each basket contains 7 apples. After selling some apples, he has 14 apples left. How many apples did Jack sell?', 'First, we need to find out the total number of apples Jack had initially. Since he had 3 baskets, each containing 7 apples, he had 3 * 7 = 21 apples. After selling some apples, he has 14 apples left. So, the number of apples Jack sold is the initial amount of apples minus the amount he has left, which is 21 - 14 = 7. Therefore, Jack sold 7 apples.'), ("import data.real.basic\n\n-- Let's represent the pizzas as real numbers\nnoncomputable def alice_pizza : ℝ := 3 / 8\nnoncomputable def bob_pizza : ℝ := 2 / 4\n\n-- Prove that Bob ate more pizza than Alice\nexample : bob_pizza > alice_pizza :=\nbegin\n  unfold alice_pizza bob_pizza,\n  linarith,\nend", 'Alice and Bob are making pizza at home. Alice cuts her pizza into 8 equal slices and eats 3 slices. Bob cuts his pizza into 4 equal slices and eats 2 slices. Who eats more pizza?', 'Alice eats 3 out of 8 slices of her pizza, so the fraction representing the part of the pizza that Alice eats is 3/8. Bob eats 2 out of 4 slices of his pizza, so the fraction representing the part of the pizza that Bob eats is 2/4. \n\nWe know that 2/4 is equivalent to 1/2, and 1/2 is greater than 3/8. Therefore, Bob eats more pizza than Alice.'), ('import data.nat.basic\n\nopen nat \n\ndef total_parts_of_apple (apples : ℕ) (parts : ℕ) : ℕ := apples * parts\n\nexample : total_parts_of_apple 7 3 = 21 :=\nbegin\n  unfold total_parts_of_apple,\n  rw mul_comm,\n  exact rfl,\nend', 'Emma has 7 apples. Each apple is divided into 3 equal parts. How many parts of apple does Emma have in total?', 'To find out how many parts of apple Emma has in total, we need to multiply the number of apples Emma has by the number of parts each apple is divided into. So, 7 apples times 3 parts per apple equals 21 parts. Therefore, Emma has 21 parts of apple in total.'), ('import tactic.norm_num\n\nopen nat \n\n-- define the sequence\ndef S (n : ℕ) : ℕ := 2*n\n\n-- proof that 100th term is 200\nexample : S 100 = 200 :=\nbegin\n  unfold S, -- unfold the definition of S\n  norm_num, -- simplify the arithmetic expression\nend', "Consider the following pattern of numbers: 2, 4, 6, 8, 10, ... . This pattern continues indefinitely where each number is two more than the previous number. Let's denote the nth number in this sequence as S_n. \n\nThe problem is to find a formula for S_n in terms of n, and then use this formula to find the 100th number in the sequence (S_100).", 'The pattern is an arithmetic sequence, where each term is two more than the previous term. So, we can describe the nth term of the sequence as S_n = 2n. \n\nTo find the 100th number in the sequence, we can substitute n = 100 into the formula: \n\nS_100 = 2 * 100 = 200.'), ('import data.real.basic\n\nexample : (3 / 4 : ℝ) - (1 / 4 : ℝ) = 1 / 2 := \nbegin\n  norm_num,\nend', 'If we have 3/4 of a pizza and we eat 1/4 of the pizza, how much pizza is left?', 'The problem is asking about subtracting fractions. If we start with 3/4 of a pizza and eat 1/4 of it, we subtract 1/4 from 3/4 to find out how much pizza is left. This can be done by subtracting the numerators (the top numbers) and keeping the same denominator (the bottom number). So, 3 minus 1 is 2, and the denominator stays as 4. Therefore, there is 2/4 of the pizza left. But 2/4 can be simplified to 1/2 by dividing both the numerator and the denominator by 2. So, there is 1/2 of the pizza left.'), ('import data.real.basic\n\n-- defining the variables\nnoncomputable def R := (70 : ℝ) / 100 -- percentage of students who identified the real part correctly\nnoncomputable def I := (60 : ℝ) / 100 -- percentage of students who identified the imaginary part correctly\nnoncomputable def B := (50 : ℝ) / 100 -- percentage of students who identified both parts correctly\n\n-- defining the principle of inclusion and exclusion\nnoncomputable def principle_of_inclusion_and_exclusion := R + I - B\n\n-- showing that the principle of inclusion and exclusion gives the percentage of students who identified either part correctly\nexample : principle_of_inclusion_and_exclusion = 0.8 :=\nbegin\n  unfold principle_of_inclusion_and_exclusion R I B,\n  norm_num,\nend\n\n-- defining the percentage of students who could not identify either part correctly\nnoncomputable def not_identify_either := 1 - principle_of_inclusion_and_exclusion\n\n-- showing that the percentage of students who could not identify either part correctly is 20%\nexample : not_identify_either = 0.2 :=\nbegin\n  unfold not_identify_either principle_of_inclusion_and_exclusion R I B,\n  norm_num,\nend', "In a school, the mathematics department conducted a study on student's understanding of complex numbers. They found that 70% of students correctly identified the real part of a complex number, and 60% correctly identified the imaginary part. If 50% of students could correctly identify both parts, what percentage of students could not correctly identify either the real or the imaginary part?", "Let's denote the percentage of students who identified the real part correctly as R, the imaginary part correctly as I, and both parts correctly as B. R = 70%, I = 60%, and B = 50%.\n\nAccording to the principle of inclusion and exclusion, the percentage of students who identified either the real or the imaginary part correctly is R + I - B = 70% + 60% - 50% = 80%.\n\nTherefore, the percentage of students who could not identify either part correctly is 100% - 80% = 20%."), ('import data.real.basic\n\nvariables (AB CD AD BC : ℝ)\n\ndef is_parallelogram (AB CD AD BC : ℝ) : Prop :=\nAB = CD ∧ AD = BC\n\ntheorem parallelogram : AB = CD ∧ AD = BC → is_parallelogram AB CD AD BC :=\nbegin\n  intro h,\n  exact h,\nend', 'Given a quadrilateral ABCD, if AB = CD and AD = BC, prove that ABCD is a parallelogram.', 'A quadrilateral is a parallelogram if both pairs of opposite sides are equal. In this case, we are given that AB = CD and AD = BC. Hence, both pairs of opposite sides are equal, so ABCD is a parallelogram.'), ('import data.int.basic\nimport tactic.norm_num\n\nopen int\n\ndef calculate_second_piece_length (total_length : ℤ) (first_piece_length : ℤ) : ℤ :=\ntotal_length - first_piece_length\n\nexample : calculate_second_piece_length 35 18 = 17 :=\nbegin\n  unfold calculate_second_piece_length,\n  norm_num,\nend', 'Mary has a piece of ribbon that is 35 cm long. She cuts it into two pieces. The first piece is 18 cm long. How long is the second piece?', 'To find out the length of the second piece, we subtract the length of the first piece from the total length of the ribbon. So, 35 cm (total length) - 18 cm (first piece) = 17 cm (second piece). Therefore, the second piece of ribbon is 17 cm long.'), ("import data.real.basic\n\n-- Let's define the sides of the rectangle\ndef AB : ℝ := 5\ndef BC : ℝ := 3\ndef CD : ℝ := AB -- because opposite sides of a rectangle are equal\ndef DA : ℝ := BC -- because opposite sides of a rectangle are equal\n\n-- Now let's calculate the perimeter\ndef perimeter : ℝ := AB + BC + CD + DA\n#eval perimeter -- This will output 16", 'In a rectangle ABCD, AB = 5 cm, BC = 3 cm. What is the perimeter of the rectangle?', 'A rectangle has opposite sides of equal length. So, AD = BC = 3 cm and DC = AB = 5 cm. The perimeter of a rectangle is the sum of the lengths of all its sides which is AB + BC + CD + DA = 5 cm + 3 cm + 5 cm + 3 cm = 16 cm. So, the perimeter of the rectangle is 16 cm.'), ('import data.real.basic\n\nvariables (mass : ℝ) (density : ℝ)\n\n-- mass and density are always positive\naxiom mass_pos : 0 < mass\naxiom density_pos : 0 < density\n\n-- the relationship between mass, density, and volume\nnoncomputable def volume := mass / density\n\n-- given values\ndef mass_value := 12\ndef density_value := 4\n\n-- calculation\nexample : volume mass_value density_value = 3 :=\nbegin\n  unfold volume,\n  rw [mass_value, density_value],\n  norm_num,\nend', 'Given that a cuboid has a mass of 12 kg and a density of 4 kg/m³, find the volume of the cuboid.', 'The volume of any object can be found by dividing its mass by its density. In this case, we are given that the mass of the cuboid is 12 kg and the density is 4 kg/m³. Therefore, by dividing the mass by the density, we can find the volume. So, the volume of the cuboid is 12 kg / 4 kg/m³ = 3 m³.'), ('import data.real.basic\n\nnoncomputable theory\n\ndef area_rectangle (l w : ℝ) : ℝ := l * w\ndef area_square (s : ℝ) : ℝ := s * s\ndef remaining_area (a_r a_s : ℝ) : ℝ := a_r - a_s\n\nlemma calculate_remaining_area (l w : ℝ) (h1 : l = 15) (h2 : w = 8) : remaining_area (area_rectangle l w) (area_square w) = 56 :=\nbegin\n  rw [h1, h2],\n  simp [area_rectangle, area_square, remaining_area],\n  norm_num,\nend', 'A rectangle has a length of 15 cm and a width of 8 cm. A square is inscribed inside the rectangle. The side length of the square is the same as the width of the rectangle. What is the area of the remaining part of the rectangle after the square is inscribed?', 'The area of the rectangle can be found by multiplying the length by the width, which gives us 15 cm * 8 cm = 120 square cm. \n\nThe area of the square can be found by squaring the side length, which is the same as the width of the rectangle. Therefore, the area of the square is 8 cm * 8 cm = 64 square cm. \n\nThe area of the remaining part of the rectangle after the square is inscribed can be found by subtracting the area of the square from the area of the rectangle. Therefore, the area of the remaining part is 120 square cm - 64 square cm = 56 square cm.'), ('import data.real.basic\n\n-- Defining the area of a rectangle\ndef rectangle_area (length : ℝ) (width : ℝ) : ℝ := length * width\n\n-- Proving the problem\nexample : rectangle_area (2/3 : ℝ) (1/2 : ℝ) = 1/3 :=\nbegin\n  unfold rectangle_area,\n  norm_num,\nend', "There's a rectangle and its length is 2/3 of a meter, and its width is 1/2 of a meter. What is the area of this rectangle?", 'The area of a rectangle can be found by multiplying its length by its width. So in this case, we have 2/3 meters times 1/2 meter, which gives us 1/3 square meter. So the area of the rectangle is 1/3 square meter.'), ('def apples_in_packages (n : ℕ) : ℕ := 6 * n\n\n#eval apples_in_packages 10  -- returns 60', 'In a grocery store, apples are sold in packages. Each package contains 6 apples. If you buy 1 package, you get 6 apples. If you buy 2 packages, you get 12 apples. This pattern continues in the same way. If you buy 10 packages, how many apples will you get?', 'The problem describes a pattern where the number of apples is always 6 times the number of packages. So, to find out how many apples we get when we buy 10 packages, we multiply the number of packages (10) by the number of apples in each package (6). This gives us 60 apples.'), ('import data.real.basic\n\n-- Defining the function N(t)\ndef N (t : ℝ) := 100*t^2 - 5*t + 200\n\n-- Proving the limit\ntheorem limit_N_at_4 : N 4 = 1780 :=\nbegin\n  unfold N, -- expands the definition of N\n  norm_num, -- simplifies the numerical calculation\nend', 'The number of students (N) who register for the AP Statistics exam in a school increases continuously over time (t, in years). The relationship can be modeled by the function N(t) = 100t^2 - 5t + 200. Considering the limit concept in calculus, find the limit as t approaches 4, and interpret the result in the context of the problem.', 'The limit of a function as x approaches a certain value can be found by simply substituting that value into the function. In this case, to find the limit as t approaches 4, we substitute 4 into the function N(t) = 100t^2 - 5t + 200. This gives us N(4) = 100(4)^2 - 5(4) + 200 = 1600 - 20 + 200 = 1780. Therefore, the limit as t approaches 4 is 1780. In the context of this problem, this means that as the time approaches 4 years, the number of students who register for the AP Statistics exam in the school is approaching 1780.'), ('def debt : ℤ := -120\ndef payment_per_month : ℤ := 20\ndef months_to_pay_debt := debt / payment_per_month\n\n#eval months_to_pay_debt\n-- output: 6', 'Jake has a debt of $120. Every month, he pays off $20 of his debt. After how many months will Jake be out of debt?', 'Jake is paying off $20 of his debt every month, so he is effectively reducing his debt by $20 each month. To figure out how many months it will take him to pay off all of his debt, we need to divide his total debt by the amount he pays off each month. So, $120 ÷ $20 = 6. Therefore, it will take Jake 6 months to pay off his debt.'), ('import data.real.basic\nimport tactic.linarith\n\nvariables (x y : ℝ)\n\n-- Two given equations\ndef eq1 := 2*x + 3*y\ndef eq2 := 4*x + 6*y\n\n-- Proving the equivalence\nexample : ∀ x y, eq1 x y = 0.5 * eq2 x y :=\nbegin\n  intros,\n  unfold eq1 eq2,\n  linarith,\nend', 'Given a system of two linear equations:\n\n1) 2x + 3y = 12\n2) 4x + 6y = 24\n\nProve that the two equations are equivalent.', 'We can see that the second equation is simply the first equation multiplied by 2. Therefore, both equations represent the same line in a Cartesian plane and are hence equivalent.'), ('def rectangle_perimeter (length : ℕ) (width : ℕ) : ℕ := 2 * (length + width)\ndef rectangle_area (length : ℕ) (width : ℕ) : ℕ := length * width\n\n#eval rectangle_perimeter 15 8  -- The result is 46\n#eval rectangle_area 15 8  -- The result is 120', 'John has a rectangular garden. The length of the garden is 15 meters and the width is 8 meters. He wants to build a fence around the garden. \n1. How much fencing will he need?\n2. If he wants to grow flowers inside the garden, what is the total area where he can grow flowers?', '1. The fencing he needs is equal to the perimeter of the rectangular garden. The formula to calculate the perimeter of a rectangle is `2 * (length + width)`. So, the fencing John needs is `2 * (15 meters + 8 meters)` which equals to 46 meters.\n2. The area where he can grow flowers is equal to the area of the rectangular garden. The formula to calculate the area of a rectangle is `length * width`. So, the area inside the garden is `15 meters * 8 meters` equals to 120 square meters.'), ('import data.real.basic\n\ndef square_area (s : ℝ) : ℝ := s^2\n\nexample : square_area (2 * 2) / square_area 2 = 4 :=\nbegin\n  unfold square_area,\n  norm_num,\nend', 'A square has a side length of 2 units. The square undergoes a geometric transformation which doubles its side length. What is the ratio of the area of the transformed square to the original square?', 'The area of a square is found by squaring the side length. The original square has a side length of 2 units, so its area is 2^2 = 4 square units. After the transformation, the side length of the square becomes double, which is 2*2 = 4 units. The area of the transformed square is 4^2 = 16 square units. Therefore, the ratio of the area of the transformed square to the original square is 16/4 = 4.'), ('import data.real.basic\n\n-- define the heights\nnoncomputable def john_castle_height := (3 : ℝ) / 4\nnoncomputable def emily_castle_height := (2 : ℝ) / 3\n\n-- calculate the total height\nnoncomputable def total_castle_height := john_castle_height + emily_castle_height\n\n-- prove that the combined height is 1 5/12 feet\nexample : total_castle_height = 1 + (5 : ℝ) / 12 :=\nbegin\n  unfold total_castle_height john_castle_height emily_castle_height,\n  norm_num,\nend', "John and Emily are building two different sandcastles at the beach. John's castle is 3/4 feet tall, and Emily's castle is 2/3 feet tall. They decide to combine their sandcastles together. How tall is the combined castle?", "To find the total height, we simply need to add John's castle height and Emily's castle height together. That means we need to add 3/4 and 2/3 together. \n\nFirst, we need to find a common denominator. The least common multiple of 4 and 3 is 12. So we change 3/4 to 9/12 and 2/3 to 8/12. \n\nThen, we add the two fractions together: 9/12 + 8/12 = 17/12. \n\nHowever, 17/12 is an improper fraction, and it can be simplified to 1 5/12. \n\nSo, the combined height of John and Emily's castles is 1 5/12 feet."), ('def apples_of_john (apples_of_mary : ℕ) : ℕ := 2 * apples_of_mary\n\nexample : apples_of_john 8 = 16 := rfl', 'John has twice as many apples as his sister, Mary. If Mary has 8 apples, how many apples does John have?', 'John has twice as many apples as Mary, so in order to find the number of apples John has, we need to multiply the number of apples Mary has by 2. If Mary has 8 apples, then John has 8 * 2 = 16 apples.'), ("import data.real.basic\n\n-- Let's define the variables\ndef length_of_park : ℝ := 60 -- in meters\ndef width_of_park : ℝ := 40 -- in meters\ndef width_of_path : ℝ := 2 -- in meters\n\n-- Let's calculate the area of the original park\ndef area_of_park : ℝ := length_of_park * width_of_park -- in square meters\n\n-- Let's calculate the new dimensions of the park including the path\ndef new_length_of_park : ℝ := length_of_park + 2 * width_of_path -- in meters\ndef new_width_of_park : ℝ := width_of_park + 2 * width_of_path -- in meters\n\n-- Let's calculate the area of the new park including the path\ndef area_of_new_park : ℝ := new_length_of_park * new_width_of_park -- in square meters\n\n-- Let's check the results\n#eval area_of_park -- yields 2400\n#eval area_of_new_park -- yields 2816", 'In a rectangular park, the length is 60 meters and the width is 40 meters. A path is to be built around the park that is 2 meters wide. What is the total area of the new park including the path?', 'First, we need to calculate the area of the original park, which is length times width. So, the area of the park is 60 meters * 40 meters = 2400 square meters.\n\nNext, we add the width of the path to both the length and the width of the park to get the new dimensions. The new length is 60 meters + 2 meters + 2 meters = 64 meters and the new width is 40 meters + 2 meters + 2 meters = 44 meters.\n\nNow, we calculate the area of the new park including the path, which is new length times new width. So, the area of the new park is 64 meters * 44 meters = 2816 square meters.'), ("open nat\n\n-- define initial number of apples\ndef johns_apples : ℕ := 5\ndef marys_apples : ℕ := 3\n\n-- add mary's apples to john's\ndef new_total : ℕ := johns_apples + marys_apples\n\n-- multiply the new total by 2\ndef moms_apples : ℕ := new_total * 2\n\n-- add the apples john's mother gives him to the new total\ndef final_total : ℕ := new_total + moms_apples\n\n-- prove the final total is 24\nexample : final_total = 24 :=\nbegin\n  unfold final_total, -- replace final_total with its definition\n  unfold moms_apples, -- replace moms_apples with its definition\n  unfold new_total, -- replace new_total with its definition\n  refl, -- since both sides of the equation are now the same, the proof is complete\nend", "John has 5 apples in his basket. His friend Mary gives him 3 more apples. Then, John's mother gives him 2 times the number of apples he has now. How many apples does John have in total?", "First, we add the apples John has and the ones Mary gave him. So, 5 + 3 = 8 apples. Then, John's mother gives him 2 times the apples he has now. So, we multiply 8 by 2, which equals 16. Therefore, John now has 8 (the apples he had initially) + 16 (the apples his mother gave him) = 24 apples."), ('import data.real.basic\n\n-- defining the rectangles\ndef rectangle_A : ℝ × ℝ := (5, 3)\ndef rectangle_B : ℝ × ℝ := (3, 5)\n\n-- calculating the areas\ndef area_rectangle : ℝ × ℝ → ℝ \n| (length, width) := length * width\n\n-- proving the theorem\ntheorem rectangle_areas_are_equal : \n  area_rectangle rectangle_A = area_rectangle rectangle_B :=\nbegin\n  dsimp [rectangle_A, rectangle_B, area_rectangle],\n  apply mul_comm,\nend', 'Given two rectangles, Rectangle A and Rectangle B. The length of Rectangle A is 5 units and the width is 3 units. The length of Rectangle B is 3 units and the width is 5 units. Are the areas of Rectangle A and Rectangle B the same?', 'The area of a rectangle is given by the formula: length × width. For Rectangle A, the area is 5 units × 3 units = 15 square units. For Rectangle B, the area is 3 units × 5 units = 15 square units. Therefore, the areas of Rectangle A and Rectangle B are the same.'), ('open nat\n\ndef johns_apples : ℕ := 375\ndef marys_apples : ℕ := 524\ndef given_apples : ℕ := 100\n\ndef john_after := johns_apples - given_apples\ndef mary_after := marys_apples + given_apples\n\nexample : john_after = 375 - 100 := rfl \nexample : mary_after = 524 + 100 := rfl', 'John has 375 apples and Mary has 524 apples. If John gives Mary 100 apples, how many apples will each of them have?', "First, let's subtract 100 from the number of apples John has, which is 375. This gives us 375 - 100 = 275. So John will have 275 apples after giving Mary 100 apples. \n\nThen, let's add the 100 apples John gives to the number of apples Mary already has, which is 524. This gives us 524 + 100 = 624. So Mary will have 624 apples after receiving 100 apples from John.\n\nSo, after the transaction, John will have 275 apples and Mary will have 624 apples."), ('def stickers_initially := 120\ndef friends := 5\ndef stickers_per_friend := stickers_initially / friends -- each friend gets 24 stickers\n\ndef extra_stickers := 3\ndef stickers_for_first_three_friends := stickers_per_friend + 1 -- the first 3 friends get 25 stickers\ndef stickers_for_other_friends := stickers_per_friend -- the other 2 friends get 24 stickers\n\n#check stickers_for_first_three_friends -- output should be 25\n#check stickers_for_other_friends -- output should be 24', 'Sarah has 120 stickers. She wants to give equal amounts to her 5 friends. After distributing the stickers, she found 3 more stickers in her bag. If she gives these 3 stickers to her first 3 friends, how many stickers does each friend have now?', 'First, Sarah divides her 120 stickers equally among her 5 friends. This means each friend gets 120 / 5 = 24 stickers. Then, Sarah finds 3 more stickers and gives one each to her first 3 friends. So, these three friends each have 24 + 1 = 25 stickers, and the other two friends still have 24 stickers.'), ('import data.nat.basic\n\nopen nat\n\n-- define the value of the digit\ndef value_of_digit (digit : ℕ) (place : ℕ) : ℕ :=\ndigit * place\n\n-- define the place of digit 4 in the number 345\ndef place_of_digit : ℕ := 10\n\n-- compute the value of digit 4 in the number 345\ndef value_of_4_in_345 : ℕ :=\nvalue_of_digit 4 place_of_digit \n\n#eval value_of_4_in_345  -- output is 40', 'If we have the number 345, what is the place value of 4 in this number?', 'The place value of 4 in the number 345 is 40. Because, in the number 345, 4 is in the tens place. And the value of the tens place is 10. So, 4 times 10 equals 40.'), ("import data.real.basic\n\n-- Define the function for John's income\ndef I (x : ℝ) := 2*x - 50\n\n-- Prove that John's income for the day he sold 100 candies was $150\nexample : I 100 = 150 :=\nbegin\n  -- Calculate the income\n  unfold I,\n  -- Apply addition and subtraction\n  ring,\nend", "John has a candy shop. He sells candies for $2 each. He also spends $50 every day on various expenses (rent, utilities, etc.). If he sells 'x' number of candies each day, we can represent his daily income as a function of 'x', i.e., I(x) = 2x - 50. \n\nOne day, John sold 100 candies. What was his income for that day?", "John's daily income is represented by the function I(x) = 2x - 50, where 'x' is the number of candies sold. On the day he sold 100 candies, we could substitute x = 100 into the function to find out his income.\n\nSo, I(100) = 2*100 - 50 = 200 - 50 = $150.\n\nTherefore, John made $150 on the day he sold 100 candies."), ('open nat\n\nexample : (5 - 3 = 2) :=\nbegin\n    refl,\nend', 'If you have 5 apples and then you give 3 apples to your friend, how many apples do you have left?', 'If you have 5 apples and you give 3 away, you can calculate how many you have left by subtracting the number of apples you gave away from the number you originally had. So, 5 - 3 = 2. Therefore, you have 2 apples left.'), ('import data.real.basic\n\n-- Define the function `square_area` which calculates the area of a square given the length of one side\ndef square_area (side_length : ℝ) : ℝ := side_length * side_length\n\n-- Prove the theorem\nexample : square_area 2.5 = 6.25 :=\nbegin\n    unfold square_area,  -- Expand the definition of `square_area`\n    norm_num,            -- Simplify the numerical calculation\nend', 'A square field has a side length of 2.5 meters. What is the area of the square field in square meters?', 'To find the area of a square, we need to multiply the length of one side by itself. In this case, the length of one side of the square field is 2.5 meters. Therefore, the area of the square field is 2.5 meters * 2.5 meters, which equals 6.25 square meters.'), ('import data.real.basic\n\n-- Defining the linear equation as a real function\ndef f (x : ℝ) : ℝ := 3*x - 5\n\n-- Proving the theorem\nexample : f 4 = 7 :=\nbegin\n  unfold f, -- Expanding the definition of f\n  norm_num, -- Simplifying the arithmetic\nend', 'Prove that the solution to the linear equation 3x - 5 = 7 is x = 4.', 'First, we need to isolate x in the equation. We can start by adding 5 to both sides of the equation to balance it. This gives us 3x = 12. Then we can divide both sides of the equation by 3 to solve for x, which gives us x = 4. So, x = 4 is indeed the solution to the linear equation 3x - 5 = 7.')]
print(f"{len(fewshot_examples)} examples loaded.")
UNICODE_TO_LATEX = {
    '¬': r'\neg',
    '±': r'\pm',
    '²': r'^2',
    '³': r'^3',
    '³⟩': r'^3\rangle',
    '×': r'\times',
    '÷': r'\div',
    '̄': r'\overline',
    'Δ': r'\Delta',
    'Π': r'\Pi',
    'Σ': r'\Sigma',
    'α': r'\alpha',
    'β': r'\beta',
    'θ': r'\theta',
    'λ': r'\lambda',
    'μ': r'\mu',
    'π': r'\pi',
    'σ': r'\sigma',
    'ᾰ': r'\textalpha\textsubtilde{a}',
    '•': r'\bullet',
    '‹': r'\guilsinglleft',
    '›': r'\guilsinglright',
    '⁻¹': r'^{-1}',
    '₀': r'_{0}',
    '₁': r'_{1}',
    '₂': r'_{2}',
    '₃': r'_{3}',
    '₄': r'_{4}',
    '₅': r'_{5}',
    'ₓ': r'_{x}',
    'ℂ': r'\mathbb{C}',
    'ℕ': r'\mathbb{N}',
    'ℚ': r'\mathbb{Q}',
    'ℝ': r'\mathbb{R}',
    'ℤ': r'\mathbb{Z}',
    '←': r'\leftarrow',
    '↑': r'\uparrow',
    '→': r'\rightarrow',
    '→ₗ': r'\rightarrow_l',
    '↔': r'\leftrightarrow',
    '∀': r'\forall',
    '∂': r'\partial',
    '∃': r'\exists',
    '∈': r'\in',
    '∘': r'\circ',
    '√': r'\sqrt{}',
    '∞': r'\infty',
    '∠': r'\angle',
    '∣': r'\mid',
    '∧': r'\wedge',
    '∨': r'\vee',
    '∩': r'\cap',
    '∫': r'\int',
    '≈': r'\approx',
    '≠': r'\neq',
    '≤': r'\leq',
    '≥': r'\geq',
    '▸': r'\blacktriangleright',
    '⟨': r'\langle',
    '⟩': r'\rangle',
    '⬝': r'\bigodot'
}

def replace_unicode_with_latex(text):
    # Sort keys by length in descending order to handle multi-character replacements correctly
    sorted_keys = sorted(UNICODE_TO_LATEX, key=len, reverse=True)
    
    # Create a regex pattern with all the keys
    pattern = re.compile('|'.join(re.escape(key) for key in sorted_keys))
    
    # Function to replace each match with the corresponding LaTeX symbol
    def translate(match):
        return UNICODE_TO_LATEX[match.group(0)]
    
    # Substitute using the pattern and translation function
    return pattern.sub(translate, text)

class Submission:
    """A submission template. """

    def __init__(self, output_file: str):
        """You need to specify the following arguments."""

        self.output_file = output_file

        self.task = "Auto_Informalization"    # [Auto_Formalization, Auto_Informalization]
        self.phase = "development"          # [development, final]

        self.api_key = ""

        self.fewshot_example_prompt = """You are a math expert and familar with Lean formal language. You are tasked with translating Lean formal proof to natural language. I am going to give you 1000 examples of Lean formal proof, and their corresponding natural language problem and solution as follows."""
        for i in range(len(fewshot_examples)):
            self.fewshot_example_prompt += f"""Lean Proof:
```lean
{fewshot_examples[i][0]}
```

Natural Language Problem:

{fewshot_examples[i][1]}

Natural Language Solution:

{fewshot_examples[i][2]}

"""

        self.prompt ="""
        
Following the above examples, please provide the natural language problem and solution for the following Lean formal proof.
        
Lean Proof:
```
{formal_proof}        
```

"""


        # custom generation parameters
        self.max_tokens = 1024
        self.temperature = 0.2
        self.top_p = 0.95
        self.frequency_penalty = 0.0

    def send_request(self, prompt, temperature=0.2, max_output_tokens=800, top_p=0.95, top_k=None, stop_sequences=None):
        """
        Generates content using the specified prompt and generation settings.

        Args:
        - prompt (str): The input text prompt.
        - temperature (float): Sampling temperature.
        - max_output_tokens (int): Maximum number of tokens in the output.
        - top_p (float): Top-p sampling parameter.
        - top_k (int): Top-k sampling parameter.
        - stop_sequences (list): List of stop sequences.

        Returns:
        - str: The generated text content.
        """

        # Get your API key from environment variable
        api_key = self.api_key

        if not api_key:
            raise ValueError("API key not found. Please set the GOOGLE_API_KEY environment variable.")

        # Define the endpoint and headers
        conn = http.client.HTTPSConnection("generativelanguage.googleapis.com")
        headers = {
            'Content-Type': 'application/json'
        }

        # Define the payload
        payload = {
            "contents": [{
                "parts": [{
                    "text": prompt
                }]
            }],
            "safetySettings": [
                {
                    "category": "HARM_CATEGORY_DANGEROUS_CONTENT",
                    "threshold": "BLOCK_ONLY_HIGH"
                }
            ],
            "generationConfig": {
                "stopSequences": stop_sequences if stop_sequences else [],
                "temperature": temperature,
                "maxOutputTokens": max_output_tokens,
                "topP": top_p,
                # "topK": top_k
            }
        }

        # Convert payload to JSON string
        json_payload = json.dumps(payload)

        # Make the POST request
        conn.request("POST", f"/v1beta/models/gemini-1.5-pro:generateContent?key={api_key}", json_payload, headers)
        response = conn.getresponse()

        # Check if the request was successful
        if response.status == 200:
            result = json.loads(response.read())
            try:
                # Extract the answer part from the JSON response
                answer = result['candidates'][0]['content']['parts'][0]['text']
                return answer
            except (KeyError, IndexError) as e:
                return f"Error parsing response: {e}"
        else:
            return f"Request failed with status code {response.status}"

    def generate(self, prompt):
        """We DO NOT recommend modifying this function, as 
        it will be used to test if the model is accessable"""

        return self.send_request(prompt)

    def post_process(self, model_output: str):
        """You can post-process the model output here, 
        such as extracting the formal proof from the model output."""
        print(model_output)

        problem = ""
        solution = ""
        if "Natural Language Problem:" in model_output:
            problem = model_output.split("Natural Language Problem:")[1].strip()
            if "Natural Language Solution:" in problem:
                problem = problem.split("Natural Language Solution:")[0].strip()

        if "Natural Language Solution:" in model_output:
            solution = model_output.split("Natural Language Solution:")[1].strip()
        
        print("==========parsed==========")
        print(problem)
        print(solution)

        return problem, solution

    def run(self, input_data: str):
        """Run your model on the given input data, and store the 
        predictions into the output file."""

        with open(input_data, 'r', encoding="utf8") as f:
            datas = json.load(f)

        outputs = []
        for data in tqdm(datas, file=sys.stdout):
            input_text = self.fewshot_example_prompt + self.prompt.format(
                formal_proof=data["formal_proof"]
            )
            
            output = self.generate(prompt=input_text)
            problem, solution = self.post_process(output)
            outputs.append(dict(
                name=data["name"],
                problem=problem,
                solution=solution,
            ))

        if not os.path.exists(self.output_file):
            os.makedirs(os.path.dirname(self.output_file), exist_ok=True)
        with open(self.output_file, 'w', encoding='utf8') as f:
            json.dump(outputs, f, indent=4, ensure_ascii=False)
